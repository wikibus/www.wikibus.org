/*! Select2 4.0.6-rc.1 | https://github.com/select2/select2/blob/master/LICENSE.md */
!(function (a) { typeof define === 'function' && define.amd ? define(['jquery'], a) : typeof module === 'object' && module.exports ? module.exports = function (b, c) { return void 0 === c && (c = typeof window !== 'undefined' ? require('jquery') : require('jquery')(b)), a(c), c } : a(jQuery) }((a) => { const b = (function () { if (a && a.fn && a.fn.select2 && a.fn.select2.amd) var b = a.fn.select2.amd; var b; return (function () { if (!b || !b.requirejs) { b ? c = b : b = {}; let a, c, d; !(function (b) { function e(a, b) { return v.call(a, b) } function f(a, b) { let c; let d; let e; let f; let g; let h; let i; let j; let k; let l; let m; let n; const o = b && b.split('/'); const p = t.map; const q = p && p['*'] || {}; if (a) { for (a = a.split('/'), g = a.length - 1, t.nodeIdCompat && x.test(a[g]) && (a[g] = a[g].replace(x, '')), a[0].charAt(0) === '.' && o && (n = o.slice(0, o.length - 1), a = n.concat(a)), k = 0; k < a.length; k++) if ((m = a[k]) === '.')a.splice(k, 1), k -= 1; else if (m === '..') { if (k === 0 || k === 1 && a[2] === '..' || a[k - 1] === '..') continue; k > 0 && (a.splice(k - 1, 2), k -= 2) }a = a.join('/') } if ((o || q) && p) { for (c = a.split('/'), k = c.length; k > 0; k -= 1) { if (d = c.slice(0, k).join('/'), o) for (l = o.length; l > 0; l -= 1) if ((e = p[o.slice(0, l).join('/')]) && (e = e[d])) { f = e, h = k; break } if (f) break; !i && q && q[d] && (i = q[d], j = k) }!f && i && (f = i, h = j), f && (c.splice(0, h, f), a = c.join('/')) } return a } function g(a, c) { return function () { const d = w.call(arguments, 0); return typeof d[0] !== 'string' && d.length === 1 && d.push(null), o.apply(b, d.concat([a, c])) } } function h(a) { return function (b) { return f(b, a) } } function i(a) { return function (b) { r[a] = b } } function j(a) { if (e(s, a)) { const c = s[a]; delete s[a], u[a] = !0, n.apply(b, c) } if (!e(r, a) && !e(u, a)) throw new Error(`No ${a}`); return r[a] } function k(a) { let b; const c = a ? a.indexOf('!') : -1; return c > -1 && (b = a.substring(0, c), a = a.substring(c + 1, a.length)), [b, a] } function l(a) { return a ? k(a) : [] } function m(a) { return function () { return t && t.config && t.config[a] || {} } } let n; let o; let p; let q; var r = {}; var s = {}; var t = {}; var u = {}; var v = Object.prototype.hasOwnProperty; var w = [].slice; var x = /\.js$/; p = function (a, b) { let c; let d = k(a); let e = d[0]; const g = b[1]; return a = d[1], e && (e = f(e, g), c = j(e)), e ? a = c && c.normalize ? c.normalize(a, h(g)) : f(a, g) : (a = f(a, g), d = k(a), e = d[0], a = d[1], e && (c = j(e))), { f: e ? `${e}!${a}` : a, n: a, pr: e, p: c } }, q = { require(a) { return g(a) }, exports(a) { const b = r[a]; return void 0 !== b ? b : r[a] = {} }, module(a) { return { id: a, uri: '', exports: r[a], config: m(a) } } }, n = function (a, c, d, f) { let h; let k; let m; let n; let o; let t; let v; const w = []; const x = typeof d; if (f = f || a, t = l(f), x === 'undefined' || x === 'function') { for (c = !c.length && d.length ? ['require', 'exports', 'module'] : c, o = 0; o < c.length; o += 1) if (n = p(c[o], t), (k = n.f) === 'require')w[o] = q.require(a); else if (k === 'exports')w[o] = q.exports(a), v = !0; else if (k === 'module')h = w[o] = q.module(a); else if (e(r, k) || e(s, k) || e(u, k))w[o] = j(k); else { if (!n.p) throw new Error(`${a} missing ${k}`); n.p.load(n.n, g(f, !0), i(k), {}), w[o] = r[k] }m = d ? d.apply(r[a], w) : void 0, a && (h && h.exports !== b && h.exports !== r[a] ? r[a] = h.exports : m === b && v || (r[a] = m)) } else a && (r[a] = d) }, a = c = o = function (a, c, d, e, f) { if (typeof a === 'string') return q[a] ? q[a](c) : j(p(a, l(c)).f); if (!a.splice) { if (t = a, t.deps && o(t.deps, t.callback), !c) return; c.splice ? (a = c, c = d, d = null) : a = b } return c = c || function () {}, typeof d === 'function' && (d = e, e = f), e ? n(b, a, c, d) : setTimeout(() => { n(b, a, c, d) }, 4), o }, o.config = function (a) { return o(a) }, a._defined = r, d = function (a, b, c) { if (typeof a !== 'string') throw new Error('See almond README: incorrect module build, no module name'); b.splice || (c = b, b = []), e(r, a) || e(s, a) || (s[a] = [a, b, c]) }, d.amd = { jQuery: !0 } }()), b.requirejs = a, b.require = c, b.define = d } }()), b.define('almond', () => {}), b.define('jquery', [], () => { const b = a || $; return b == null && console && console.error && console.error('Select2: An instance of jQuery or a jQuery-compatible library was not found. Make sure that you are including jQuery before Select2 on your web page.'), b }), b.define('select2/utils', ['jquery'], (a) => { function b(a) { const b = a.prototype; const c = []; for (const d in b) { typeof b[d] === 'function' && (d !== 'constructor' && c.push(d)) } return c } const c = {}; c.Extend = function (a, b) { function c() { this.constructor = a } const d = {}.hasOwnProperty; for (const e in b)d.call(b, e) && (a[e] = b[e]); return c.prototype = b.prototype, a.prototype = new c(), a.__super__ = b.prototype, a }, c.Decorate = function (a, c) { function d() { const b = Array.prototype.unshift; const d = c.prototype.constructor.length; let e = a.prototype.constructor; d > 0 && (b.call(arguments, a.prototype.constructor), e = c.prototype.constructor), e.apply(this, arguments) } function e() { this.constructor = d } const f = b(c); const g = b(a); c.displayName = a.displayName, d.prototype = new e(); for (let h = 0; h < g.length; h++) { const i = g[h]; d.prototype[i] = a.prototype[i] } for (let j = function (a) { let b = function () {}; a in d.prototype && (b = d.prototype[a]); const e = c.prototype[a]; return function () { return Array.prototype.unshift.call(arguments, b), e.apply(this, arguments) } }, k = 0; k < f.length; k++) { const l = f[k]; d.prototype[l] = j(l) } return d }; const d = function () { this.listeners = {} }; d.prototype.on = function (a, b) { this.listeners = this.listeners || {}, a in this.listeners ? this.listeners[a].push(b) : this.listeners[a] = [b] }, d.prototype.trigger = function (a) { const b = Array.prototype.slice; let c = b.call(arguments, 1); this.listeners = this.listeners || {}, c == null && (c = []), c.length === 0 && c.push({}), c[0]._type = a, a in this.listeners && this.invoke(this.listeners[a], b.call(arguments, 1)), '*' in this.listeners && this.invoke(this.listeners['*'], arguments) }, d.prototype.invoke = function (a, b) { for (let c = 0, d = a.length; c < d; c++)a[c].apply(this, b) }, c.Observable = d, c.generateChars = function (a) { for (var b = '', c = 0; c < a; c++) { b += Math.floor(36 * Math.random()).toString(36) } return b }, c.bind = function (a, b) { return function () { a.apply(b, arguments) } }, c._convertData = function (a) { for (const b in a) { const c = b.split('-'); let d = a; if (c.length !== 1) { for (let e = 0; e < c.length; e++) { let f = c[e]; f = f.substring(0, 1).toLowerCase() + f.substring(1), f in d || (d[f] = {}), e == c.length - 1 && (d[f] = a[b]), d = d[f] } delete a[b] } } return a }, c.hasScroll = function (b, c) { const d = a(c); const e = c.style.overflowX; const f = c.style.overflowY; return (e !== f || f !== 'hidden' && f !== 'visible') && (e === 'scroll' || f === 'scroll' || (d.innerHeight() < c.scrollHeight || d.innerWidth() < c.scrollWidth)) }, c.escapeMarkup = function (a) { const b = { '\\': '&#92;', '&': '&amp;', '<': '&lt;', '>': '&gt;', '"': '&quot;', "'": '&#39;', '/': '&#47;' }; return typeof a !== 'string' ? a : String(a).replace(/[&<>"'\/\\]/g, (a) => b[a]) }, c.appendMany = function (b, c) { if (a.fn.jquery.substr(0, 3) === '1.7') { let d = a(); a.map(c, (a) => { d = d.add(a) }), c = d }b.append(c) }, c.__cache = {}; let e = 0; return c.GetUniqueElementId = function (a) { let b = a.getAttribute('data-select2-id'); return b == null && (a.id ? (b = a.id, a.setAttribute('data-select2-id', b)) : (a.setAttribute('data-select2-id', ++e), b = e.toString())), b }, c.StoreData = function (a, b, d) { const e = c.GetUniqueElementId(a); c.__cache[e] || (c.__cache[e] = {}), c.__cache[e][b] = d }, c.GetData = function (b, d) { const e = c.GetUniqueElementId(b); return d ? c.__cache[e] && c.__cache[e][d] != null ? c.__cache[e][d] : a(b).data(d) : c.__cache[e] }, c.RemoveData = function (a) { const b = c.GetUniqueElementId(a); c.__cache[b] != null && delete c.__cache[b] }, c }), b.define('select2/results', ['jquery', './utils'], (a, b) => { function c(a, b, d) { this.$element = a, this.data = d, this.options = b, c.__super__.constructor.call(this) } return b.Extend(c, b.Observable), c.prototype.render = function () { const b = a('<ul class="select2-results__options" role="tree"></ul>'); return this.options.get('multiple') && b.attr('aria-multiselectable', 'true'), this.$results = b, b }, c.prototype.clear = function () { this.$results.empty() }, c.prototype.displayMessage = function (b) { const c = this.options.get('escapeMarkup'); this.clear(), this.hideLoading(); const d = a('<li role="treeitem" aria-live="assertive" class="select2-results__option"></li>'); const e = this.options.get('translations').get(b.message); d.append(c(e(b.args))), d[0].className += ' select2-results__message', this.$results.append(d) }, c.prototype.hideMessages = function () { this.$results.find('.select2-results__message').remove() }, c.prototype.append = function (a) { this.hideLoading(); const b = []; if (a.results == null || a.results.length === 0) return void (this.$results.children().length === 0 && this.trigger('results:message', { message: 'noResults' })); a.results = this.sort(a.results); for (let c = 0; c < a.results.length; c++) { const d = a.results[c]; const e = this.option(d); b.push(e) } this.$results.append(b) }, c.prototype.position = function (a, b) { b.find('.select2-results').append(a) }, c.prototype.sort = function (a) { return this.options.get('sorter')(a) }, c.prototype.highlightFirstItem = function () { const a = this.$results.find('.select2-results__option[aria-selected]'); const b = a.filter('[aria-selected=true]'); b.length > 0 ? b.first().trigger('mouseenter') : a.first().trigger('mouseenter'), this.ensureHighlightVisible() }, c.prototype.setClasses = function () { const c = this; this.data.current((d) => { const e = a.map(d, (a) => a.id.toString()); c.$results.find('.select2-results__option[aria-selected]').each(function () { const c = a(this); const d = b.GetData(this, 'data'); const f = `${d.id}`; d.element != null && d.element.selected || d.element == null && a.inArray(f, e) > -1 ? c.attr('aria-selected', 'true') : c.attr('aria-selected', 'false') }) }) }, c.prototype.showLoading = function (a) { this.hideLoading(); const b = this.options.get('translations').get('searching'); const c = { disabled: !0, loading: !0, text: b(a) }; const d = this.option(c); d.className += ' loading-results', this.$results.prepend(d) }, c.prototype.hideLoading = function () { this.$results.find('.loading-results').remove() }, c.prototype.option = function (c) { const d = document.createElement('li'); d.className = 'select2-results__option'; const e = { role: 'treeitem', 'aria-selected': 'false' }; c.disabled && (delete e['aria-selected'], e['aria-disabled'] = 'true'), c.id == null && delete e['aria-selected'], c._resultId != null && (d.id = c._resultId), c.title && (d.title = c.title), c.children && (e.role = 'group', e['aria-label'] = c.text, delete e['aria-selected']); for (const f in e) { const g = e[f]; d.setAttribute(f, g) } if (c.children) { const h = a(d); const i = document.createElement('strong'); i.className = 'select2-results__group'; a(i); this.template(c, i); for (var j = [], k = 0; k < c.children.length; k++) { const l = c.children[k]; const m = this.option(l); j.push(m) } const n = a('<ul></ul>', { class: 'select2-results__options select2-results__options--nested' }); n.append(j), h.append(i), h.append(n) } else this.template(c, d); return b.StoreData(d, 'data', c), d }, c.prototype.bind = function (c, d) { const e = this; const f = `${c.id}-results`; this.$results.attr('id', f), c.on('results:all', (a) => { e.clear(), e.append(a.data), c.isOpen() && (e.setClasses(), e.highlightFirstItem()) }), c.on('results:append', (a) => { e.append(a.data), c.isOpen() && e.setClasses() }), c.on('query', (a) => { e.hideMessages(), e.showLoading(a) }), c.on('select', () => { c.isOpen() && (e.setClasses(), e.highlightFirstItem()) }), c.on('unselect', () => { c.isOpen() && (e.setClasses(), e.highlightFirstItem()) }), c.on('open', () => { e.$results.attr('aria-expanded', 'true'), e.$results.attr('aria-hidden', 'false'), e.setClasses(), e.ensureHighlightVisible() }), c.on('close', () => { e.$results.attr('aria-expanded', 'false'), e.$results.attr('aria-hidden', 'true'), e.$results.removeAttr('aria-activedescendant') }), c.on('results:toggle', () => { const a = e.getHighlightedResults(); a.length !== 0 && a.trigger('mouseup') }), c.on('results:select', () => { const a = e.getHighlightedResults(); if (a.length !== 0) { const c = b.GetData(a[0], 'data'); a.attr('aria-selected') == 'true' ? e.trigger('close', {}) : e.trigger('select', { data: c }) } }), c.on('results:previous', () => { const a = e.getHighlightedResults(); const b = e.$results.find('[aria-selected]'); const c = b.index(a); if (!(c <= 0)) { let d = c - 1; a.length === 0 && (d = 0); const f = b.eq(d); f.trigger('mouseenter'); const g = e.$results.offset().top; const h = f.offset().top; const i = e.$results.scrollTop() + (h - g); d === 0 ? e.$results.scrollTop(0) : h - g < 0 && e.$results.scrollTop(i) } }), c.on('results:next', () => { const a = e.getHighlightedResults(); const b = e.$results.find('[aria-selected]'); const c = b.index(a); const d = c + 1; if (!(d >= b.length)) { const f = b.eq(d); f.trigger('mouseenter'); const g = e.$results.offset().top + e.$results.outerHeight(!1); const h = f.offset().top + f.outerHeight(!1); const i = e.$results.scrollTop() + h - g; d === 0 ? e.$results.scrollTop(0) : h > g && e.$results.scrollTop(i) } }), c.on('results:focus', (a) => { a.element.addClass('select2-results__option--highlighted') }), c.on('results:message', (a) => { e.displayMessage(a) }), a.fn.mousewheel && this.$results.on('mousewheel', (a) => { const b = e.$results.scrollTop(); const c = e.$results.get(0).scrollHeight - b + a.deltaY; const d = a.deltaY > 0 && b - a.deltaY <= 0; const f = a.deltaY < 0 && c <= e.$results.height(); d ? (e.$results.scrollTop(0), a.preventDefault(), a.stopPropagation()) : f && (e.$results.scrollTop(e.$results.get(0).scrollHeight - e.$results.height()), a.preventDefault(), a.stopPropagation()) }), this.$results.on('mouseup', '.select2-results__option[aria-selected]', function (c) { const d = a(this); const f = b.GetData(this, 'data'); if (d.attr('aria-selected') === 'true') return void (e.options.get('multiple') ? e.trigger('unselect', { originalEvent: c, data: f }) : e.trigger('close', {})); e.trigger('select', { originalEvent: c, data: f }) }), this.$results.on('mouseenter', '.select2-results__option[aria-selected]', function (c) { const d = b.GetData(this, 'data'); e.getHighlightedResults().removeClass('select2-results__option--highlighted'), e.trigger('results:focus', { data: d, element: a(this) }) }) }, c.prototype.getHighlightedResults = function () { return this.$results.find('.select2-results__option--highlighted') }, c.prototype.destroy = function () { this.$results.remove() }, c.prototype.ensureHighlightVisible = function () { const a = this.getHighlightedResults(); if (a.length !== 0) { const b = this.$results.find('[aria-selected]'); const c = b.index(a); const d = this.$results.offset().top; const e = a.offset().top; let f = this.$results.scrollTop() + (e - d); const g = e - d; f -= 2 * a.outerHeight(!1), c <= 2 ? this.$results.scrollTop(0) : (g > this.$results.outerHeight() || g < 0) && this.$results.scrollTop(f) } }, c.prototype.template = function (b, c) { const d = this.options.get('templateResult'); const e = this.options.get('escapeMarkup'); const f = d(b, c); f == null ? c.style.display = 'none' : typeof f === 'string' ? c.innerHTML = e(f) : a(c).append(f) }, c }), b.define('select2/keys', [], () => ({ BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, ESC: 27, SPACE: 32, PAGE_UP: 33, PAGE_DOWN: 34, END: 35, HOME: 36, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40, DELETE: 46 })), b.define('select2/selection/base', ['jquery', '../utils', '../keys'], (a, b, c) => { function d(a, b) { this.$element = a, this.options = b, d.__super__.constructor.call(this) } return b.Extend(d, b.Observable), d.prototype.render = function () { const c = a('<span class="select2-selection" role="combobox"  aria-haspopup="true" aria-expanded="false"></span>'); return this._tabindex = 0, b.GetData(this.$element[0], 'old-tabindex') != null ? this._tabindex = b.GetData(this.$element[0], 'old-tabindex') : this.$element.attr('tabindex') != null && (this._tabindex = this.$element.attr('tabindex')), c.attr('title', this.$element.attr('title')), c.attr('tabindex', this._tabindex), this.$selection = c, c }, d.prototype.bind = function (a, b) { const d = this; const e = (a.id, `${a.id}-results`); this.container = a, this.$selection.on('focus', (a) => { d.trigger('focus', a) }), this.$selection.on('blur', (a) => { d._handleBlur(a) }), this.$selection.on('keydown', (a) => { d.trigger('keypress', a), a.which === c.SPACE && a.preventDefault() }), a.on('results:focus', (a) => { d.$selection.attr('aria-activedescendant', a.data._resultId) }), a.on('selection:update', (a) => { d.update(a.data) }), a.on('open', () => { d.$selection.attr('aria-expanded', 'true'), d.$selection.attr('aria-owns', e), d._attachCloseHandler(a) }), a.on('close', () => { d.$selection.attr('aria-expanded', 'false'), d.$selection.removeAttr('aria-activedescendant'), d.$selection.removeAttr('aria-owns'), d.$selection.focus(), window.setTimeout(() => { d.$selection.focus() }, 0), d._detachCloseHandler(a) }), a.on('enable', () => { d.$selection.attr('tabindex', d._tabindex) }), a.on('disable', () => { d.$selection.attr('tabindex', '-1') }) }, d.prototype._handleBlur = function (b) { const c = this; window.setTimeout(() => { document.activeElement == c.$selection[0] || a.contains(c.$selection[0], document.activeElement) || c.trigger('blur', b) }, 1) }, d.prototype._attachCloseHandler = function (c) { a(document.body).on(`mousedown.select2.${c.id}`, (c) => { const d = a(c.target); const e = d.closest('.select2'); a('.select2.select2-container--open').each(function () { a(this), this != e[0] && b.GetData(this, 'element').select2('close') }) }) }, d.prototype._detachCloseHandler = function (b) { a(document.body).off(`mousedown.select2.${b.id}`) }, d.prototype.position = function (a, b) { b.find('.selection').append(a) }, d.prototype.destroy = function () { this._detachCloseHandler(this.container) }, d.prototype.update = function (a) { throw new Error('The `update` method must be defined in child classes.') }, d }), b.define('select2/selection/single', ['jquery', './base', '../utils', '../keys'], (a, b, c, d) => { function e() { e.__super__.constructor.apply(this, arguments) } return c.Extend(e, b), e.prototype.render = function () { const a = e.__super__.render.call(this); return a.addClass('select2-selection--single'), a.html('<span class="select2-selection__rendered"></span><span class="select2-selection__arrow" role="presentation"><b role="presentation"></b></span>'), a }, e.prototype.bind = function (a, b) { const c = this; e.__super__.bind.apply(this, arguments); const d = `${a.id}-container`; this.$selection.find('.select2-selection__rendered').attr('id', d).attr('role', 'textbox').attr('aria-readonly', 'true'), this.$selection.attr('aria-labelledby', d), this.$selection.on('mousedown', (a) => { a.which === 1 && c.trigger('toggle', { originalEvent: a }) }), this.$selection.on('focus', (a) => {}), this.$selection.on('blur', (a) => {}), a.on('focus', (b) => { a.isOpen() || c.$selection.focus() }) }, e.prototype.clear = function () { const a = this.$selection.find('.select2-selection__rendered'); a.empty(), a.removeAttr('title') }, e.prototype.display = function (a, b) { const c = this.options.get('templateSelection'); return this.options.get('escapeMarkup')(c(a, b)) }, e.prototype.selectionContainer = function () { return a('<span></span>') }, e.prototype.update = function (a) { if (a.length === 0) return void this.clear(); const b = a[0]; const c = this.$selection.find('.select2-selection__rendered'); const d = this.display(b, c); c.empty().append(d), c.attr('title', b.title || b.text) }, e }), b.define('select2/selection/multiple', ['jquery', './base', '../utils'], (a, b, c) => { function d(a, b) { d.__super__.constructor.apply(this, arguments) } return c.Extend(d, b), d.prototype.render = function () { const a = d.__super__.render.call(this); return a.addClass('select2-selection--multiple'), a.html('<ul class="select2-selection__rendered"></ul>'), a }, d.prototype.bind = function (b, e) { const f = this; d.__super__.bind.apply(this, arguments), this.$selection.on('click', (a) => { f.trigger('toggle', { originalEvent: a }) }), this.$selection.on('click', '.select2-selection__choice__remove', function (b) { if (!f.options.get('disabled')) { const d = a(this); const e = d.parent(); const g = c.GetData(e[0], 'data'); f.trigger('unselect', { originalEvent: b, data: g }) } }) }, d.prototype.clear = function () { const a = this.$selection.find('.select2-selection__rendered'); a.empty(), a.removeAttr('title') }, d.prototype.display = function (a, b) { const c = this.options.get('templateSelection'); return this.options.get('escapeMarkup')(c(a, b)) }, d.prototype.selectionContainer = function () { return a('<li class="select2-selection__choice"><span class="select2-selection__choice__remove" role="presentation">&times;</span></li>') }, d.prototype.update = function (a) { if (this.clear(), a.length !== 0) { for (var b = [], d = 0; d < a.length; d++) { const e = a[d]; const f = this.selectionContainer(); const g = this.display(e, f); f.append(g), f.attr('title', e.title || e.text), c.StoreData(f[0], 'data', e), b.push(f) } const h = this.$selection.find('.select2-selection__rendered'); c.appendMany(h, b) } }, d }), b.define('select2/selection/placeholder', ['../utils'], (a) => { function b(a, b, c) { this.placeholder = this.normalizePlaceholder(c.get('placeholder')), a.call(this, b, c) } return b.prototype.normalizePlaceholder = function (a, b) { return typeof b === 'string' && (b = { id: '', text: b }), b }, b.prototype.createPlaceholder = function (a, b) { const c = this.selectionContainer(); return c.html(this.display(b)), c.addClass('select2-selection__placeholder').removeClass('select2-selection__choice'), c }, b.prototype.update = function (a, b) { const c = b.length == 1 && b[0].id != this.placeholder.id; if (b.length > 1 || c) return a.call(this, b); this.clear(); const d = this.createPlaceholder(this.placeholder); this.$selection.find('.select2-selection__rendered').append(d) }, b }), b.define('select2/selection/allowClear', ['jquery', '../keys', '../utils'], (a, b, c) => { function d() {} return d.prototype.bind = function (a, b, c) { const d = this; a.call(this, b, c), this.placeholder == null && this.options.get('debug') && window.console && console.error && console.error('Select2: The `allowClear` option should be used in combination with the `placeholder` option.'), this.$selection.on('mousedown', '.select2-selection__clear', (a) => { d._handleClear(a) }), b.on('keypress', (a) => { d._handleKeyboardClear(a, b) }) }, d.prototype._handleClear = function (a, b) { if (!this.options.get('disabled')) { const d = this.$selection.find('.select2-selection__clear'); if (d.length !== 0) { b.stopPropagation(); const e = c.GetData(d[0], 'data'); const f = this.$element.val(); this.$element.val(this.placeholder.id); let g = { data: e }; if (this.trigger('clear', g), g.prevented) return void this.$element.val(f); for (let h = 0; h < e.length; h++) if (g = { data: e[h] }, this.trigger('unselect', g), g.prevented) return void this.$element.val(f); this.$element.trigger('change'), this.trigger('toggle', {}) } } }, d.prototype._handleKeyboardClear = function (a, c, d) { d.isOpen() || c.which != b.DELETE && c.which != b.BACKSPACE || this._handleClear(c) }, d.prototype.update = function (b, d) { if (b.call(this, d), !(this.$selection.find('.select2-selection__placeholder').length > 0 || d.length === 0)) { const e = a('<span class="select2-selection__clear">&times;</span>'); c.StoreData(e[0], 'data', d), this.$selection.find('.select2-selection__rendered').prepend(e) } }, d }), b.define('select2/selection/search', ['jquery', '../utils', '../keys'], (a, b, c) => { function d(a, b, c) { a.call(this, b, c) } return d.prototype.render = function (b) { const c = a('<li class="select2-search select2-search--inline"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="none" spellcheck="false" role="textbox" aria-autocomplete="list" /></li>'); this.$searchContainer = c, this.$search = c.find('input'); const d = b.call(this); return this._transferTabIndex(), d }, d.prototype.bind = function (a, d, e) { const f = this; a.call(this, d, e), d.on('open', () => { f.$search.trigger('focus') }), d.on('close', () => { f.$search.val(''), f.$search.removeAttr('aria-activedescendant'), f.$search.trigger('focus') }), d.on('enable', () => { f.$search.prop('disabled', !1), f._transferTabIndex() }), d.on('disable', () => { f.$search.prop('disabled', !0) }), d.on('focus', (a) => { f.$search.trigger('focus') }), d.on('results:focus', (a) => { f.$search.attr('aria-activedescendant', a.id) }), this.$selection.on('focusin', '.select2-search--inline', (a) => { f.trigger('focus', a) }), this.$selection.on('focusout', '.select2-search--inline', (a) => { f._handleBlur(a) }), this.$selection.on('keydown', '.select2-search--inline', (a) => { if (a.stopPropagation(), f.trigger('keypress', a), f._keyUpPrevented = a.isDefaultPrevented(), a.which === c.BACKSPACE && f.$search.val() === '') { const d = f.$searchContainer.prev('.select2-selection__choice'); if (d.length > 0) { const e = b.GetData(d[0], 'data'); f.searchRemoveChoice(e), a.preventDefault() } } }); const g = document.documentMode; const h = g && g <= 11; this.$selection.on('input.searchcheck', '.select2-search--inline', (a) => { if (h) return void f.$selection.off('input.search input.searchcheck'); f.$selection.off('keyup.search') }), this.$selection.on('keyup.search input.search', '.select2-search--inline', (a) => { if (h && a.type === 'input') return void f.$selection.off('input.search input.searchcheck'); const b = a.which; b != c.SHIFT && b != c.CTRL && b != c.ALT && b != c.TAB && f.handleSearch(a) }) }, d.prototype._transferTabIndex = function (a) { this.$search.attr('tabindex', this.$selection.attr('tabindex')), this.$selection.attr('tabindex', '-1') }, d.prototype.createPlaceholder = function (a, b) { this.$search.attr('placeholder', b.text) }, d.prototype.update = function (a, b) { const c = this.$search[0] == document.activeElement; if (this.$search.attr('placeholder', ''), a.call(this, b), this.$selection.find('.select2-selection__rendered').append(this.$searchContainer), this.resizeSearch(), c) { this.$element.find('[data-select2-tag]').length ? this.$element.focus() : this.$search.focus() } }, d.prototype.handleSearch = function () { if (this.resizeSearch(), !this._keyUpPrevented) { const a = this.$search.val(); this.trigger('query', { term: a }) } this._keyUpPrevented = !1 }, d.prototype.searchRemoveChoice = function (a, b) { this.trigger('unselect', { data: b }), this.$search.val(b.text), this.handleSearch() }, d.prototype.resizeSearch = function () { this.$search.css('width', '25px'); let a = ''; if (this.$search.attr('placeholder') !== '')a = this.$selection.find('.select2-selection__rendered').innerWidth(); else { a = `${0.75 * (this.$search.val().length + 1)}em` } this.$search.css('width', a) }, d }), b.define('select2/selection/eventRelay', ['jquery'], (a) => { function b() {} return b.prototype.bind = function (b, c, d) { const e = this; const f = ['open', 'opening', 'close', 'closing', 'select', 'selecting', 'unselect', 'unselecting', 'clear', 'clearing']; const g = ['opening', 'closing', 'selecting', 'unselecting', 'clearing']; b.call(this, c, d), c.on('*', (b, c) => { if (a.inArray(b, f) !== -1) { c = c || {}; const d = a.Event(`select2:${b}`, { params: c }); e.$element.trigger(d), a.inArray(b, g) !== -1 && (c.prevented = d.isDefaultPrevented()) } }) }, b }), b.define('select2/translation', ['jquery', 'require'], (a, b) => { function c(a) { this.dict = a || {} } return c.prototype.all = function () { return this.dict }, c.prototype.get = function (a) { return this.dict[a] }, c.prototype.extend = function (b) { this.dict = a.extend({}, b.all(), this.dict) }, c._cache = {}, c.loadPath = function (a) { if (!(a in c._cache)) { const d = b(a); c._cache[a] = d } return new c(c._cache[a]) }, c }), b.define('select2/diacritics', [], () => ({ 'Ⓐ': 'A', Ａ: 'A', À: 'A', Á: 'A', Â: 'A', Ầ: 'A', Ấ: 'A', Ẫ: 'A', Ẩ: 'A', Ã: 'A', Ā: 'A', Ă: 'A', Ằ: 'A', Ắ: 'A', Ẵ: 'A', Ẳ: 'A', Ȧ: 'A', Ǡ: 'A', Ä: 'A', Ǟ: 'A', Ả: 'A', Å: 'A', Ǻ: 'A', Ǎ: 'A', Ȁ: 'A', Ȃ: 'A', Ạ: 'A', Ậ: 'A', Ặ: 'A', Ḁ: 'A', Ą: 'A', Ⱥ: 'A', Ɐ: 'A', Ꜳ: 'AA', Æ: 'AE', Ǽ: 'AE', Ǣ: 'AE', Ꜵ: 'AO', Ꜷ: 'AU', Ꜹ: 'AV', Ꜻ: 'AV', Ꜽ: 'AY', 'Ⓑ': 'B', Ｂ: 'B', Ḃ: 'B', Ḅ: 'B', Ḇ: 'B', Ƀ: 'B', Ƃ: 'B', Ɓ: 'B', 'Ⓒ': 'C', Ｃ: 'C', Ć: 'C', Ĉ: 'C', Ċ: 'C', Č: 'C', Ç: 'C', Ḉ: 'C', Ƈ: 'C', Ȼ: 'C', Ꜿ: 'C', 'Ⓓ': 'D', Ｄ: 'D', Ḋ: 'D', Ď: 'D', Ḍ: 'D', Ḑ: 'D', Ḓ: 'D', Ḏ: 'D', Đ: 'D', Ƌ: 'D', Ɗ: 'D', Ɖ: 'D', Ꝺ: 'D', Ǳ: 'DZ', Ǆ: 'DZ', ǲ: 'Dz', ǅ: 'Dz', 'Ⓔ': 'E', Ｅ: 'E', È: 'E', É: 'E', Ê: 'E', Ề: 'E', Ế: 'E', Ễ: 'E', Ể: 'E', Ẽ: 'E', Ē: 'E', Ḕ: 'E', Ḗ: 'E', Ĕ: 'E', Ė: 'E', Ë: 'E', Ẻ: 'E', Ě: 'E', Ȅ: 'E', Ȇ: 'E', Ẹ: 'E', Ệ: 'E', Ȩ: 'E', Ḝ: 'E', Ę: 'E', Ḙ: 'E', Ḛ: 'E', Ɛ: 'E', Ǝ: 'E', 'Ⓕ': 'F', Ｆ: 'F', Ḟ: 'F', Ƒ: 'F', Ꝼ: 'F', 'Ⓖ': 'G', Ｇ: 'G', Ǵ: 'G', Ĝ: 'G', Ḡ: 'G', Ğ: 'G', Ġ: 'G', Ǧ: 'G', Ģ: 'G', Ǥ: 'G', Ɠ: 'G', Ꞡ: 'G', Ᵹ: 'G', Ꝿ: 'G', 'Ⓗ': 'H', Ｈ: 'H', Ĥ: 'H', Ḣ: 'H', Ḧ: 'H', Ȟ: 'H', Ḥ: 'H', Ḩ: 'H', Ḫ: 'H', Ħ: 'H', Ⱨ: 'H', Ⱶ: 'H', Ɥ: 'H', 'Ⓘ': 'I', Ｉ: 'I', Ì: 'I', Í: 'I', Î: 'I', Ĩ: 'I', Ī: 'I', Ĭ: 'I', İ: 'I', Ï: 'I', Ḯ: 'I', Ỉ: 'I', Ǐ: 'I', Ȉ: 'I', Ȋ: 'I', Ị: 'I', Į: 'I', Ḭ: 'I', Ɨ: 'I', 'Ⓙ': 'J', Ｊ: 'J', Ĵ: 'J', Ɉ: 'J', 'Ⓚ': 'K', Ｋ: 'K', Ḱ: 'K', Ǩ: 'K', Ḳ: 'K', Ķ: 'K', Ḵ: 'K', Ƙ: 'K', Ⱪ: 'K', Ꝁ: 'K', Ꝃ: 'K', Ꝅ: 'K', Ꞣ: 'K', 'Ⓛ': 'L', Ｌ: 'L', Ŀ: 'L', Ĺ: 'L', Ľ: 'L', Ḷ: 'L', Ḹ: 'L', Ļ: 'L', Ḽ: 'L', Ḻ: 'L', Ł: 'L', Ƚ: 'L', Ɫ: 'L', Ⱡ: 'L', Ꝉ: 'L', Ꝇ: 'L', Ꞁ: 'L', Ǉ: 'LJ', ǈ: 'Lj', 'Ⓜ': 'M', Ｍ: 'M', Ḿ: 'M', Ṁ: 'M', Ṃ: 'M', Ɱ: 'M', Ɯ: 'M', 'Ⓝ': 'N', Ｎ: 'N', Ǹ: 'N', Ń: 'N', Ñ: 'N', Ṅ: 'N', Ň: 'N', Ṇ: 'N', Ņ: 'N', Ṋ: 'N', Ṉ: 'N', Ƞ: 'N', Ɲ: 'N', Ꞑ: 'N', Ꞥ: 'N', Ǌ: 'NJ', ǋ: 'Nj', 'Ⓞ': 'O', Ｏ: 'O', Ò: 'O', Ó: 'O', Ô: 'O', Ồ: 'O', Ố: 'O', Ỗ: 'O', Ổ: 'O', Õ: 'O', Ṍ: 'O', Ȭ: 'O', Ṏ: 'O', Ō: 'O', Ṑ: 'O', Ṓ: 'O', Ŏ: 'O', Ȯ: 'O', Ȱ: 'O', Ö: 'O', Ȫ: 'O', Ỏ: 'O', Ő: 'O', Ǒ: 'O', Ȍ: 'O', Ȏ: 'O', Ơ: 'O', Ờ: 'O', Ớ: 'O', Ỡ: 'O', Ở: 'O', Ợ: 'O', Ọ: 'O', Ộ: 'O', Ǫ: 'O', Ǭ: 'O', Ø: 'O', Ǿ: 'O', Ɔ: 'O', Ɵ: 'O', Ꝋ: 'O', Ꝍ: 'O', Ƣ: 'OI', Ꝏ: 'OO', Ȣ: 'OU', 'Ⓟ': 'P', Ｐ: 'P', Ṕ: 'P', Ṗ: 'P', Ƥ: 'P', Ᵽ: 'P', Ꝑ: 'P', Ꝓ: 'P', Ꝕ: 'P', 'Ⓠ': 'Q', Ｑ: 'Q', Ꝗ: 'Q', Ꝙ: 'Q', Ɋ: 'Q', 'Ⓡ': 'R', Ｒ: 'R', Ŕ: 'R', Ṙ: 'R', Ř: 'R', Ȑ: 'R', Ȓ: 'R', Ṛ: 'R', Ṝ: 'R', Ŗ: 'R', Ṟ: 'R', Ɍ: 'R', Ɽ: 'R', Ꝛ: 'R', Ꞧ: 'R', Ꞃ: 'R', 'Ⓢ': 'S', Ｓ: 'S', ẞ: 'S', Ś: 'S', Ṥ: 'S', Ŝ: 'S', Ṡ: 'S', Š: 'S', Ṧ: 'S', Ṣ: 'S', Ṩ: 'S', Ș: 'S', Ş: 'S', Ȿ: 'S', Ꞩ: 'S', Ꞅ: 'S', 'Ⓣ': 'T', Ｔ: 'T', Ṫ: 'T', Ť: 'T', Ṭ: 'T', Ț: 'T', Ţ: 'T', Ṱ: 'T', Ṯ: 'T', Ŧ: 'T', Ƭ: 'T', Ʈ: 'T', Ⱦ: 'T', Ꞇ: 'T', Ꜩ: 'TZ', 'Ⓤ': 'U', Ｕ: 'U', Ù: 'U', Ú: 'U', Û: 'U', Ũ: 'U', Ṹ: 'U', Ū: 'U', Ṻ: 'U', Ŭ: 'U', Ü: 'U', Ǜ: 'U', Ǘ: 'U', Ǖ: 'U', Ǚ: 'U', Ủ: 'U', Ů: 'U', Ű: 'U', Ǔ: 'U', Ȕ: 'U', Ȗ: 'U', Ư: 'U', Ừ: 'U', Ứ: 'U', Ữ: 'U', Ử: 'U', Ự: 'U', Ụ: 'U', Ṳ: 'U', Ų: 'U', Ṷ: 'U', Ṵ: 'U', Ʉ: 'U', 'Ⓥ': 'V', Ｖ: 'V', Ṽ: 'V', Ṿ: 'V', Ʋ: 'V', Ꝟ: 'V', Ʌ: 'V', Ꝡ: 'VY', 'Ⓦ': 'W', Ｗ: 'W', Ẁ: 'W', Ẃ: 'W', Ŵ: 'W', Ẇ: 'W', Ẅ: 'W', Ẉ: 'W', Ⱳ: 'W', 'Ⓧ': 'X', Ｘ: 'X', Ẋ: 'X', Ẍ: 'X', 'Ⓨ': 'Y', Ｙ: 'Y', Ỳ: 'Y', Ý: 'Y', Ŷ: 'Y', Ỹ: 'Y', Ȳ: 'Y', Ẏ: 'Y', Ÿ: 'Y', Ỷ: 'Y', Ỵ: 'Y', Ƴ: 'Y', Ɏ: 'Y', Ỿ: 'Y', 'Ⓩ': 'Z', Ｚ: 'Z', Ź: 'Z', Ẑ: 'Z', Ż: 'Z', Ž: 'Z', Ẓ: 'Z', Ẕ: 'Z', Ƶ: 'Z', Ȥ: 'Z', Ɀ: 'Z', Ⱬ: 'Z', Ꝣ: 'Z', 'ⓐ': 'a', ａ: 'a', ẚ: 'a', à: 'a', á: 'a', â: 'a', ầ: 'a', ấ: 'a', ẫ: 'a', ẩ: 'a', ã: 'a', ā: 'a', ă: 'a', ằ: 'a', ắ: 'a', ẵ: 'a', ẳ: 'a', ȧ: 'a', ǡ: 'a', ä: 'a', ǟ: 'a', ả: 'a', å: 'a', ǻ: 'a', ǎ: 'a', ȁ: 'a', ȃ: 'a', ạ: 'a', ậ: 'a', ặ: 'a', ḁ: 'a', ą: 'a', ⱥ: 'a', ɐ: 'a', ꜳ: 'aa', æ: 'ae', ǽ: 'ae', ǣ: 'ae', ꜵ: 'ao', ꜷ: 'au', ꜹ: 'av', ꜻ: 'av', ꜽ: 'ay', 'ⓑ': 'b', ｂ: 'b', ḃ: 'b', ḅ: 'b', ḇ: 'b', ƀ: 'b', ƃ: 'b', ɓ: 'b', 'ⓒ': 'c', ｃ: 'c', ć: 'c', ĉ: 'c', ċ: 'c', č: 'c', ç: 'c', ḉ: 'c', ƈ: 'c', ȼ: 'c', ꜿ: 'c', ↄ: 'c', 'ⓓ': 'd', ｄ: 'd', ḋ: 'd', ď: 'd', ḍ: 'd', ḑ: 'd', ḓ: 'd', ḏ: 'd', đ: 'd', ƌ: 'd', ɖ: 'd', ɗ: 'd', ꝺ: 'd', ǳ: 'dz', ǆ: 'dz', 'ⓔ': 'e', ｅ: 'e', è: 'e', é: 'e', ê: 'e', ề: 'e', ế: 'e', ễ: 'e', ể: 'e', ẽ: 'e', ē: 'e', ḕ: 'e', ḗ: 'e', ĕ: 'e', ė: 'e', ë: 'e', ẻ: 'e', ě: 'e', ȅ: 'e', ȇ: 'e', ẹ: 'e', ệ: 'e', ȩ: 'e', ḝ: 'e', ę: 'e', ḙ: 'e', ḛ: 'e', ɇ: 'e', ɛ: 'e', ǝ: 'e', 'ⓕ': 'f', ｆ: 'f', ḟ: 'f', ƒ: 'f', ꝼ: 'f', 'ⓖ': 'g', ｇ: 'g', ǵ: 'g', ĝ: 'g', ḡ: 'g', ğ: 'g', ġ: 'g', ǧ: 'g', ģ: 'g', ǥ: 'g', ɠ: 'g', ꞡ: 'g', ᵹ: 'g', ꝿ: 'g', 'ⓗ': 'h', ｈ: 'h', ĥ: 'h', ḣ: 'h', ḧ: 'h', ȟ: 'h', ḥ: 'h', ḩ: 'h', ḫ: 'h', ẖ: 'h', ħ: 'h', ⱨ: 'h', ⱶ: 'h', ɥ: 'h', ƕ: 'hv', 'ⓘ': 'i', ｉ: 'i', ì: 'i', í: 'i', î: 'i', ĩ: 'i', ī: 'i', ĭ: 'i', ï: 'i', ḯ: 'i', ỉ: 'i', ǐ: 'i', ȉ: 'i', ȋ: 'i', ị: 'i', į: 'i', ḭ: 'i', ɨ: 'i', ı: 'i', 'ⓙ': 'j', ｊ: 'j', ĵ: 'j', ǰ: 'j', ɉ: 'j', 'ⓚ': 'k', ｋ: 'k', ḱ: 'k', ǩ: 'k', ḳ: 'k', ķ: 'k', ḵ: 'k', ƙ: 'k', ⱪ: 'k', ꝁ: 'k', ꝃ: 'k', ꝅ: 'k', ꞣ: 'k', 'ⓛ': 'l', ｌ: 'l', ŀ: 'l', ĺ: 'l', ľ: 'l', ḷ: 'l', ḹ: 'l', ļ: 'l', ḽ: 'l', ḻ: 'l', ſ: 'l', ł: 'l', ƚ: 'l', ɫ: 'l', ⱡ: 'l', ꝉ: 'l', ꞁ: 'l', ꝇ: 'l', ǉ: 'lj', 'ⓜ': 'm', ｍ: 'm', ḿ: 'm', ṁ: 'm', ṃ: 'm', ɱ: 'm', ɯ: 'm', 'ⓝ': 'n', ｎ: 'n', ǹ: 'n', ń: 'n', ñ: 'n', ṅ: 'n', ň: 'n', ṇ: 'n', ņ: 'n', ṋ: 'n', ṉ: 'n', ƞ: 'n', ɲ: 'n', ŉ: 'n', ꞑ: 'n', ꞥ: 'n', ǌ: 'nj', 'ⓞ': 'o', ｏ: 'o', ò: 'o', ó: 'o', ô: 'o', ồ: 'o', ố: 'o', ỗ: 'o', ổ: 'o', õ: 'o', ṍ: 'o', ȭ: 'o', ṏ: 'o', ō: 'o', ṑ: 'o', ṓ: 'o', ŏ: 'o', ȯ: 'o', ȱ: 'o', ö: 'o', ȫ: 'o', ỏ: 'o', ő: 'o', ǒ: 'o', ȍ: 'o', ȏ: 'o', ơ: 'o', ờ: 'o', ớ: 'o', ỡ: 'o', ở: 'o', ợ: 'o', ọ: 'o', ộ: 'o', ǫ: 'o', ǭ: 'o', ø: 'o', ǿ: 'o', ɔ: 'o', ꝋ: 'o', ꝍ: 'o', ɵ: 'o', ƣ: 'oi', ȣ: 'ou', ꝏ: 'oo', 'ⓟ': 'p', ｐ: 'p', ṕ: 'p', ṗ: 'p', ƥ: 'p', ᵽ: 'p', ꝑ: 'p', ꝓ: 'p', ꝕ: 'p', 'ⓠ': 'q', ｑ: 'q', ɋ: 'q', ꝗ: 'q', ꝙ: 'q', 'ⓡ': 'r', ｒ: 'r', ŕ: 'r', ṙ: 'r', ř: 'r', ȑ: 'r', ȓ: 'r', ṛ: 'r', ṝ: 'r', ŗ: 'r', ṟ: 'r', ɍ: 'r', ɽ: 'r', ꝛ: 'r', ꞧ: 'r', ꞃ: 'r', 'ⓢ': 's', ｓ: 's', ß: 's', ś: 's', ṥ: 's', ŝ: 's', ṡ: 's', š: 's', ṧ: 's', ṣ: 's', ṩ: 's', ș: 's', ş: 's', ȿ: 's', ꞩ: 's', ꞅ: 's', ẛ: 's', 'ⓣ': 't', ｔ: 't', ṫ: 't', ẗ: 't', ť: 't', ṭ: 't', ț: 't', ţ: 't', ṱ: 't', ṯ: 't', ŧ: 't', ƭ: 't', ʈ: 't', ⱦ: 't', ꞇ: 't', ꜩ: 'tz', 'ⓤ': 'u', ｕ: 'u', ù: 'u', ú: 'u', û: 'u', ũ: 'u', ṹ: 'u', ū: 'u', ṻ: 'u', ŭ: 'u', ü: 'u', ǜ: 'u', ǘ: 'u', ǖ: 'u', ǚ: 'u', ủ: 'u', ů: 'u', ű: 'u', ǔ: 'u', ȕ: 'u', ȗ: 'u', ư: 'u', ừ: 'u', ứ: 'u', ữ: 'u', ử: 'u', ự: 'u', ụ: 'u', ṳ: 'u', ų: 'u', ṷ: 'u', ṵ: 'u', ʉ: 'u', 'ⓥ': 'v', ｖ: 'v', ṽ: 'v', ṿ: 'v', ʋ: 'v', ꝟ: 'v', ʌ: 'v', ꝡ: 'vy', 'ⓦ': 'w', ｗ: 'w', ẁ: 'w', ẃ: 'w', ŵ: 'w', ẇ: 'w', ẅ: 'w', ẘ: 'w', ẉ: 'w', ⱳ: 'w', 'ⓧ': 'x', ｘ: 'x', ẋ: 'x', ẍ: 'x', 'ⓨ': 'y', ｙ: 'y', ỳ: 'y', ý: 'y', ŷ: 'y', ỹ: 'y', ȳ: 'y', ẏ: 'y', ÿ: 'y', ỷ: 'y', ẙ: 'y', ỵ: 'y', ƴ: 'y', ɏ: 'y', ỿ: 'y', 'ⓩ': 'z', ｚ: 'z', ź: 'z', ẑ: 'z', ż: 'z', ž: 'z', ẓ: 'z', ẕ: 'z', ƶ: 'z', ȥ: 'z', ɀ: 'z', ⱬ: 'z', ꝣ: 'z', Ά: 'Α', Έ: 'Ε', Ή: 'Η', Ί: 'Ι', Ϊ: 'Ι', Ό: 'Ο', Ύ: 'Υ', Ϋ: 'Υ', Ώ: 'Ω', ά: 'α', έ: 'ε', ή: 'η', ί: 'ι', ϊ: 'ι', ΐ: 'ι', ό: 'ο', ύ: 'υ', ϋ: 'υ', ΰ: 'υ', ω: 'ω', ς: 'σ' })), b.define('select2/data/base', ['../utils'], (a) => { function b(a, c) { b.__super__.constructor.call(this) } return a.Extend(b, a.Observable), b.prototype.current = function (a) { throw new Error('The `current` method must be defined in child classes.') }, b.prototype.query = function (a, b) { throw new Error('The `query` method must be defined in child classes.') }, b.prototype.bind = function (a, b) {}, b.prototype.destroy = function () {}, b.prototype.generateResultId = function (b, c) { let d = `${b.id}-result-`; return d += a.generateChars(4), c.id != null ? d += `-${c.id.toString()}` : d += `-${a.generateChars(4)}`, d }, b }), b.define('select2/data/select', ['./base', '../utils', 'jquery'], (a, b, c) => { function d(a, b) { this.$element = a, this.options = b, d.__super__.constructor.call(this) } return b.Extend(d, a), d.prototype.current = function (a) { const b = []; const d = this; this.$element.find(':selected').each(function () { const a = c(this); const e = d.item(a); b.push(e) }), a(b) }, d.prototype.select = function (a) { const b = this; if (a.selected = !0, c(a.element).is('option')) return a.element.selected = !0, void this.$element.trigger('change'); if (this.$element.prop('multiple')) this.current((d) => { const e = []; a = [a], a.push.apply(a, d); for (let f = 0; f < a.length; f++) { const g = a[f].id; c.inArray(g, e) === -1 && e.push(g) }b.$element.val(e), b.$element.trigger('change') }); else { const d = a.id; this.$element.val(d), this.$element.trigger('change') } }, d.prototype.unselect = function (a) { const b = this; if (this.$element.prop('multiple')) { if (a.selected = !1, c(a.element).is('option')) return a.element.selected = !1, void this.$element.trigger('change'); this.current((d) => { for (var e = [], f = 0; f < d.length; f++) { const g = d[f].id; g !== a.id && c.inArray(g, e) === -1 && e.push(g) }b.$element.val(e), b.$element.trigger('change') }) } }, d.prototype.bind = function (a, b) { const c = this; this.container = a, a.on('select', (a) => { c.select(a.data) }), a.on('unselect', (a) => { c.unselect(a.data) }) }, d.prototype.destroy = function () { this.$element.find('*').each(function () { b.RemoveData(this) }) }, d.prototype.query = function (a, b) { const d = []; const e = this; this.$element.children().each(function () { const b = c(this); if (b.is('option') || b.is('optgroup')) { const f = e.item(b); const g = e.matches(a, f); g !== null && d.push(g) } }), b({ results: d }) }, d.prototype.addOptions = function (a) { b.appendMany(this.$element, a) }, d.prototype.option = function (a) { let d; a.children ? (d = document.createElement('optgroup'), d.label = a.text) : (d = document.createElement('option'), void 0 !== d.textContent ? d.textContent = a.text : d.innerText = a.text), void 0 !== a.id && (d.value = a.id), a.disabled && (d.disabled = !0), a.selected && (d.selected = !0), a.title && (d.title = a.title); const e = c(d); const f = this._normalizeItem(a); return f.element = d, b.StoreData(d, 'data', f), e }, d.prototype.item = function (a) { let d = {}; if ((d = b.GetData(a[0], 'data')) != null) return d; if (a.is('option'))d = { id: a.val(), text: a.text(), disabled: a.prop('disabled'), selected: a.prop('selected'), title: a.prop('title') }; else if (a.is('optgroup')) { d = { text: a.prop('label'), children: [], title: a.prop('title') }; for (var e = a.children('option'), f = [], g = 0; g < e.length; g++) { const h = c(e[g]); const i = this.item(h); f.push(i) }d.children = f } return d = this._normalizeItem(d), d.element = a[0], b.StoreData(a[0], 'data', d), d }, d.prototype._normalizeItem = function (a) { a !== Object(a) && (a = { id: a, text: a }), a = c.extend({}, { text: '' }, a); const b = { selected: !1, disabled: !1 }; return a.id != null && (a.id = a.id.toString()), a.text != null && (a.text = a.text.toString()), a._resultId == null && a.id && this.container != null && (a._resultId = this.generateResultId(this.container, a)), c.extend({}, b, a) }, d.prototype.matches = function (a, b) { return this.options.get('matcher')(a, b) }, d }), b.define('select2/data/array', ['./select', '../utils', 'jquery'], (a, b, c) => { function d(a, b) { const c = b.get('data') || []; d.__super__.constructor.call(this, a, b), this.addOptions(this.convertToOptions(c)) } return b.Extend(d, a), d.prototype.select = function (a) { let b = this.$element.find('option').filter((b, c) => c.value == a.id.toString()); b.length === 0 && (b = this.option(a), this.addOptions(b)), d.__super__.select.call(this, a) }, d.prototype.convertToOptions = function (a) { function d(a) { return function () { return c(this).val() == a.id } } for (var e = this, f = this.$element.find('option'), g = f.map(function () { return e.item(c(this)).id }).get(), h = [], i = 0; i < a.length; i++) { const j = this._normalizeItem(a[i]); if (c.inArray(j.id, g) >= 0) { const k = f.filter(d(j)); const l = this.item(k); const m = c.extend(!0, {}, j, l); const n = this.option(m); k.replaceWith(n) } else { const o = this.option(j); if (j.children) { const p = this.convertToOptions(j.children); b.appendMany(o, p) }h.push(o) } } return h }, d }), b.define('select2/data/ajax', ['./array', '../utils', 'jquery'], (a, b, c) => { function d(a, b) { this.ajaxOptions = this._applyDefaults(b.get('ajax')), this.ajaxOptions.processResults != null && (this.processResults = this.ajaxOptions.processResults), d.__super__.constructor.call(this, a, b) } return b.Extend(d, a), d.prototype._applyDefaults = function (a) { const b = { data(a) { return c.extend({}, a, { q: a.term }) }, transport(a, b, d) { const e = c.ajax(a); return e.then(b), e.fail(d), e } }; return c.extend({}, b, a, !0) }, d.prototype.processResults = function (a) { return a }, d.prototype.query = function (a, b) { function d() { var d = f.transport(f, (d) => { const f = e.processResults(d, a); e.options.get('debug') && window.console && console.error && (f && f.results && c.isArray(f.results) || console.error('Select2: The AJAX results did not return an array in the `results` key of the response.')), b(f) }, () => { 'status' in d && (d.status === 0 || d.status === '0') || e.trigger('results:message', { message: 'errorLoading' }) }); e._request = d } var e = this; this._request != null && (c.isFunction(this._request.abort) && this._request.abort(), this._request = null); var f = c.extend({ type: 'GET' }, this.ajaxOptions); typeof f.url === 'function' && (f.url = f.url.call(this.$element, a)), typeof f.data === 'function' && (f.data = f.data.call(this.$element, a)), this.ajaxOptions.delay && a.term != null ? (this._queryTimeout && window.clearTimeout(this._queryTimeout), this._queryTimeout = window.setTimeout(d, this.ajaxOptions.delay)) : d() }, d }), b.define('select2/data/tags', ['jquery'], (a) => { function b(b, c, d) { const e = d.get('tags'); const f = d.get('createTag'); void 0 !== f && (this.createTag = f); const g = d.get('insertTag'); if (void 0 !== g && (this.insertTag = g), b.call(this, c, d), a.isArray(e)) for (let h = 0; h < e.length; h++) { const i = e[h]; const j = this._normalizeItem(i); const k = this.option(j); this.$element.append(k) } } return b.prototype.query = function (a, b, c) { function d(a, f) { for (var g = a.results, h = 0; h < g.length; h++) { const i = g[h]; const j = i.children != null && !d({ results: i.children }, !0); if ((i.text || '').toUpperCase() === (b.term || '').toUpperCase() || j) return !f && (a.data = g, void c(a)) } if (f) return !0; const k = e.createTag(b); if (k != null) { const l = e.option(k); l.attr('data-select2-tag', !0), e.addOptions([l]), e.insertTag(g, k) }a.results = g, c(a) } var e = this; if (this._removeOldTags(), b.term == null || b.page != null) return void a.call(this, b, c); a.call(this, b, d) }, b.prototype.createTag = function (b, c) { const d = a.trim(c.term); return d === '' ? null : { id: d, text: d } }, b.prototype.insertTag = function (a, b, c) { b.unshift(c) }, b.prototype._removeOldTags = function (b) { this._lastTag; this.$element.find('option[data-select2-tag]').each(function () { this.selected || a(this).remove() }) }, b }), b.define('select2/data/tokenizer', ['jquery'], (a) => { function b(a, b, c) { const d = c.get('tokenizer'); void 0 !== d && (this.tokenizer = d), a.call(this, b, c) } return b.prototype.bind = function (a, b, c) { a.call(this, b, c), this.$search = b.dropdown.$search || b.selection.$search || c.find('.select2-search__field') }, b.prototype.query = function (b, c, d) { function e(b) { const c = g._normalizeItem(b); if (!g.$element.find('option').filter(function () { return a(this).val() === c.id }).length) { const d = g.option(c); d.attr('data-select2-tag', !0), g._removeOldTags(), g.addOptions([d]) }f(c) } function f(a) { g.trigger('select', { data: a }) } var g = this; c.term = c.term || ''; const h = this.tokenizer(c, this.options, e); h.term !== c.term && (this.$search.length && (this.$search.val(h.term), this.$search.focus()), c.term = h.term), b.call(this, c, d) }, b.prototype.tokenizer = function (b, c, d, e) { for (var f = d.get('tokenSeparators') || [], g = c.term, h = 0, i = this.createTag || function (a) { return { id: a.term, text: a.term } }; h < g.length;) { const j = g[h]; if (a.inArray(j, f) !== -1) { const k = g.substr(0, h); const l = a.extend({}, c, { term: k }); const m = i(l); m != null ? (e(m), g = g.substr(h + 1) || '', h = 0) : h++ } else h++ } return { term: g } }, b }), b.define('select2/data/minimumInputLength', [], () => { function a(a, b, c) { this.minimumInputLength = c.get('minimumInputLength'), a.call(this, b, c) } return a.prototype.query = function (a, b, c) { if (b.term = b.term || '', b.term.length < this.minimumInputLength) return void this.trigger('results:message', { message: 'inputTooShort', args: { minimum: this.minimumInputLength, input: b.term, params: b } }); a.call(this, b, c) }, a }), b.define('select2/data/maximumInputLength', [], () => { function a(a, b, c) { this.maximumInputLength = c.get('maximumInputLength'), a.call(this, b, c) } return a.prototype.query = function (a, b, c) { if (b.term = b.term || '', this.maximumInputLength > 0 && b.term.length > this.maximumInputLength) return void this.trigger('results:message', { message: 'inputTooLong', args: { maximum: this.maximumInputLength, input: b.term, params: b } }); a.call(this, b, c) }, a }), b.define('select2/data/maximumSelectionLength', [], () => { function a(a, b, c) { this.maximumSelectionLength = c.get('maximumSelectionLength'), a.call(this, b, c) } return a.prototype.query = function (a, b, c) { const d = this; this.current((e) => { const f = e != null ? e.length : 0; if (d.maximumSelectionLength > 0 && f >= d.maximumSelectionLength) return void d.trigger('results:message', { message: 'maximumSelected', args: { maximum: d.maximumSelectionLength } }); a.call(d, b, c) }) }, a }), b.define('select2/dropdown', ['jquery', './utils'], (a, b) => { function c(a, b) { this.$element = a, this.options = b, c.__super__.constructor.call(this) } return b.Extend(c, b.Observable), c.prototype.render = function () { const b = a('<span class="select2-dropdown"><span class="select2-results"></span></span>'); return b.attr('dir', this.options.get('dir')), this.$dropdown = b, b }, c.prototype.bind = function () {}, c.prototype.position = function (a, b) {}, c.prototype.destroy = function () { this.$dropdown.remove() }, c }), b.define('select2/dropdown/search', ['jquery', '../utils'], (a, b) => { function c() {} return c.prototype.render = function (b) { const c = b.call(this); const d = a('<span class="select2-search select2-search--dropdown"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="none" spellcheck="false" role="textbox" /></span>'); return this.$searchContainer = d, this.$search = d.find('input'), c.prepend(d), c }, c.prototype.bind = function (b, c, d) { const e = this; b.call(this, c, d), this.$search.on('keydown', (a) => { e.trigger('keypress', a), e._keyUpPrevented = a.isDefaultPrevented() }), this.$search.on('input', function (b) { a(this).off('keyup') }), this.$search.on('keyup input', (a) => { e.handleSearch(a) }), c.on('open', () => { e.$search.attr('tabindex', 0), e.$search.focus(), window.setTimeout(() => { e.$search.focus() }, 0) }), c.on('close', () => { e.$search.attr('tabindex', -1), e.$search.val(''), e.$search.blur() }), c.on('focus', () => { c.isOpen() || e.$search.focus() }), c.on('results:all', (a) => { if (a.query.term == null || a.query.term === '') { e.showSearch(a) ? e.$searchContainer.removeClass('select2-search--hide') : e.$searchContainer.addClass('select2-search--hide') } }) }, c.prototype.handleSearch = function (a) { if (!this._keyUpPrevented) { const b = this.$search.val(); this.trigger('query', { term: b }) } this._keyUpPrevented = !1 }, c.prototype.showSearch = function (a, b) { return !0 }, c }), b.define('select2/dropdown/hidePlaceholder', [], () => { function a(a, b, c, d) { this.placeholder = this.normalizePlaceholder(c.get('placeholder')), a.call(this, b, c, d) } return a.prototype.append = function (a, b) { b.results = this.removePlaceholder(b.results), a.call(this, b) }, a.prototype.normalizePlaceholder = function (a, b) { return typeof b === 'string' && (b = { id: '', text: b }), b }, a.prototype.removePlaceholder = function (a, b) { for (var c = b.slice(0), d = b.length - 1; d >= 0; d--) { const e = b[d]; this.placeholder.id === e.id && c.splice(d, 1) } return c }, a }), b.define('select2/dropdown/infiniteScroll', ['jquery'], (a) => { function b(a, b, c, d) { this.lastParams = {}, a.call(this, b, c, d), this.$loadingMore = this.createLoadingMore(), this.loading = !1 } return b.prototype.append = function (a, b) { this.$loadingMore.remove(), this.loading = !1, a.call(this, b), this.showLoadingMore(b) && this.$results.append(this.$loadingMore) }, b.prototype.bind = function (b, c, d) { const e = this; b.call(this, c, d), c.on('query', (a) => { e.lastParams = a, e.loading = !0 }), c.on('query:append', (a) => { e.lastParams = a, e.loading = !0 }), this.$results.on('scroll', () => { const b = a.contains(document.documentElement, e.$loadingMore[0]); if (!e.loading && b) { e.$results.offset().top + e.$results.outerHeight(!1) + 50 >= e.$loadingMore.offset().top + e.$loadingMore.outerHeight(!1) && e.loadMore() } }) }, b.prototype.loadMore = function () { this.loading = !0; const b = a.extend({}, { page: 1 }, this.lastParams); b.page++, this.trigger('query:append', b) }, b.prototype.showLoadingMore = function (a, b) { return b.pagination && b.pagination.more }, b.prototype.createLoadingMore = function () { const b = a('<li class="select2-results__option select2-results__option--load-more"role="treeitem" aria-disabled="true"></li>'); const c = this.options.get('translations').get('loadingMore'); return b.html(c(this.lastParams)), b }, b }), b.define('select2/dropdown/attachBody', ['jquery', '../utils'], (a, b) => { function c(b, c, d) { this.$dropdownParent = d.get('dropdownParent') || a(document.body), b.call(this, c, d) } return c.prototype.bind = function (a, b, c) { const d = this; let e = !1; a.call(this, b, c), b.on('open', () => { d._showDropdown(), d._attachPositioningHandler(b), e || (e = !0, b.on('results:all', () => { d._positionDropdown(), d._resizeDropdown() }), b.on('results:append', () => { d._positionDropdown(), d._resizeDropdown() })) }), b.on('close', () => { d._hideDropdown(), d._detachPositioningHandler(b) }), this.$dropdownContainer.on('mousedown', (a) => { a.stopPropagation() }) }, c.prototype.destroy = function (a) { a.call(this), this.$dropdownContainer.remove() }, c.prototype.position = function (a, b, c) { b.attr('class', c.attr('class')), b.removeClass('select2'), b.addClass('select2-container--open'), b.css({ position: 'absolute', top: -999999 }), this.$container = c }, c.prototype.render = function (b) { const c = a('<span></span>'); const d = b.call(this); return c.append(d), this.$dropdownContainer = c, c }, c.prototype._hideDropdown = function (a) { this.$dropdownContainer.detach() }, c.prototype._attachPositioningHandler = function (c, d) { const e = this; const f = `scroll.select2.${d.id}`; const g = `resize.select2.${d.id}`; const h = `orientationchange.select2.${d.id}`; const i = this.$container.parents().filter(b.hasScroll); i.each(function () { b.StoreData(this, 'select2-scroll-position', { x: a(this).scrollLeft(), y: a(this).scrollTop() }) }), i.on(f, function (c) { const d = b.GetData(this, 'select2-scroll-position'); a(this).scrollTop(d.y) }), a(window).on(`${f} ${g} ${h}`, (a) => { e._positionDropdown(), e._resizeDropdown() }) }, c.prototype._detachPositioningHandler = function (c, d) { const e = `scroll.select2.${d.id}`; const f = `resize.select2.${d.id}`; const g = `orientationchange.select2.${d.id}`; this.$container.parents().filter(b.hasScroll).off(e), a(window).off(`${e} ${f} ${g}`) }, c.prototype._positionDropdown = function () { const b = a(window); const c = this.$dropdown.hasClass('select2-dropdown--above'); const d = this.$dropdown.hasClass('select2-dropdown--below'); let e = null; const f = this.$container.offset(); f.bottom = f.top + this.$container.outerHeight(!1); const g = { height: this.$container.outerHeight(!1) }; g.top = f.top, g.bottom = f.top + g.height; const h = { height: this.$dropdown.outerHeight(!1) }; const i = { top: b.scrollTop(), bottom: b.scrollTop() + b.height() }; const j = i.top < f.top - h.height; const k = i.bottom > f.bottom + h.height; const l = { left: f.left, top: g.bottom }; let m = this.$dropdownParent; m.css('position') === 'static' && (m = m.offsetParent()); const n = m.offset(); l.top -= n.top, l.left -= n.left, c || d || (e = 'below'), k || !j || c ? !j && k && c && (e = 'below') : e = 'above', (e == 'above' || c && e !== 'below') && (l.top = g.top - n.top - h.height), e != null && (this.$dropdown.removeClass('select2-dropdown--below select2-dropdown--above').addClass(`select2-dropdown--${e}`), this.$container.removeClass('select2-container--below select2-container--above').addClass(`select2-container--${e}`)), this.$dropdownContainer.css(l) }, c.prototype._resizeDropdown = function () { const a = { width: `${this.$container.outerWidth(!1)}px` }; this.options.get('dropdownAutoWidth') && (a.minWidth = a.width, a.position = 'relative', a.width = 'auto'), this.$dropdown.css(a) }, c.prototype._showDropdown = function (a) { this.$dropdownContainer.appendTo(this.$dropdownParent), this._positionDropdown(), this._resizeDropdown() }, c }), b.define('select2/dropdown/minimumResultsForSearch', [], () => { function a(b) { for (var c = 0, d = 0; d < b.length; d++) { const e = b[d]; e.children ? c += a(e.children) : c++ } return c } function b(a, b, c, d) { this.minimumResultsForSearch = c.get('minimumResultsForSearch'), this.minimumResultsForSearch < 0 && (this.minimumResultsForSearch = 1 / 0), a.call(this, b, c, d) } return b.prototype.showSearch = function (b, c) { return !(a(c.data.results) < this.minimumResultsForSearch) && b.call(this, c) }, b }), b.define('select2/dropdown/selectOnClose', ['../utils'], (a) => { function b() {} return b.prototype.bind = function (a, b, c) { const d = this; a.call(this, b, c), b.on('close', (a) => { d._handleSelectOnClose(a) }) }, b.prototype._handleSelectOnClose = function (b, c) { if (c && c.originalSelect2Event != null) { const d = c.originalSelect2Event; if (d._type === 'select' || d._type === 'unselect') return } const e = this.getHighlightedResults(); if (!(e.length < 1)) { const f = a.GetData(e[0], 'data'); f.element != null && f.element.selected || f.element == null && f.selected || this.trigger('select', { data: f }) } }, b }), b.define('select2/dropdown/closeOnSelect', [], () => { function a() {} return a.prototype.bind = function (a, b, c) { const d = this; a.call(this, b, c), b.on('select', (a) => { d._selectTriggered(a) }), b.on('unselect', (a) => { d._selectTriggered(a) }) }, a.prototype._selectTriggered = function (a, b) { const c = b.originalEvent; c && c.ctrlKey || this.trigger('close', { originalEvent: c, originalSelect2Event: b }) }, a }), b.define('select2/i18n/en', [], () => ({ errorLoading() { return 'The results could not be loaded.' }, inputTooLong(a) { const b = a.input.length - a.maximum; let c = `Please delete ${b} character`; return b != 1 && (c += 's'), c }, inputTooShort(a) { return `Please enter ${a.minimum - a.input.length} or more characters` }, loadingMore() { return 'Loading more results…' }, maximumSelected(a) { let b = `You can only select ${a.maximum} item`; return a.maximum != 1 && (b += 's'), b }, noResults() { return 'No results found' }, searching() { return 'Searching…' } })), b.define('select2/defaults', ['jquery', 'require', './results', './selection/single', './selection/multiple', './selection/placeholder', './selection/allowClear', './selection/search', './selection/eventRelay', './utils', './translation', './diacritics', './data/select', './data/array', './data/ajax', './data/tags', './data/tokenizer', './data/minimumInputLength', './data/maximumInputLength', './data/maximumSelectionLength', './dropdown', './dropdown/search', './dropdown/hidePlaceholder', './dropdown/infiniteScroll', './dropdown/attachBody', './dropdown/minimumResultsForSearch', './dropdown/selectOnClose', './dropdown/closeOnSelect', './i18n/en'], (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C) => { function D() { this.reset() } return D.prototype.apply = function (l) { if (l = a.extend(!0, {}, this.defaults, l), l.dataAdapter == null) { if (l.ajax != null ? l.dataAdapter = o : l.data != null ? l.dataAdapter = n : l.dataAdapter = m, l.minimumInputLength > 0 && (l.dataAdapter = j.Decorate(l.dataAdapter, r)), l.maximumInputLength > 0 && (l.dataAdapter = j.Decorate(l.dataAdapter, s)), l.maximumSelectionLength > 0 && (l.dataAdapter = j.Decorate(l.dataAdapter, t)), l.tags && (l.dataAdapter = j.Decorate(l.dataAdapter, p)), l.tokenSeparators == null && l.tokenizer == null || (l.dataAdapter = j.Decorate(l.dataAdapter, q)), l.query != null) { const C = b(`${l.amdBase}compat/query`); l.dataAdapter = j.Decorate(l.dataAdapter, C) } if (l.initSelection != null) { const D = b(`${l.amdBase}compat/initSelection`); l.dataAdapter = j.Decorate(l.dataAdapter, D) } } if (l.resultsAdapter == null && (l.resultsAdapter = c, l.ajax != null && (l.resultsAdapter = j.Decorate(l.resultsAdapter, x)), l.placeholder != null && (l.resultsAdapter = j.Decorate(l.resultsAdapter, w)), l.selectOnClose && (l.resultsAdapter = j.Decorate(l.resultsAdapter, A))), l.dropdownAdapter == null) { if (l.multiple)l.dropdownAdapter = u; else { const E = j.Decorate(u, v); l.dropdownAdapter = E } if (l.minimumResultsForSearch !== 0 && (l.dropdownAdapter = j.Decorate(l.dropdownAdapter, z)), l.closeOnSelect && (l.dropdownAdapter = j.Decorate(l.dropdownAdapter, B)), l.dropdownCssClass != null || l.dropdownCss != null || l.adaptDropdownCssClass != null) { const F = b(`${l.amdBase}compat/dropdownCss`); l.dropdownAdapter = j.Decorate(l.dropdownAdapter, F) }l.dropdownAdapter = j.Decorate(l.dropdownAdapter, y) } if (l.selectionAdapter == null) { if (l.multiple ? l.selectionAdapter = e : l.selectionAdapter = d, l.placeholder != null && (l.selectionAdapter = j.Decorate(l.selectionAdapter, f)), l.allowClear && (l.selectionAdapter = j.Decorate(l.selectionAdapter, g)), l.multiple && (l.selectionAdapter = j.Decorate(l.selectionAdapter, h)), l.containerCssClass != null || l.containerCss != null || l.adaptContainerCssClass != null) { const G = b(`${l.amdBase}compat/containerCss`); l.selectionAdapter = j.Decorate(l.selectionAdapter, G) }l.selectionAdapter = j.Decorate(l.selectionAdapter, i) } if (typeof l.language === 'string') if (l.language.indexOf('-') > 0) { const H = l.language.split('-'); const I = H[0]; l.language = [l.language, I] } else l.language = [l.language]; if (a.isArray(l.language)) { const J = new k(); l.language.push('en'); for (let K = l.language, L = 0; L < K.length; L++) { let M = K[L]; let N = {}; try { N = k.loadPath(M) } catch (a) { try { M = this.defaults.amdLanguageBase + M, N = k.loadPath(M) } catch (a) { l.debug && window.console && console.warn && console.warn(`Select2: The language file for "${M}" could not be automatically loaded. A fallback will be used instead.`); continue } }J.extend(N) }l.translations = J } else { const O = k.loadPath(`${this.defaults.amdLanguageBase}en`); const P = new k(l.language); P.extend(O), l.translations = P } return l }, D.prototype.reset = function () { function b(a) { function b(a) { return l[a] || a } return a.replace(/[^\u0000-\u007E]/g, b) } function c(d, e) { if (a.trim(d.term) === '') return e; if (e.children && e.children.length > 0) { for (var f = a.extend(!0, {}, e), g = e.children.length - 1; g >= 0; g--) { c(d, e.children[g]) == null && f.children.splice(g, 1) } return f.children.length > 0 ? f : c(d, f) } const h = b(e.text).toUpperCase(); const i = b(d.term).toUpperCase(); return h.indexOf(i) > -1 ? e : null } this.defaults = { amdBase: './', amdLanguageBase: './i18n/', closeOnSelect: !0, debug: !1, dropdownAutoWidth: !1, escapeMarkup: j.escapeMarkup, language: C, matcher: c, minimumInputLength: 0, maximumInputLength: 0, maximumSelectionLength: 0, minimumResultsForSearch: 0, selectOnClose: !1, sorter(a) { return a }, templateResult(a) { return a.text }, templateSelection(a) { return a.text }, theme: 'default', width: 'resolve' } }, D.prototype.set = function (b, c) { const d = a.camelCase(b); const e = {}; e[d] = c; const f = j._convertData(e); a.extend(!0, this.defaults, f) }, new D() }), b.define('select2/options', ['require', 'jquery', './defaults', './utils'], (a, b, c, d) => { function e(b, e) { if (this.options = b, e != null && this.fromElement(e), this.options = c.apply(this.options), e && e.is('input')) { const f = a(`${this.get('amdBase')}compat/inputData`); this.options.dataAdapter = d.Decorate(this.options.dataAdapter, f) } } return e.prototype.fromElement = function (a) { const c = ['select2']; this.options.multiple == null && (this.options.multiple = a.prop('multiple')), this.options.disabled == null && (this.options.disabled = a.prop('disabled')), this.options.language == null && (a.prop('lang') ? this.options.language = a.prop('lang').toLowerCase() : a.closest('[lang]').prop('lang') && (this.options.language = a.closest('[lang]').prop('lang'))), this.options.dir == null && (a.prop('dir') ? this.options.dir = a.prop('dir') : a.closest('[dir]').prop('dir') ? this.options.dir = a.closest('[dir]').prop('dir') : this.options.dir = 'ltr'), a.prop('disabled', this.options.disabled), a.prop('multiple', this.options.multiple), d.GetData(a[0], 'select2Tags') && (this.options.debug && window.console && console.warn && console.warn('Select2: The `data-select2-tags` attribute has been changed to use the `data-data` and `data-tags="true"` attributes and will be removed in future versions of Select2.'), d.StoreData(a[0], 'data', d.GetData(a[0], 'select2Tags')), d.StoreData(a[0], 'tags', !0)), d.GetData(a[0], 'ajaxUrl') && (this.options.debug && window.console && console.warn && console.warn('Select2: The `data-ajax-url` attribute has been changed to `data-ajax--url` and support for the old attribute will be removed in future versions of Select2.'), a.attr('ajax--url', d.GetData(a[0], 'ajaxUrl')), d.StoreData(a[0], 'ajax-Url', d.GetData(a[0], 'ajaxUrl'))); let e = {}; e = b.fn.jquery && b.fn.jquery.substr(0, 2) == '1.' && a[0].dataset ? b.extend(!0, {}, a[0].dataset, d.GetData(a[0])) : d.GetData(a[0]); let f = b.extend(!0, {}, e); f = d._convertData(f); for (const g in f)b.inArray(g, c) > -1 || (b.isPlainObject(this.options[g]) ? b.extend(this.options[g], f[g]) : this.options[g] = f[g]); return this }, e.prototype.get = function (a) { return this.options[a] }, e.prototype.set = function (a, b) { this.options[a] = b }, e }), b.define('select2/core', ['jquery', './options', './utils', './keys'], (a, b, c, d) => { var e = function (a, d) { c.GetData(a[0], 'select2') != null && c.GetData(a[0], 'select2').destroy(), this.$element = a, this.id = this._generateId(a), d = d || {}, this.options = new b(d, a), e.__super__.constructor.call(this); const f = a.attr('tabindex') || 0; c.StoreData(a[0], 'old-tabindex', f), a.attr('tabindex', '-1'); const g = this.options.get('dataAdapter'); this.dataAdapter = new g(a, this.options); const h = this.render(); this._placeContainer(h); const i = this.options.get('selectionAdapter'); this.selection = new i(a, this.options), this.$selection = this.selection.render(), this.selection.position(this.$selection, h); const j = this.options.get('dropdownAdapter'); this.dropdown = new j(a, this.options), this.$dropdown = this.dropdown.render(), this.dropdown.position(this.$dropdown, h); const k = this.options.get('resultsAdapter'); this.results = new k(a, this.options, this.dataAdapter), this.$results = this.results.render(), this.results.position(this.$results, this.$dropdown); const l = this; this._bindAdapters(), this._registerDomEvents(), this._registerDataEvents(), this._registerSelectionEvents(), this._registerDropdownEvents(), this._registerResultsEvents(), this._registerEvents(), this.dataAdapter.current((a) => { l.trigger('selection:update', { data: a }) }), a.addClass('select2-hidden-accessible'), a.attr('aria-hidden', 'true'), this._syncAttributes(), c.StoreData(a[0], 'select2', this), a.data('select2', this) }; return c.Extend(e, c.Observable), e.prototype._generateId = function (a) { let b = ''; return b = a.attr('id') != null ? a.attr('id') : a.attr('name') != null ? `${a.attr('name')}-${c.generateChars(2)}` : c.generateChars(4), b = b.replace(/(:|\.|\[|\]|,)/g, ''), b = `select2-${b}` }, e.prototype._placeContainer = function (a) { a.insertAfter(this.$element); const b = this._resolveWidth(this.$element, this.options.get('width')); b != null && a.css('width', b) }, e.prototype._resolveWidth = function (a, b) { const c = /^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i; if (b == 'resolve') { const d = this._resolveWidth(a, 'style'); return d != null ? d : this._resolveWidth(a, 'element') } if (b == 'element') { const e = a.outerWidth(!1); return e <= 0 ? 'auto' : `${e}px` } if (b == 'style') { const f = a.attr('style'); if (typeof f !== 'string') return null; for (let g = f.split(';'), h = 0, i = g.length; h < i; h += 1) { const j = g[h].replace(/\s/g, ''); const k = j.match(c); if (k !== null && k.length >= 1) return k[1] } return null } return b }, e.prototype._bindAdapters = function () { this.dataAdapter.bind(this, this.$container), this.selection.bind(this, this.$container), this.dropdown.bind(this, this.$container), this.results.bind(this, this.$container) }, e.prototype._registerDomEvents = function () { const b = this; this.$element.on('change.select2', () => { b.dataAdapter.current((a) => { b.trigger('selection:update', { data: a }) }) }), this.$element.on('focus.select2', (a) => { b.trigger('focus', a) }), this._syncA = c.bind(this._syncAttributes, this), this._syncS = c.bind(this._syncSubtree, this), this.$element[0].attachEvent && this.$element[0].attachEvent('onpropertychange', this._syncA); const d = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver; d != null ? (this._observer = new d((c) => { a.each(c, b._syncA), a.each(c, b._syncS) }), this._observer.observe(this.$element[0], { attributes: !0, childList: !0, subtree: !1 })) : this.$element[0].addEventListener && (this.$element[0].addEventListener('DOMAttrModified', b._syncA, !1), this.$element[0].addEventListener('DOMNodeInserted', b._syncS, !1), this.$element[0].addEventListener('DOMNodeRemoved', b._syncS, !1)) }, e.prototype._registerDataEvents = function () { const a = this; this.dataAdapter.on('*', (b, c) => { a.trigger(b, c) }) }, e.prototype._registerSelectionEvents = function () { const b = this; const c = ['toggle', 'focus']; this.selection.on('toggle', () => { b.toggleDropdown() }), this.selection.on('focus', (a) => { b.focus(a) }), this.selection.on('*', (d, e) => { a.inArray(d, c) === -1 && b.trigger(d, e) }) }, e.prototype._registerDropdownEvents = function () { const a = this; this.dropdown.on('*', (b, c) => { a.trigger(b, c) }) }, e.prototype._registerResultsEvents = function () { const a = this; this.results.on('*', (b, c) => { a.trigger(b, c) }) }, e.prototype._registerEvents = function () { const a = this; this.on('open', () => { a.$container.addClass('select2-container--open') }), this.on('close', () => { a.$container.removeClass('select2-container--open') }), this.on('enable', () => { a.$container.removeClass('select2-container--disabled') }), this.on('disable', () => { a.$container.addClass('select2-container--disabled') }), this.on('blur', () => { a.$container.removeClass('select2-container--focus') }), this.on('query', function (b) { a.isOpen() || a.trigger('open', {}), this.dataAdapter.query(b, (c) => { a.trigger('results:all', { data: c, query: b }) }) }), this.on('query:append', function (b) { this.dataAdapter.query(b, (c) => { a.trigger('results:append', { data: c, query: b }) }) }), this.on('keypress', (b) => { const c = b.which; a.isOpen() ? c === d.ESC || c === d.TAB || c === d.UP && b.altKey ? (a.close(), b.preventDefault()) : c === d.ENTER ? (a.trigger('results:select', {}), b.preventDefault()) : c === d.SPACE && b.ctrlKey ? (a.trigger('results:toggle', {}), b.preventDefault()) : c === d.UP ? (a.trigger('results:previous', {}), b.preventDefault()) : c === d.DOWN && (a.trigger('results:next', {}), b.preventDefault()) : (c === d.ENTER || c === d.SPACE || c === d.DOWN && b.altKey) && (a.open(), b.preventDefault()) }) }, e.prototype._syncAttributes = function () { this.options.set('disabled', this.$element.prop('disabled')), this.options.get('disabled') ? (this.isOpen() && this.close(), this.trigger('disable', {})) : this.trigger('enable', {}) }, e.prototype._syncSubtree = function (a, b) { let c = !1; const d = this; if (!a || !a.target || a.target.nodeName === 'OPTION' || a.target.nodeName === 'OPTGROUP') { if (b) if (b.addedNodes && b.addedNodes.length > 0) for (let e = 0; e < b.addedNodes.length; e++) { const f = b.addedNodes[e]; f.selected && (c = !0) } else b.removedNodes && b.removedNodes.length > 0 && (c = !0); else c = !0; c && this.dataAdapter.current((a) => { d.trigger('selection:update', { data: a }) }) } }, e.prototype.trigger = function (a, b) { const c = e.__super__.trigger; const d = { open: 'opening', close: 'closing', select: 'selecting', unselect: 'unselecting', clear: 'clearing' }; if (void 0 === b && (b = {}), a in d) { const f = d[a]; const g = { prevented: !1, name: a, args: b }; if (c.call(this, f, g), g.prevented) return void (b.prevented = !0) }c.call(this, a, b) }, e.prototype.toggleDropdown = function () { this.options.get('disabled') || (this.isOpen() ? this.close() : this.open()) }, e.prototype.open = function () { this.isOpen() || this.trigger('query', {}) }, e.prototype.close = function () { this.isOpen() && this.trigger('close', {}) }, e.prototype.isOpen = function () { return this.$container.hasClass('select2-container--open') }, e.prototype.hasFocus = function () { return this.$container.hasClass('select2-container--focus') }, e.prototype.focus = function (a) { this.hasFocus() || (this.$container.addClass('select2-container--focus'), this.trigger('focus', {})) }, e.prototype.enable = function (a) { this.options.get('debug') && window.console && console.warn && console.warn('Select2: The `select2("enable")` method has been deprecated and will be removed in later Select2 versions. Use $element.prop("disabled") instead.'), a != null && a.length !== 0 || (a = [!0]); const b = !a[0]; this.$element.prop('disabled', b) }, e.prototype.data = function () { this.options.get('debug') && arguments.length > 0 && window.console && console.warn && console.warn('Select2: Data can no longer be set using `select2("data")`. You should consider setting the value instead using `$element.val()`.'); let a = []; return this.dataAdapter.current((b) => { a = b }), a }, e.prototype.val = function (b) { if (this.options.get('debug') && window.console && console.warn && console.warn('Select2: The `select2("val")` method has been deprecated and will be removed in later Select2 versions. Use $element.val() instead.'), b == null || b.length === 0) return this.$element.val(); let c = b[0]; a.isArray(c) && (c = a.map(c, (a) => a.toString())), this.$element.val(c).trigger('change') }, e.prototype.destroy = function () { this.$container.remove(), this.$element[0].detachEvent && this.$element[0].detachEvent('onpropertychange', this._syncA), this._observer != null ? (this._observer.disconnect(), this._observer = null) : this.$element[0].removeEventListener && (this.$element[0].removeEventListener('DOMAttrModified', this._syncA, !1), this.$element[0].removeEventListener('DOMNodeInserted', this._syncS, !1), this.$element[0].removeEventListener('DOMNodeRemoved', this._syncS, !1)), this._syncA = null, this._syncS = null, this.$element.off('.select2'), this.$element.attr('tabindex', c.GetData(this.$element[0], 'old-tabindex')), this.$element.removeClass('select2-hidden-accessible'), this.$element.attr('aria-hidden', 'false'), c.RemoveData(this.$element[0]), this.$element.removeData('select2'), this.dataAdapter.destroy(), this.selection.destroy(), this.dropdown.destroy(), this.results.destroy(), this.dataAdapter = null, this.selection = null, this.dropdown = null, this.results = null }, e.prototype.render = function () { const b = a('<span class="select2 select2-container"><span class="selection"></span><span class="dropdown-wrapper" aria-hidden="true"></span></span>'); return b.attr('dir', this.options.get('dir')), this.$container = b, this.$container.addClass(`select2-container--${this.options.get('theme')}`), c.StoreData(b[0], 'element', this.$element), b }, e }), b.define('jquery-mousewheel', ['jquery'], (a) => a), b.define('jquery.select2', ['jquery', 'jquery-mousewheel', './select2/core', './select2/defaults', './select2/utils'], (a, b, c, d, e) => { if (a.fn.select2 == null) { const f = ['open', 'close', 'destroy']; a.fn.select2 = function (b) { if (typeof (b = b || {}) === 'object') return this.each(function () { const d = a.extend(!0, {}, b); new c(a(this), d) }), this; if (typeof b === 'string') { let d; const g = Array.prototype.slice.call(arguments, 1); return this.each(function () { const a = e.GetData(this, 'select2'); a == null && window.console && console.error && console.error(`The select2('${b}') method was called on an element that is not using Select2.`), d = a[b].apply(a, g) }), a.inArray(b, f) > -1 ? this : d } throw new Error(`Invalid arguments for Select2: ${b}`) } } return a.fn.select2.defaults == null && (a.fn.select2.defaults = d), c }), { define: b.define, require: b.require } }()); const c = b.require('jquery.select2'); return a.fn.select2.amd = b, c }))

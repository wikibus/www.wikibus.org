/*!
 * bootstrap-star-rating v4.0.3
 * http://plugins.krajee.com/star-rating
 *
 * Author: Kartik Visweswaran
 * Copyright: 2013 - 2017, Kartik Visweswaran, Krajee.com
 *
 * Licensed under the BSD 3-Clause
 * https://github.com/kartik-v/bootstrap-star-rating/blob/master/LICENSE.md
 */!(function (e) {
  typeof define === 'function' && define.amd ? define(['jquery'], e) : typeof module === 'object' && module.exports ? module.exports = e(require('jquery')) : e(window.jQuery)
}((e) => {
  e.fn.ratingLocales = {}, e.fn.ratingThemes = {}; let t, a; t = { NAMESPACE: '.rating', DEFAULT_MIN: 0, DEFAULT_MAX: 5, DEFAULT_STEP: 0.5, isEmpty(t, a) { return t === null || void 0 === t || t.length === 0 || a && e.trim(t) === '' }, getCss(e, t) { return e ? ` ${t}` : '' }, addCss(e, t) { e.removeClass(t).addClass(t) }, getDecimalPlaces(e) { const t = (`${e}`).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/); return t ? Math.max(0, (t[1] ? t[1].length : 0) - (t[2] ? +t[2] : 0)) : 0 }, applyPrecision(e, t) { return parseFloat(e.toFixed(t)) }, handler(e, a, n, r, i) { const l = i ? a : a.split(' ').join(`${t.NAMESPACE} `) + t.NAMESPACE; r || e.off(l), e.on(l, n) } }, a = function (t, a) { const n = this; n.$element = e(t), n._init(a) }, a.prototype = { constructor: a, _parseAttr(e, a) { let n; let r; let i; let l; const s = this; const o = s.$element; const c = o.attr('type'); if (c === 'range' || c === 'number') { switch (r = a[e] || o.data(e) || o.attr(e), e) { case 'min':i = t.DEFAULT_MIN; break; case 'max':i = t.DEFAULT_MAX; break; default:i = t.DEFAULT_STEP }n = t.isEmpty(r) ? i : r, l = parseFloat(n) } else l = parseFloat(a[e]); return isNaN(l) ? i : l }, _parseValue(e) { const t = this; let a = parseFloat(e); return isNaN(a) && (a = t.clearValue), !t.zeroAsNull || a !== 0 && a !== '0' ? a : null }, _setDefault(e, a) { const n = this; t.isEmpty(n[e]) && (n[e] = a) }, _initSlider(e) { const a = this; const n = a.$element.val(); a.initialValue = t.isEmpty(n) ? 0 : n, a._setDefault('min', a._parseAttr('min', e)), a._setDefault('max', a._parseAttr('max', e)), a._setDefault('step', a._parseAttr('step', e)), (isNaN(a.min) || t.isEmpty(a.min)) && (a.min = t.DEFAULT_MIN), (isNaN(a.max) || t.isEmpty(a.max)) && (a.max = t.DEFAULT_MAX), (isNaN(a.step) || t.isEmpty(a.step) || a.step === 0) && (a.step = t.DEFAULT_STEP), a.diff = a.max - a.min }, _initHighlight(e) { let t; const a = this; const n = a._getCaption(); e || (e = a.$element.val()), t = `${a.getWidthFromValue(e)}%`, a.$filledStars.width(t), a.cache = { caption: n, width: t, val: e } }, _getContainerCss() { const e = this; return `rating-container${t.getCss(e.theme, `theme-${e.theme}`)}${t.getCss(e.rtl, 'rating-rtl')}${t.getCss(e.size, `rating-${e.size}`)}${t.getCss(e.animate, 'rating-animate')}${t.getCss(e.disabled || e.readonly, 'rating-disabled')}${t.getCss(e.containerClass, e.containerClass)}` }, _checkDisabled() { const e = this; const t = e.$element; const a = e.options; e.disabled = void 0 === a.disabled ? t.attr('disabled') || !1 : a.disabled, e.readonly = void 0 === a.readonly ? t.attr('readonly') || !1 : a.readonly, e.inactive = e.disabled || e.readonly, t.attr({ disabled: e.disabled, readonly: e.readonly }) }, _addContent(e, t) { const a = this; const n = a.$container; const r = e === 'clear'; return a.rtl ? r ? n.append(t) : n.prepend(t) : r ? n.prepend(t) : n.append(t) }, _generateRating() { let a; let n; let r; const i = this; const l = i.$element; n = i.$container = e(document.createElement('div')).insertBefore(l), t.addCss(n, i._getContainerCss()), i.$rating = a = e(document.createElement('div')).attr('class', 'rating-stars').appendTo(n).append(i._getStars('empty')).append(i._getStars('filled')), i.$emptyStars = a.find('.empty-stars'), i.$filledStars = a.find('.filled-stars'), i._renderCaption(), i._renderClear(), i._initHighlight(), n.append(l), i.rtl && (r = Math.max(i.$emptyStars.outerWidth(), i.$filledStars.outerWidth()), i.$emptyStars.width(r)), l.appendTo(a) }, _getCaption() { const e = this; return e.$caption && e.$caption.length ? e.$caption.html() : e.defaultCaption }, _setCaption(e) { const t = this; t.$caption && t.$caption.length && t.$caption.html(e) }, _renderCaption() { let a; const n = this; const r = n.$element.val(); const i = n.captionElement ? e(n.captionElement) : ''; if (n.showCaption) { if (a = n.fetchCaption(r), i && i.length) return t.addCss(i, 'caption'), i.html(a), void (n.$caption = i); n._addContent('caption', `<div class="caption">${a}</div>`), n.$caption = n.$container.find('.caption') } }, _renderClear() { let a; const n = this; const r = n.clearElement ? e(n.clearElement) : ''; if (n.showClear) { if (a = n._getClearClass(), r.length) return t.addCss(r, a), r.attr({ title: n.clearButtonTitle }).html(n.clearButton), void (n.$clear = r); n._addContent('clear', `<div class="${a}" title="${n.clearButtonTitle}">${n.clearButton}</div>`), n.$clear = n.$container.find(`.${n.clearButtonBaseClass}`) } }, _getClearClass() { const e = this; return `${e.clearButtonBaseClass} ${e.inactive ? '' : e.clearButtonActiveClass}` }, _toggleHover(e) { let t; let a; let n; const r = this; e && (r.hoverChangeStars && (t = r.getWidthFromValue(r.clearValue), a = e.val <= r.clearValue ? `${t}%` : e.width, r.$filledStars.css('width', a)), r.hoverChangeCaption && (n = e.val <= r.clearValue ? r.fetchCaption(r.clearValue) : e.caption, n && r._setCaption(`${n}`))) }, _init(t) { let a; const n = this; const r = n.$element.addClass('rating-input'); return n.options = t, e.each(t, (e, t) => { n[e] = t }), (n.rtl || r.attr('dir') === 'rtl') && (n.rtl = !0, r.attr('dir', 'rtl')), n.starClicked = !1, n.clearClicked = !1, n._initSlider(t), n._checkDisabled(), n.displayOnly && (n.inactive = !0, n.showClear = !1, n.showCaption = !1), n._generateRating(), n._initEvents(), n._listen(), a = n._parseValue(r.val()), r.val(a), r.removeClass('rating-loading') }, _initEvents() { const e = this; e.events = { _getTouchPosition(a) { const n = t.isEmpty(a.pageX) ? a.originalEvent.touches[0].pageX : a.pageX; return n - e.$rating.offset().left }, _listenClick(e, t) { return e.stopPropagation(), e.preventDefault(), e.handled === !0 ? !1 : (t(e), void (e.handled = !0)) }, _noMouseAction(t) { return !e.hoverEnabled || e.inactive || t && t.isDefaultPrevented() }, initTouch(a) { let n; let r; let i; let l; let s; let o; let c; let u; const d = e.clearValue || 0; const p = 'ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch; p && !e.inactive && (n = a.originalEvent, r = t.isEmpty(n.touches) ? n.changedTouches : n.touches, i = e.events._getTouchPosition(r[0]), a.type === 'touchend' ? (e._setStars(i), u = [e.$element.val(), e._getCaption()], e.$element.trigger('change').trigger('rating:change', u), e.starClicked = !0) : (l = e.calculate(i), s = l.val <= d ? e.fetchCaption(d) : l.caption, o = e.getWidthFromValue(d), c = l.val <= d ? `${o}%` : l.width, e._setCaption(s), e.$filledStars.css('width', c))) }, starClick(t) { let a, n; e.events._listenClick(t, (t) => e.inactive ? !1 : (a = e.events._getTouchPosition(t), e._setStars(a), n = [e.$element.val(), e._getCaption()], e.$element.trigger('change').trigger('rating.change', n), void (e.starClicked = !0))) }, clearClick(t) { e.events._listenClick(t, () => { e.inactive || (e.clear(), e.clearClicked = !0) }) }, starMouseMove(t) { let a, n; e.events._noMouseAction(t) || (e.starClicked = !1, a = e.events._getTouchPosition(t), n = e.calculate(a), e._toggleHover(n), e.$element.trigger('rating:hover', [n.val, n.caption, 'stars'])) }, starMouseLeave(t) { let a; e.events._noMouseAction(t) || e.starClicked || (a = e.cache, e._toggleHover(a), e.$element.trigger('rating:hoverleave', ['stars'])) }, clearMouseMove(t) { let a, n, r, i; !e.events._noMouseAction(t) && e.hoverOnClear && (e.clearClicked = !1, a = `<span class="${e.clearCaptionClass}">${e.clearCaption}</span>`, n = e.clearValue, r = e.getWidthFromValue(n) || 0, i = { caption: a, width: r, val: n }, e._toggleHover(i), e.$element.trigger('rating:hover', [n, a, 'clear'])) }, clearMouseLeave(t) { let a; e.events._noMouseAction(t) || e.clearClicked || !e.hoverOnClear || (a = e.cache, e._toggleHover(a), e.$element.trigger('rating:hoverleave', ['clear'])) }, resetForm(t) { t && t.isDefaultPrevented() || e.inactive || e.reset() } } }, _listen() { const a = this; const n = a.$element; const r = n.closest('form'); const i = a.$rating; const l = a.$clear; const s = a.events; return t.handler(i, 'touchstart touchmove touchend', e.proxy(s.initTouch, a)), t.handler(i, 'click touchstart', e.proxy(s.starClick, a)), t.handler(i, 'mousemove', e.proxy(s.starMouseMove, a)), t.handler(i, 'mouseleave', e.proxy(s.starMouseLeave, a)), a.showClear && l.length && (t.handler(l, 'click touchstart', e.proxy(s.clearClick, a)), t.handler(l, 'mousemove', e.proxy(s.clearMouseMove, a)), t.handler(l, 'mouseleave', e.proxy(s.clearMouseLeave, a))), r.length && t.handler(r, 'reset', e.proxy(s.resetForm, a), !0), n }, _getStars(e) { let t; const a = this; let n = `<span class="${e}-stars">`; for (t = 1; t <= a.stars; t++)n += `<span class="star">${a[`${e}Star`]}</span>`; return `${n}</span>` }, _setStars(e) { const t = this; const a = arguments.length ? t.calculate(e) : t.calculate(); const n = t.$element; const r = t._parseValue(a.val); return n.val(r), t.$filledStars.css('width', a.width), t._setCaption(a.caption), t.cache = a, n }, showStars(e) { const t = this; const a = t._parseValue(e); return t.$element.val(a), t._setStars() }, calculate(e) { const a = this; const n = t.isEmpty(a.$element.val()) ? 0 : a.$element.val(); const r = arguments.length ? a.getValueFromPosition(e) : n; const i = a.fetchCaption(r); let l = a.getWidthFromValue(r); return l += '%', { caption: i, width: l, val: r } }, getValueFromPosition(e) { let a; let n; const r = this; const i = t.getDecimalPlaces(r.step); const l = r.$rating.width(); return n = r.diff * e / (l * r.step), n = r.rtl ? Math.floor(n) : Math.ceil(n), a = t.applyPrecision(parseFloat(r.min + n * r.step), i), a = Math.max(Math.min(a, r.max), r.min), r.rtl ? r.max - a : a }, getWidthFromValue(e) { let t; let a; const n = this; const r = n.min; const i = n.max; const l = n.$emptyStars; return !e || r >= e || r === i ? 0 : (a = l.outerWidth(), t = a ? l.width() / a : 1, e >= i ? 100 : (e - r) * t * 100 / (i - r)) }, fetchCaption(e) { let a; let n; let r; let i; let l; const s = this; let o = parseFloat(e) || s.clearValue; const c = s.starCaptions; const u = s.starCaptionClasses; return o && o !== s.clearValue && (o = t.applyPrecision(o, t.getDecimalPlaces(s.step))), i = typeof u === 'function' ? u(o) : u[o], r = typeof c === 'function' ? c(o) : c[o], n = t.isEmpty(r) ? s.defaultCaption.replace(/\{rating}/g, o) : r, a = t.isEmpty(i) ? s.clearCaptionClass : i, l = o === s.clearValue ? s.clearCaption : n, `<span class="${a}">${l}</span>` }, destroy() { const a = this; const n = a.$element; return t.isEmpty(a.$container) || a.$container.before(n).remove(), e.removeData(n.get(0)), n.off('rating').removeClass('rating rating-input') }, create(e) { const t = this; const a = e || t.options || {}; return t.destroy().rating(a) }, clear() { const e = this; const t = `<span class="${e.clearCaptionClass}">${e.clearCaption}</span>`; return e.inactive || e._setCaption(t), e.showStars(e.clearValue).trigger('change').trigger('rating:clear') }, reset() { const e = this; return e.showStars(e.initialValue).trigger('rating:reset') }, update(e) { const t = this; return arguments.length ? t.showStars(e) : t.$element }, refresh(t) { const a = this; const n = a.$element; return t ? a.destroy().rating(e.extend(!0, a.options, t)).trigger('rating:refresh') : n } }, e.fn.rating = function (n) { const r = Array.apply(null, arguments); const i = []; switch (r.shift(), this.each(function () { let l; const s = e(this); let o = s.data('rating'); const c = typeof n === 'object' && n; const u = c.theme || s.data('theme'); const d = c.language || s.data('language') || 'en'; let p = {}; let g = {}; o || (u && (p = e.fn.ratingThemes[u] || {}), d === 'en' || t.isEmpty(e.fn.ratingLocales[d]) || (g = e.fn.ratingLocales[d]), l = e.extend(!0, {}, e.fn.rating.defaults, p, e.fn.ratingLocales.en, g, c, s.data()), o = new a(this, l), s.data('rating', o)), typeof n === 'string' && i.push(o[n].apply(o, r)) }), i.length) { case 0:return this; case 1:return void 0 === i[0] ? this : i[0]; default:return i } }, e.fn.rating.defaults = { theme: '', language: 'en', stars: 5, filledStar: '<i class="icon-star3"></i>', emptyStar: '<i class="icon-star-empty"></i>', containerClass: '', size: 'md', animate: !0, displayOnly: !1, rtl: !1, showClear: !0, showCaption: !0, starCaptionClasses: { 0.5: 'badge badge-danger badge-danger', 1: 'badge badge-danger badge-danger', 1.5: 'badge badge-warning badge-warning', 2: 'badge badge-warning badge-warning', 2.5: 'badge badge-info badge-info', 3: 'badge badge-info badge-info', 3.5: 'badge badge-primary badge-primary', 4: 'badge badge-primary badge-primary', 4.5: 'badge badge-success badge-success', 5: 'badge badge-success badge-success' }, clearButton: '<i class="icon-minus-sign"></i>', clearButtonBaseClass: 'clear-rating', clearButtonActiveClass: 'clear-rating-active', clearCaptionClass: 'badge badge-default', clearValue: null, captionElement: null, clearElement: null, hoverEnabled: !0, hoverChangeCaption: !0, hoverChangeStars: !0, hoverOnClear: !0, zeroAsNull: !0 }, e.fn.ratingLocales.en = { defaultCaption: '{rating} Stars', starCaptions: { 0.5: 'Half Star', 1: 'One Star', 1.5: 'One & Half Star', 2: 'Two Stars', 2.5: 'Two & Half Stars', 3: 'Three Stars', 3.5: 'Three & Half Stars', 4: 'Four Stars', 4.5: 'Four & Half Stars', 5: 'Five Stars' }, clearButtonTitle: 'Clear', clearCaption: 'Not Rated' }, e.fn.rating.Constructor = a, e(document).ready(() => { const t = e('input.rating'); t.length && t.removeClass('rating-loading').addClass('rating-loading').rating() })
}))

/*!
 * Krajee SVG Theme Configuration for bootstrap-star-rating.
 * This file must be loaded after 'star-rating.js'.
 *
 * @see http://github.com/kartik-v/bootstrap-star-rating
 * @author Kartik Visweswaran <kartikv2@gmail.com>
 */!(function (a) {
  a.fn.ratingThemes['krajee-svg'] = { filledStar: '<span class="krajee-icon krajee-icon-star"></span>', emptyStar: '<span class="krajee-icon krajee-icon-star"></span>', clearButton: '<span class="krajee-icon-clear"></span>' }
}(window.jQuery))

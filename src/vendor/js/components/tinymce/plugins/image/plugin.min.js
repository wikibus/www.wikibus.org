!(function () {
  let e; let n; let t; let r; const i = tinymce.util.Tools.resolve('tinymce.PluginManager'); const o = function () { for (let e = [], n = 0; n < arguments.length; n++)e[n] = arguments[n] }; const h = function (e) { return function () { return e } }; const a = function (e) { return e }; const u = h(!1); const s = h(!0); const c = u; const l = s; const f = function () { return d }; var d = (r = { fold(e, n) { return e() }, is: c, isSome: c, isNone: l, getOr: t = function (e) { return e }, getOrThunk: n = function (e) { return e() }, getOrDie(e) { throw new Error(e || 'error: getOrDie called on none.') }, getOrNull() { return null }, getOrUndefined() { return undefined }, or: t, orThunk: n, map: f, ap: f, each() {}, bind: f, flatten: f, exists: c, forall: l, filter: f, equals: e = function (e) { return e.isNone() }, equals_: e, toArray() { return [] }, toString: h('none()') }, Object.freeze && Object.freeze(r), r); var m = function (t) { const e = function () { return t }; const n = function () { return i }; const r = function (e) { return e(t) }; var i = { fold(e, n) { return n(t) }, is(e) { return t === e }, isSome: l, isNone: c, getOr: e, getOrThunk: e, getOrDie: e, getOrNull: e, getOrUndefined: e, or: n, orThunk: n, map(e) { return m(e(t)) }, ap(e) { return e.fold(f, (e) => m(e(t))) }, each(e) { e(t) }, bind: r, flatten: e, exists: r, forall: r, filter(e) { return e(t) ? i : d }, equals(e) { return e.is(t) }, equals_(e, n) { return e.fold(c, (e) => n(t, e)) }, toArray() { return [t] }, toString() { return `some(${t})` } }; return i }; const y = { some: m, none: f, from(e) { return e === null || e === undefined ? d : m(e) } }; const g = function (n) { return function (e) { return (function (e) { if (e === null) return 'null'; const n = typeof e; return n === 'object' && Array.prototype.isPrototypeOf(e) ? 'array' : n === 'object' && String.prototype.isPrototypeOf(e) ? 'string' : n }(e)) === n } }; const w = g('string'); const p = g('object'); const v = g('function'); const b = g('number'); const O = function (e, n) { for (let t = 0, r = e.length; t < r; t++)n(e[t], t, e) }; const S = Array.prototype.push; const N = function (e) { for (var n = [], t = 0, r = e.length; t < r; ++t) { if (!Array.prototype.isPrototypeOf(e[t])) throw new Error(`Arr.flatten item ${t} was not an array, input: ${e}`); S.apply(n, e[t]) } return n }; var x = (Array.prototype.slice, v(Array.from) && Array.from, function () { return (x = Object.assign || function (e) { for (var n, t = 1, r = arguments.length; t < r; t++) for (const i in n = arguments[t])Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]); return e }).apply(this, arguments) }); var T = function (e) { let t = y.none(); let n = []; const r = function (e) { i() ? a(e) : n.push(e) }; var i = function () { return t.isSome() }; const o = function (e) { O(e, a) }; var a = function (n) { t.each((e) => { setTimeout(() => { n(e) }, 0) }) }; return e((e) => { t = y.some(e), o(n), n = [] }), { get: r, map(t) { return T((n) => { r((e) => { n(t(e)) }) }) }, isReady: i } }; const E = { nu: T, pure(n) { return T((e) => { e(n) }) } }; var D = function (n) { const e = function (e) { let r; n((r = e, function () { for (var e = [], n = 0; n < arguments.length; n++)e[n] = arguments[n]; const t = this; setTimeout(() => { r.apply(t, e) }, 0) })) }; const t = function () { return E.nu(e) }; return { map(r) { return D((t) => { e((e) => { const n = r(e); t(n) }) }) }, bind(t) { return D((n) => { e((e) => { t(e).get(n) }) }) }, anonBind(t) { return D((n) => { e((e) => { t.get(n) }) }) }, toLazy: t, toCached() { let n = null; return D((e) => { n === null && (n = t()), n.get(e) }) }, get: e } }; const A = { nu: D, pure(n) { return D((e) => { e(n) }) } }; var C = function (t) { return { is(e) { return t === e }, isValue: s, isError: u, getOr: h(t), getOrThunk: h(t), getOrDie: h(t), or(e) { return C(t) }, orThunk(e) { return C(t) }, fold(e, n) { return n(t) }, map(e) { return C(e(t)) }, mapError(e) { return C(t) }, each(e) { e(t) }, bind(e) { return e(t) }, exists(e) { return e(t) }, forall(e) { return e(t) }, toOption() { return y.some(t) } } }; var _ = function (t) { return { is: u, isValue: u, isError: s, getOr: a, getOrThunk(e) { return e() }, getOrDie() { return e = String(t), (function () { throw new Error(e) }()); let e }, or(e) { return e }, orThunk(e) { return e() }, fold(e, n) { return e(t) }, map(e) { return _(t) }, mapError(e) { return _(e(t)) }, each: o, bind(e) { return _(t) }, exists: u, forall: s, toOption: y.none } }; const I = { value: C, error: _ }; var R = function (o) { return x({}, o, { toCached() { return R(o.toCached()) }, bindFuture(n) { return R(o.bind((e) => e.fold((e) => A.pure(I.error(e)), (e) => n(e)))) }, bindResult(n) { return R(o.map((e) => e.bind(n))) }, mapResult(n) { return R(o.map((e) => e.map(n))) }, mapError(n) { return R(o.map((e) => e.mapError(n))) }, foldResult(n, t) { return o.map((e) => e.fold(n, t)) }, withTimeout(e, i) { return R(A.nu((n) => { let t = !1; const r = window.setTimeout(() => { t = !0, n(I.error(i())) }, e); o.get((e) => { t || (window.clearTimeout(r), n(e)) }) })) } }) }; const L = function (e) { return R(A.nu(e)) }; const U = L; const P = Object.prototype.hasOwnProperty; const k = function (a) { return function () { for (var e = new Array(arguments.length), n = 0; n < e.length; n++)e[n] = arguments[n]; if (e.length === 0) throw new Error("Can't merge zero objects"); for (var t = {}, r = 0; r < e.length; r++) { const i = e[r]; for (const o in i)P.call(i, o) && (t[o] = a(t[o], i[o])) } return t } }; var M = k((e, n) => p(e) && p(n) ? M(e, n) : n); const j = k((e, n) => n); const z = typeof window !== 'undefined' ? window : Function('return this;')(); const B = function (e, n) { return (function (e, n) { for (var t = n !== undefined && n !== null ? n : z, r = 0; r < e.length && t !== undefined && t !== null; ++r)t = t[e[r]]; return t }(e.split('.'), n)) }; const F = { getOrDie(e, n) { const t = B(e, n); if (t === undefined || t === null) throw `${e} not available on this browser`; return t } }; const H = function () { return F.getOrDie('URL') }; const W = function (e) { return H().createObjectURL(e) }; const G = function (e) { H().revokeObjectURL(e) }; const X = function (e) { const n = e.imageList.map((e) => ({ name: 'images', type: 'selectbox', label: 'Image list', items: e })); const t = e.classList.map((e) => ({ name: 'classes', type: 'selectbox', label: 'Class', items: e })); return N([[{ name: 'src', type: 'urlinput', filetype: 'image', label: 'Source' }], n.toArray(), e.hasDescription ? [{ name: 'alt', type: 'input', label: 'Image description' }] : [], e.hasImageTitle ? [{ name: 'title', type: 'input', label: 'Image title' }] : [], e.hasDimensions ? [{ name: 'dimensions', type: 'sizeinput' }] : [], [{ type: 'grid', columns: 2, items: N([t.toArray(), e.hasImageCaption ? [{ type: 'label', label: 'Caption', items: [{ type: 'checkbox', name: 'caption', label: 'Show caption' }] }] : []]) }]]) }; const $ = function (e) { return { title: 'General', type: 'form', items: X(e) } }; const q = X; const V = tinymce.util.Tools.resolve('tinymce.util.Promise'); const J = tinymce.util.Tools.resolve('tinymce.util.Tools'); const Y = tinymce.util.Tools.resolve('tinymce.util.XHR'); const Z = function (e) { return !1 !== e.settings.image_dimensions }; const K = function (e) { return !0 === e.settings.image_advtab }; const Q = function (e) { return e.getParam('image_prepend_url', '') }; const ee = function (e) { return e.getParam('image_class_list') }; const ne = function (e) { return !1 !== e.settings.image_description }; const te = function (e) { return !0 === e.settings.image_title }; const re = function (e) { return !0 === e.settings.image_caption }; const ie = function (e) { return e.getParam('image_list', !1) }; const oe = function (e) { return !!e.getParam('images_upload_url', !1) }; const ae = function (e) { return !!e.getParam('images_upload_handler', !1) }; const ue = function (e) { return e.getParam('images_upload_url') }; const se = function (e) { return e.getParam('images_upload_handler') }; const ce = function (e) { return e.getParam('images_upload_base_path') }; const le = function (e) { return e.getParam('images_upload_credentials') }; const fe = function (e, n) { return Math.max(parseInt(e, 10), parseInt(n, 10)) }; const de = function (e, n) { const t = document.createElement('img'); function r(e) { t.parentNode && t.parentNode.removeChild(t), n(e) }t.onload = function () { const e = { width: fe(t.width, t.clientWidth), height: fe(t.height, t.clientHeight) }; r(I.value(e)) }, t.onerror = function () { r(I.error(undefined)) }; const i = t.style; i.visibility = 'hidden', i.position = 'fixed', i.bottom = i.left = '0px', i.width = i.height = 'auto', document.body.appendChild(t), t.src = e }; const me = function (e) { return e && (e = e.replace(/px$/, '')), e }; const ge = function (e) { return e.length > 0 && /^[0-9]+$/.test(e) && (e += 'px'), e }; const pe = function (e) { if (e.margin) { const n = String(e.margin).split(' '); switch (n.length) { case 1:e['margin-top'] = e['margin-top'] || n[0], e['margin-right'] = e['margin-right'] || n[0], e['margin-bottom'] = e['margin-bottom'] || n[0], e['margin-left'] = e['margin-left'] || n[0]; break; case 2:e['margin-top'] = e['margin-top'] || n[0], e['margin-right'] = e['margin-right'] || n[1], e['margin-bottom'] = e['margin-bottom'] || n[0], e['margin-left'] = e['margin-left'] || n[1]; break; case 3:e['margin-top'] = e['margin-top'] || n[0], e['margin-right'] = e['margin-right'] || n[1], e['margin-bottom'] = e['margin-bottom'] || n[2], e['margin-left'] = e['margin-left'] || n[1]; break; case 4:e['margin-top'] = e['margin-top'] || n[0], e['margin-right'] = e['margin-right'] || n[1], e['margin-bottom'] = e['margin-bottom'] || n[2], e['margin-left'] = e['margin-left'] || n[3] } delete e.margin } return e }; const he = function (e, n) { const t = ie(e); typeof t === 'string' ? Y.send({ url: t, success(e) { n(JSON.parse(e)) } }) : typeof t === 'function' ? t(n) : n(t) }; const ve = function (e, n, t) { function r() { t.onload = t.onerror = null, e.selection && (e.selection.select(t), e.nodeChanged()) }t.onload = function () { n.width || n.height || !Z(e) || e.dom.setAttribs(t, { width: t.clientWidth, height: t.clientHeight }), r() }, t.onerror = r }; const be = function (i) { return new V((e, n) => { const t = (function r() { return new (F.getOrDie('FileReader'))() }()); t.onload = function () { e(t.result) }, t.onerror = function () { n(t.error.message) }, t.readAsDataURL(i) }) }; const ye = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils').DOM; const we = function (e) { return e.style.marginLeft && e.style.marginRight && e.style.marginLeft === e.style.marginRight ? me(e.style.marginLeft) : '' }; const Oe = function (e) { return e.style.marginTop && e.style.marginBottom && e.style.marginTop === e.style.marginBottom ? me(e.style.marginTop) : '' }; const Se = function (e) { return e.style.borderWidth ? me(e.style.borderWidth) : '' }; const Ne = function (e, n) { return e.hasAttribute(n) ? e.getAttribute(n) : '' }; const xe = function (e, n) { return e.style[n] ? e.style[n] : '' }; const Te = function (e) { return e.parentNode !== null && e.parentNode.nodeName === 'FIGURE' }; const Ee = function (e, n, t) { e.setAttribute(n, t) }; const De = function (e) { let n, t, r, i; Te(e) ? (i = (r = e).parentNode, ye.insertAfter(r, i), ye.remove(i)) : (n = e, t = ye.create('figure', { class: 'image' }), ye.insertAfter(t, n), t.appendChild(n), t.appendChild(ye.create('figcaption', { contentEditable: !0 }, 'Caption')), t.contentEditable = 'false') }; const Ae = function (e, n) { const t = e.getAttribute('style'); const r = n(t !== null ? t : ''); r.length > 0 ? (e.setAttribute('style', r), e.setAttribute('data-mce-style', r)) : e.removeAttribute('style') }; const Ce = function (e, r) { return function (e, n, t) { e.style[n] ? (e.style[n] = ge(t), Ae(e, r)) : Ee(e, n, t) } }; const _e = function (e, n) { return e.style[n] ? me(e.style[n]) : Ne(e, n) }; const Ie = function (e, n) { const t = ge(n); e.style.marginLeft = t, e.style.marginRight = t }; const Re = function (e, n) { const t = ge(n); e.style.marginTop = t, e.style.marginBottom = t }; const Le = function (e, n) { const t = ge(n); e.style.borderWidth = t }; const Ue = function (e, n) { e.style.borderStyle = n }; const Pe = function (e) { return e.nodeName === 'FIGURE' }; const ke = function (e, n) { const t = document.createElement('img'); return Ee(t, 'style', n.style), (we(t) || n.hspace !== '') && Ie(t, n.hspace), (Oe(t) || n.vspace !== '') && Re(t, n.vspace), (Se(t) || n.border !== '') && Le(t, n.border), (xe(t, 'borderStyle') || n.borderStyle !== '') && Ue(t, n.borderStyle), e(t.getAttribute('style')) }; const Me = function (e, n) { return { src: Ne(n, 'src'), alt: Ne(n, 'alt'), title: Ne(n, 'title'), width: _e(n, 'width'), height: _e(n, 'height'), class: Ne(n, 'class'), style: e(Ne(n, 'style')), caption: Te(n), hspace: we(n), vspace: Oe(n), border: Se(n), borderStyle: xe(n, 'borderStyle') } }; const je = function (e, n, t, r, i) { t[r] !== n[r] && i(e, r, t[r]) }; const ze = function (r, i) { return function (e, n, t) { r(e, t), Ae(e, i) } }; const Be = function (e, n, t) { const r = Me(e, t); je(t, r, n, 'caption', (e, n, t) => De(e)), je(t, r, n, 'src', Ee), je(t, r, n, 'alt', Ee), je(t, r, n, 'title', Ee), je(t, r, n, 'width', Ce(0, e)), je(t, r, n, 'height', Ce(0, e)), je(t, r, n, 'class', Ee), je(t, r, n, 'style', ze((e, n) => Ee(e, 'style', n), e)), je(t, r, n, 'hspace', ze(Ie, e)), je(t, r, n, 'vspace', ze(Re, e)), je(t, r, n, 'border', ze(Le, e)), je(t, r, n, 'borderStyle', ze(Ue, e)) }; const Fe = function (e, n) { const t = e.dom.styles.parse(n); const r = pe(t); const i = e.dom.styles.parse(e.dom.styles.serialize(r)); return e.dom.styles.serialize(i) }; const He = function (e) { const n = e.selection.getNode(); const t = e.dom.getParent(n, 'figure.image'); return t ? e.dom.select('img', t)[0] : n && (n.nodeName !== 'IMG' || n.getAttribute('data-mce-object') || n.getAttribute('data-mce-placeholder')) ? null : n }; const We = function (n, e) { const t = n.dom; const r = t.getParent(e.parentNode, (e) => n.schema.getTextBlockElements()[e.nodeName], n.getBody()); return r ? t.split(r, e) : e }; const Ge = function (n, e) { const t = (function (e, n) { const t = document.createElement('img'); if (Be(e, j(n, { caption: !1 }), t), Ee(t, 'alt', n.alt), n.caption) { const r = ye.create('figure', { class: 'image' }); return r.appendChild(t), r.appendChild(ye.create('figcaption', { contentEditable: !0 }, 'Caption')), r.contentEditable = 'false', r } return t }((e) => Fe(n, e), e)); n.dom.setAttrib(t, 'data-mce-id', '__mcenew'), n.focus(), n.selection.setContent(t.outerHTML); const r = n.dom.select('*[data-mce-id="__mcenew"]')[0]; if (n.dom.setAttrib(r, 'data-mce-id', null), Pe(r)) { const i = We(n, r); n.selection.select(i) } else n.selection.select(r) }; const Xe = function (e, n) { const t = He(e); t ? n.src ? (function (n, e) { let t; const r = He(n); if (Be((e) => Fe(n, e), e, r), t = r, n.dom.setAttrib(t, 'src', t.getAttribute('src')), Pe(r.parentNode)) { const i = r.parentNode; We(n, i), n.selection.select(r.parentNode) } else n.selection.select(r), ve(n, e, r) }(e, n)) : (function (e, n) { if (n) { const t = e.dom.is(n.parentNode, 'figure.image') ? n.parentNode : n; e.dom.remove(t), e.focus(), e.nodeChanged(), e.dom.isEmpty(e.getBody()) && (e.setContent(''), e.selection.setCursorLocation()) } }(e, t)) : n.src && Ge(e, n) }; const $e = function (e) { return w(e.value) ? e.value : '' }; var qe = function (e, i) { const o = []; return J.each(e, (e) => { const n = w(e.text) ? e.text : w(e.title) ? e.title : ''; if (e.menu !== undefined) { const t = qe(e.menu, i); o.push({ text: n, items: t }) } else { const r = i(e); o.push({ text: n, value: r }) } }), o }; const Ve = function (n) { return void 0 === n && (n = $e), function (e) { return e ? y.from(e).map((e) => qe(e, n)) : y.none() } }; var Je = function (e, t) { return (function (e, n) { for (let t = 0; t < e.length; t++) { const r = n(e[t], t); if (r.isSome()) return r } return y.none() }(e, (e) => { return n = e, Object.prototype.hasOwnProperty.call(n, 'items') ? Je(e.items, t) : e.value === t ? y.some(e) : y.none(); let n })) }; const Ye = Ve; const Ze = function (e) { return Ve($e)(e) }; const Ke = function (e, n) { return e.bind((e) => Je(e, n)) }; const Qe = function () {}; function en(u) { const n = function (e, r, i, n) { let o, t; (o = (function a() { return new (F.getOrDie('XMLHttpRequest'))() }())).open('POST', u.url), o.withCredentials = u.credentials, o.upload.onprogress = function (e) { n(e.loaded / e.total * 100) }, o.onerror = function () { i(`Image upload failed due to a XHR Transport error. Code: ${o.status}`) }, o.onload = function () { let e, n, t; o.status < 200 || o.status >= 300 ? i(`HTTP Error: ${o.status}`) : (e = JSON.parse(o.responseText)) && typeof e.location === 'string' ? r((n = u.basePath, t = e.location, n ? `${n.replace(/\/$/, '')}/${t.replace(/^\//, '')}` : t)) : i(`Invalid JSON: ${o.responseText}`) }, (t = new FormData()).append('file', e.blob(), e.filename()), o.send(t) }; return u = J.extend({ credentials: !1, handler: n }, u), { upload(e) { return u.url || u.handler !== n ? (r = e, i = u.handler, new V((e, n) => { try { i(r, e, n, Qe) } catch (t) { n(t.message) } })) : V.reject('Upload url missing from the settings.'); let r, i } } } let nn; let tn; let rn; const on = function (e) { return { title: 'Advanced', items: [{ type: 'input', label: 'Style', name: 'style' }, { type: 'grid', columns: 2, items: [{ type: 'input', label: 'Vertical space', name: 'vspace' }, { type: 'input', label: 'Horizontal space', name: 'hspace' }, { type: 'input', label: 'Border width', name: 'border' }, { type: 'selectbox', name: 'borderstyle', label: 'Border style', items: [{ text: 'Select...', value: '' }, { text: 'Solid', value: 'solid' }, { text: 'Dotted', value: 'dotted' }, { text: 'Dashed', value: 'dashed' }, { text: 'Double', value: 'double' }, { text: 'Groove', value: 'groove' }, { text: 'Ridge', value: 'ridge' }, { text: 'Inset', value: 'inset' }, { text: 'Outset', value: 'outset' }, { text: 'None', value: 'none' }, { text: 'Hidden', value: 'hidden' }] }] }] } }; const an = function (t) { let n; let e; const r = Ye((e) => t.convertURL(e.value || e.url, 'src')); const i = A.nu((n) => { he(t, (e) => { n(r(e).map((e) => N([[{ text: 'None', value: '' }], e]))) }) }); const o = Ze(ee(t)); const a = K(t); const u = oe(t); const s = ae(t); const c = (e = He(n = t)) ? Me((e) => Fe(n, e), e) : { src: '', alt: '', title: '', width: '', height: '', class: '', style: '', caption: !1, hspace: '', vspace: '', border: '', borderStyle: '' }; const l = ne(t); const f = te(t); const d = Z(t); const m = re(t); const g = ue(t); const p = ce(t); const h = le(t); const v = se(t); const b = y.some(Q(t)).filter((e) => w(e) && e.length > 0); return i.map((e) => ({ image: c, imageList: e, classList: o, hasAdvTab: a, hasUploadUrl: u, hasUploadHandler: s, hasDescription: l, hasImageTitle: f, hasDimensions: d, hasImageCaption: m, url: g, basePath: p, credentials: h, handler: v, prependURL: b })) }; const un = function (e) { return { title: 'Upload', type: 'form', items: [{ type: 'dropzone', name: 'fileinput', flex: !0 }] } }; const sn = function (e) { return { src: { value: e.src, meta: {} }, images: e.src, alt: e.alt, title: e.title, dimensions: { width: e.width, height: e.height }, classes: e.class, caption: e.caption ? 'checked' : 'unchecked', style: e.style, vspace: e.vspace, border: e.border, hspace: e.hspace, borderstyle: e.borderStyle, fileinput: [] } }; const cn = function (e) { return { src: e.src.value, alt: e.alt, title: e.title, width: e.dimensions.width, height: e.dimensions.height, class: e.classes, style: e.style, caption: e.caption === 'checked', hspace: e.hspace, vspace: e.vspace, border: e.border, borderStyle: e.borderstyle } }; const ln = function (e, n) { let t; let r; const i = n.getData(); (t = e, r = i.src.value, /^(?:[a-zA-Z]+:)?\/\//.test(r) ? y.none() : t.prependURL.bind((e) => r.substring(0, e.length) !== e ? y.some(e + r) : y.none())).each((e) => { n.setData({ src: { value: e, meta: i.src.meta } }) }) }; const fn = function (e, n) { (function (e, n) { const t = n.src.meta; if (t === undefined) return y.none(); const r = M({}, n); return e.hasDescription && w(t.alt) && (r.alt = t.alt), e.hasImageTitle && w(t.title) && (r.title = t.title), e.hasDimensions && (w(t.width) && (r.dimensions.width = t.width), w(t.height) && (r.dimensions.height = t.height)), w(t.class) && Ke(e.classList, t.class).each((e) => { r.classes = e.value }), e.hasAdvTab && (w(t.vspace) && (r.vspace = t.vspace), w(t.border) && (r.border = t.border), w(t.hspace) && (r.hspace = t.hspace), w(t.borderstyle) && (r.borderstyle = t.borderstyle)), y.some(r) })(e, n.getData()).each((e) => n.setData(e)) }; const dn = function (e, n, t, r) { let i, o, a, u, s, c, l, f, d, m, g, p; ln(n, r), fn(n, r), i = e, o = n, a = t, s = (u = r).getData(), c = s.src.value, (l = s.src.meta || {}).width || l.height || !o.hasDimensions || i.imageSize(c).get((e) => { e.each((e) => { a.open && u.setData({ dimensions: e }) }) }), f = n, d = t, g = (m = r).getData(), p = Ke(f.imageList, g.src.value), d.prevImage = p, m.setData({ images: p.map((e) => e.value).getOr('') }) }; const mn = function (e, n, t) { let r; let i; let o; let a; let u; const s = pe(e(t.style)); const c = M({}, t); return c.vspace = (r = s)['margin-top'] && r['margin-bottom'] && r['margin-top'] === r['margin-bottom'] ? me(String(r['margin-top'])) : '', c.hspace = (i = s)['margin-right'] && i['margin-left'] && i['margin-right'] === i['margin-left'] ? me(String(i['margin-right'])) : '', c.border = (o = s)['border-width'] ? me(String(o['border-width'])) : '', c.borderstyle = (a = s)['border-style'] ? String(a['border-style']) : '', c.style = (u = n)(e(u(s))), c }; const gn = function (h, v, b) { return function (e, n) { let t, r, i, o, a, u, s, c, l, f, d, m, g, p; n.name === 'src' ? dn(h, v, b, e) : n.name === 'images' ? (l = h, f = v, d = b, g = (m = e).getData(), (p = Ke(f.imageList, g.images)).each((e) => { g.alt === '' || d.prevImage.map((e) => e.text === g.alt).getOr(!1) ? e.value === '' ? m.setData({ src: e, alt: d.prevAlt }) : m.setData({ src: e, alt: e.text }) : m.setData({ src: e }) }), d.prevImage = p, dn(l, f, d, m)) : n.name === 'alt' ? b.prevAlt = e.getData().alt : n.name === 'style' ? (a = h, s = (u = e).getData(), c = mn(a.parseStyle, a.serializeStyle, s), u.setData(c)) : n.name === 'vspace' || n.name === 'hspace' || n.name === 'border' || n.name === 'borderstyle' ? (t = h, r = e, i = M(sn(v.image), r.getData()), o = ke(t.normalizeCss, cn(i)), r.setData({ style: o })) : n.name === 'fileinput' && (function (t, r, i, o) { const e = o.getData(); o.block('Uploading image'); const a = e.fileinput[0]; const u = W(a); const s = en({ url: r.url, basePath: r.basePath, credentials: r.credentials, handler: r.handler }); const c = function () { o.unblock(), G(u) }; be(a).then((e) => { const n = t.createBlobCache(a, u, e); s.upload(n).then((e) => { o.setData({ src: { value: e, meta: {} } }), o.showTab('General'), dn(t, r, i, o), c() }).catch((e) => { c(), t.alertErr(o, e) }) }) }(h, v, b, e)) } }; const pn = function (o) { return function (e) { let n; let t; let r; const i = { prevImage: Ke((n = e).imageList, n.image.src), prevAlt: n.image.alt, open: !0 }; return { title: 'Insert/Edit Image', size: 'normal', body: (r = e, r.hasAdvTab || r.hasUploadUrl || r.hasUploadHandler ? { type: 'tabpanel', tabs: N([[$(r)], r.hasAdvTab ? [on(r)] : [], r.hasUploadUrl || r.hasUploadHandler ? [un(r)] : []]) } : { type: 'panel', items: q(r) }), buttons: [{ type: 'cancel', name: 'cancel', text: 'Cancel' }, { type: 'submit', name: 'save', text: 'Save', primary: !0 }], initialData: sn(e.image), onSubmit: o.onSubmit(e), onChange: gn(o, e, i), onClose: (t = i, function () { t.open = !1 }) } } }; const hn = function (n) { let t; let r; let i; let o; let a; let u; let s; const e = { onSubmit: (s = n, function (t) { return function (e) { const n = M(sn(t.image), e.getData()); s.undoManager.transact(() => { Xe(s, cn(n)) }), s.editorUpload.uploadImagesAuto(), e.close() } }), imageSize: (u = n, function (e) { return U((t) => { de(u.documentBaseURI.toAbsolute(e), (e) => { const n = e.bind((e) => (w(e.width) || b(e.width)) && (w(e.height) || b(e.height)) ? I.value({ width: String(e.width), height: String(e.height) }) : I.error(undefined)); t(n) }) }) }), createBlobCache: (a = n, function (e, n, t) { return a.editorUpload.blobCache.create({ blob: e, blobUri: n, name: e.name ? e.name.replace(/\.[^\.]+$/, '') : null, base64: t.split(',')[1] }) }), alertErr: (o = n, function (e, n) { o.windowManager.alert(n, e.close) }), normalizeCss: (i = n, function (e) { return Fe(i, e) }), parseStyle: (r = n, function (e) { return r.dom.parseStyle(e) }), serializeStyle: (t = n, function (e, n) { return t.dom.serializeStyle(e, n) }) }; return { open() { return an(n).map(pn(e)).get((e) => { n.windowManager.open(e) }) } } }; const vn = function (e) { e.addCommand('mceImage', hn(e).open) }; const bn = function (o) { return function (e) { for (var n, t, r = e.length, i = function (e) { e.attr('contenteditable', o ? 'true' : null) }; r--;)n = e[r], (t = n.attr('class')) && /\bimage\b/.test(t) && (n.attr('contenteditable', o ? 'false' : null), J.each(n.getAll('figcaption'), i)) } }; const yn = function (e) { e.on('preInit', () => { e.parser.addNodeFilter('figure', bn(!0)), e.serializer.addNodeFilter('figure', bn(!1)) }) }; const wn = function (e) { if (e === null || e === undefined) throw new Error('Node cannot be null or undefined'); return { dom: h(e) } }; const On = { fromHtml(e, n) { const t = (n || document).createElement('div'); if (t.innerHTML = e, !t.hasChildNodes() || t.childNodes.length > 1) throw console.error('HTML does not have a single root node', e), new Error('HTML must have a single root node'); return wn(t.childNodes[0]) }, fromTag(e, n) { const t = (n || document).createElement(e); return wn(t) }, fromText(e, n) { const t = (n || document).createTextNode(e); return wn(t) }, fromDom: wn, fromPoint(e, n, t) { const r = e.dom(); return y.from(r.elementFromPoint(n, t)).map(wn) } }; const Sn = (Node.ATTRIBUTE_NODE, Node.CDATA_SECTION_NODE, Node.COMMENT_NODE, Node.DOCUMENT_NODE, Node.DOCUMENT_TYPE_NODE, Node.DOCUMENT_FRAGMENT_NODE, Node.ELEMENT_NODE, Node.TEXT_NODE, Node.PROCESSING_INSTRUCTION_NODE, Node.ENTITY_REFERENCE_NODE, Node.ENTITY_NODE, Node.NOTATION_NODE, function (e, n) { const t = (function (e, n) { for (let t = 0; t < e.length; t++) { const r = e[t]; if (r.test(n)) return r } return undefined }(e, n)); if (!t) return { major: 0, minor: 0 }; const r = function (e) { return Number(n.replace(t, `$${e}`)) }; return xn(r(1), r(2)) }); const Nn = function () { return xn(0, 0) }; var xn = function (e, n) { return { major: e, minor: n } }; const Tn = { nu: xn, detect(e, n) { const t = String(n).toLowerCase(); return e.length === 0 ? Nn() : Sn(e, t) }, unknown: Nn }; const En = 'Firefox'; const Dn = function (e, n) { return function () { return n === e } }; const An = function (e) { const n = e.current; return { current: n, version: e.version, isEdge: Dn('Edge', n), isChrome: Dn('Chrome', n), isIE: Dn('IE', n), isOpera: Dn('Opera', n), isFirefox: Dn(En, n), isSafari: Dn('Safari', n) } }; const Cn = { unknown() { return An({ current: undefined, version: Tn.unknown() }) }, nu: An, edge: h('Edge'), chrome: h('Chrome'), ie: h('IE'), opera: h('Opera'), firefox: h(En), safari: h('Safari') }; const _n = 'Windows'; const In = 'Android'; const Rn = 'Solaris'; const Ln = 'FreeBSD'; const Un = function (e, n) { return function () { return n === e } }; const Pn = function (e) { const n = e.current; return { current: n, version: e.version, isWindows: Un(_n, n), isiOS: Un('iOS', n), isAndroid: Un(In, n), isOSX: Un('OSX', n), isLinux: Un('Linux', n), isSolaris: Un(Rn, n), isFreeBSD: Un(Ln, n) } }; const kn = { unknown() { return Pn({ current: undefined, version: Tn.unknown() }) }, nu: Pn, windows: h(_n), ios: h('iOS'), android: h(In), linux: h('Linux'), osx: h('OSX'), solaris: h(Rn), freebsd: h(Ln) }; const Mn = function (e, n) { const t = String(n).toLowerCase(); return (function (e, n) { for (let t = 0, r = e.length; t < r; t++) { const i = e[t]; if (n(i, t, e)) return y.some(i) } return y.none() }(e, (e) => e.search(t))) }; const jn = function (e, t) { return Mn(e, t).map((e) => { const n = Tn.detect(e.versionRegexes, t); return { current: e.name, version: n } }) }; const zn = function (e, t) { return Mn(e, t).map((e) => { const n = Tn.detect(e.versionRegexes, t); return { current: e.name, version: n } }) }; const Bn = function (e, n) { return e.indexOf(n) !== -1 }; const Fn = /.*?version\/\ ?([0-9]+)\.([0-9]+).*/; const Hn = function (n) { return function (e) { return Bn(e, n) } }; const Wn = [{ name: 'Edge', versionRegexes: [/.*?edge\/ ?([0-9]+)\.([0-9]+)$/], search(e) { return Bn(e, 'edge/') && Bn(e, 'chrome') && Bn(e, 'safari') && Bn(e, 'applewebkit') } }, { name: 'Chrome', versionRegexes: [/.*?chrome\/([0-9]+)\.([0-9]+).*/, Fn], search(e) { return Bn(e, 'chrome') && !Bn(e, 'chromeframe') } }, { name: 'IE', versionRegexes: [/.*?msie\ ?([0-9]+)\.([0-9]+).*/, /.*?rv:([0-9]+)\.([0-9]+).*/], search(e) { return Bn(e, 'msie') || Bn(e, 'trident') } }, { name: 'Opera', versionRegexes: [Fn, /.*?opera\/([0-9]+)\.([0-9]+).*/], search: Hn('opera') }, { name: 'Firefox', versionRegexes: [/.*?firefox\/\ ?([0-9]+)\.([0-9]+).*/], search: Hn('firefox') }, { name: 'Safari', versionRegexes: [Fn, /.*?cpu os ([0-9]+)_([0-9]+).*/], search(e) { return (Bn(e, 'safari') || Bn(e, 'mobile/')) && Bn(e, 'applewebkit') } }]; const Gn = [{ name: 'Windows', search: Hn('win'), versionRegexes: [/.*?windows\ nt\ ?([0-9]+)\.([0-9]+).*/] }, { name: 'iOS', search(e) { return Bn(e, 'iphone') || Bn(e, 'ipad') }, versionRegexes: [/.*?version\/\ ?([0-9]+)\.([0-9]+).*/, /.*cpu os ([0-9]+)_([0-9]+).*/, /.*cpu iphone os ([0-9]+)_([0-9]+).*/] }, { name: 'Android', search: Hn('android'), versionRegexes: [/.*?android\ ?([0-9]+)\.([0-9]+).*/] }, { name: 'OSX', search: Hn('os x'), versionRegexes: [/.*?os\ x\ ?([0-9]+)_([0-9]+).*/] }, { name: 'Linux', search: Hn('linux'), versionRegexes: [] }, { name: 'Solaris', search: Hn('sunos'), versionRegexes: [] }, { name: 'FreeBSD', search: Hn('freebsd'), versionRegexes: [] }]; const Xn = { browsers: h(Wn), oses: h(Gn) }; const $n = function (e) { let n; let t; let r; let i; let o; let a; let u; let s; let c; let l; let f; const d = Xn.browsers(); const m = Xn.oses(); const g = jn(d, e).fold(Cn.unknown, Cn.nu); const p = zn(m, e).fold(kn.unknown, kn.nu); return { browser: g, os: p, deviceType: (t = g, r = e, i = (n = p).isiOS() && !0 === /ipad/i.test(r), o = n.isiOS() && !i, a = n.isAndroid() && n.version.major === 3, u = n.isAndroid() && n.version.major === 4, s = i || a || u && !0 === /mobile/i.test(r), c = n.isiOS() || n.isAndroid(), l = c && !s, f = t.isSafari() && n.isiOS() && !1 === /safari/i.test(r), { isiPad: h(i), isiPhone: h(o), isTablet: h(s), isPhone: h(l), isTouch: h(c), isAndroid: n.isAndroid, isiOS: n.isiOS, isWebView: h(f) }) } }; const qn = ((nn = function () { const e = navigator.userAgent; return $n(e) }, rn = !1, (function () { for (var e = [], n = 0; n < arguments.length; n++)e[n] = arguments[n]; return rn || (rn = !0, tn = nn.apply(null, e)), tn }())).browser.isIE(), (function () { for (let e = [], n = 0; n < arguments.length; n++)e[n] = arguments[n] }('element', 'offset')), function (o) { o.ui.registry.addToggleButton('image', { icon: 'image', tooltip: 'Insert/edit image', onAction: hn(o).open, onSetup(e) { return o.selection.selectorChangedWithUnbind('img:not([data-mce-object],[data-mce-placeholder]),figure.image', e.setActive).unbind } }), o.ui.registry.addMenuItem('image', { icon: 'image', text: 'Image...', onAction: hn(o).open }), o.ui.registry.addContextMenu('image', { update(e) { return Pe(e) || e.nodeName === 'IMG' ? [(i = e, { text: 'Image', icon: 'image', onAction() { let e; let n; let t; const r = ((nn = function () { const e = navigator.userAgent; return $n(e) }, rn = !1, (function () { for (var e = [], n = 0; n < arguments.length; n++)e[n] = arguments[n]; return rn || (rn = !0, tn = nn.apply(null, e)), tn }())).browser.isIE(), (function () { for (let e = [], n = 0; n < arguments.length; n++)e[n] = arguments[n] }('element', 'offset')), e = On.fromDom(i), (n = e, t = n.dom(), y.from(t.parentNode).map(On.fromDom)).filter((e) => e.dom().nodeName.toLowerCase() === 'figure').getOr(e)); o.selection.select(r.dom()), hn(o).open() } })] : []; let i } }) }); i.add('image', (e) => { yn(e), qn(e), vn(e) }), function Vn() {}
}())

!(function () {
  let n; let t; let e; let r; let o; const i = tinymce.util.Tools.resolve('tinymce.PluginManager'); const u = tinymce.util.Tools.resolve('tinymce.util.VK'); const a = function (n) { return n.target_list }; const c = function (n) { return n.rel_list }; const l = function (n) { return n.link_class_list }; const h = function (n) { return typeof n.link_assume_external_targets === 'boolean' && n.link_assume_external_targets }; const f = function (n) { return typeof n.link_context_toolbar === 'boolean' && n.link_context_toolbar }; const s = function (n) { return n.link_list }; const p = function (n) { return typeof n.default_link_target === 'string' }; const v = function (n) { return n.default_link_target }; const d = a; const g = function (n) { return !1 !== a(n) }; const m = c; const y = function (n) { return c(n) !== undefined }; const k = l; const x = function (n) { return l(n) !== undefined }; const b = function (n) { return !1 !== n.link_title }; const O = function (n) { return typeof n.allow_unsafe_link_target === 'boolean' && n.allow_unsafe_link_target }; const w = function (n) { return !0 === n.link_quicklink }; const _ = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils'); const A = tinymce.util.Tools.resolve('tinymce.Env'); const C = function (n) { if (!A.ie || A.ie > 10) { const t = document.createElement('a'); t.target = '_blank', t.href = n, t.rel = 'noreferrer noopener'; const e = document.createEvent('MouseEvents'); e.initMouseEvent('click', !0, !0, window, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null), i = t, u = e, document.body.appendChild(i), i.dispatchEvent(u), document.body.removeChild(i) } else { const r = window.open('', '_blank'); if (r) { r.opener = null; const o = r.document; o.open(), o.write(`<meta http-equiv="refresh" content="0; url=${_.DOM.encode(n)}">`), o.close() } } let i, u }; const T = tinymce.util.Tools.resolve('tinymce.util.Tools'); const N = function (n, t) { let e; let r; const o = ['noopener']; let i = n ? n.split(/\s+/) : []; const u = function (n) { return n.filter((n) => T.inArray(o, n) === -1) }; return (i = t ? (e = u(e = i)).length ? e.concat(o) : o : u(i)).length ? (r = i, T.trim(r.sort().join(' '))) : null }; const S = function (n, t) { return t = t || n.selection.getNode(), D(t) ? n.dom.select('a[href]', t)[0] : n.dom.getParent(t, 'a[href]') }; const M = function (n) { return n && n.nodeName === 'A' && n.href }; var D = function (n) { return n && n.nodeName === 'FIGURE' && /\bimage\b/i.test(n.className) }; const z = function (n, t) { let e, r; (r = n.dom.select('img', t)[0]) && (e = n.dom.getParents(r, 'a[href]', t)[0]) && (e.parentNode.insertBefore(r, e), n.dom.remove(e)) }; const E = function (n, t, e) { let r, o; (o = n.dom.select('img', t)[0]) && (r = n.dom.create('a', e), o.parentNode.insertBefore(r, o), r.appendChild(o)) }; const L = function (o, i) { return function (r) { o.undoManager.transact(() => { const n = o.selection.getNode(); const t = S(o, n); const e = { href: r.href, target: r.target ? r.target : null, rel: r.rel ? r.rel : null, class: r.class ? r.class : null, title: r.title ? r.title : null }; y(o.settings) || !1 !== O(o.settings) || (e.rel = N(e.rel, e.target === '_blank')), r.href === i.href && (i.attach(), i = {}), t ? (o.focus(), r.hasOwnProperty('text') && ('innerText' in t ? t.innerText = r.text : t.textContent = r.text), o.dom.setAttribs(t, e), o.selection.select(t), o.undoManager.add()) : D(n) ? E(o, n, e) : r.hasOwnProperty('text') ? o.insertContent(o.dom.createHTML('a', e, o.dom.encode(r.text))) : o.execCommand('mceInsertLink', !1, e) }) } }; const U = function (t) { return function () { t.undoManager.transact(() => { const n = t.selection.getNode(); D(n) ? z(t, n) : t.execCommand('unlink') }) } }; const P = function (n) { return T.grep(n, M).length > 0 }; const R = function (n) { const t = n.getAttribute('data-mce-href'); return t || n.getAttribute('href') }; const K = function (n) { return !(/</.test(n) && (!/^<a [^>]+>[^<]+<\/a>$/.test(n) || n.indexOf('href=') === -1)) }; const q = S; const I = function (n, t) { const e = t ? t.innerText || t.textContent : n.getContent({ format: 'text' }); return e.replace(/\uFEFF/g, '') }; const j = N; const V = function () { for (let n = [], t = 0; t < arguments.length; t++)n[t] = arguments[t] }; const B = function (n) { return function () { return n } }; const F = B(!1); const W = B(!0); const H = F; const $ = W; const G = function () { return J }; var J = (r = { fold(n, t) { return n() }, is: H, isSome: H, isNone: $, getOr: e = function (n) { return n }, getOrThunk: t = function (n) { return n() }, getOrDie(n) { throw new Error(n || 'error: getOrDie called on none.') }, getOrNull() { return null }, getOrUndefined() { return undefined }, or: e, orThunk: t, map: G, ap: G, each() {}, bind: G, flatten: G, exists: H, forall: $, filter: G, equals: n = function (n) { return n.isNone() }, equals_: n, toArray() { return [] }, toString: B('none()') }, Object.freeze && Object.freeze(r), r); var X = function (e) { const n = function () { return e }; const t = function () { return o }; const r = function (n) { return n(e) }; var o = { fold(n, t) { return t(e) }, is(n) { return e === n }, isSome: $, isNone: H, getOr: n, getOrThunk: n, getOrDie: n, getOrNull: n, getOrUndefined: n, or: t, orThunk: t, map(n) { return X(n(e)) }, ap(n) { return n.fold(G, (n) => X(n(e))) }, each(n) { n(e) }, bind: r, flatten: n, exists: r, forall: r, filter(n) { return n(e) ? o : J }, equals(n) { return n.is(e) }, equals_(n, t) { return n.fold(H, (n) => t(e, n)) }, toArray() { return [e] }, toString() { return `some(${e})` } }; return o }; const Q = { some: X, none: G, from(n) { return n === null || n === undefined ? J : X(n) } }; const Y = function (t) { return function (n) { return (function (n) { if (n === null) return 'null'; const t = typeof n; return t === 'object' && Array.prototype.isPrototypeOf(n) ? 'array' : t === 'object' && String.prototype.isPrototypeOf(n) ? 'string' : t }(n)) === t } }; const Z = Y('string'); const nn = Y('function'); const tn = (o = Array.prototype.indexOf) === undefined ? function (n, t) { return en(n, t) } : function (n, t) { return o.call(n, t) }; var en = function (n, t) { for (let e = 0, r = n.length; e < r; ++e) if (n[e] === t) return e; return -1 }; const rn = Array.prototype.push; const on = function (n) { for (var t = [], e = 0, r = n.length; e < r; ++e) { if (!Array.prototype.isPrototypeOf(n[e])) throw new Error(`Arr.flatten item ${e} was not an array, input: ${n}`); rn.apply(t, n[e]) } return t }; const un = function (n, t) { const e = (function (n, t) { for (var e = n.length, r = new Array(e), o = 0; o < e; o++) { const i = n[o]; r[o] = t(i, o, n) } return r }(n, t)); return on(e) }; const an = (Array.prototype.slice, nn(Array.from) && Array.from, function (n, t) { for (let e = 0; e < n.length; e++) { const r = t(n[e], e); if (r.isSome()) return r } return Q.none() }); const cn = function (n) { return Z(n.value) ? n.value : '' }; const ln = function (e) { return void 0 === e && (e = cn), function (n) { return Q.from(n).map((n) => { return t = n, r = e, o = [], T.each(t, (n) => { const t = Z(n.text) ? n.text : Z(n.title) ? n.title : ''; if (n.menu !== undefined);else { const e = r(n); o.push({ text: t, value: e }) } }), o; let t, r, o }) } }; const fn = { sanitize(n) { return ln(cn)(n) }, sanitizeWith: ln, createUi(t, e) { return function (n) { return { name: t, type: 'selectbox', label: e, items: n } } }, getValue: cn }; var sn = function (n) { let t = n; const e = function () { return t }; return { get: e, set(n) { t = n }, clone() { return sn(e()) } } }; const dn = function (t, n, e, r) { let o; let i; const u = r[n]; const a = t.length > 0; return u !== undefined ? (o = u, i = e, an(i, (n) => Q.some(n).filter((n) => n.value === o))).map((n) => ({ url: { value: n.value, meta: { text: a ? t : n.text, attach: V } }, text: a ? t : n.text })) : Q.none() }; const gn = function (n, i) { const u = sn(n.text); const o = function (n, t) { let e; let r; const o = (e = i, r = t.name, r === 'link' ? e.catalogs.link : r === 'anchor' ? e.catalogs.anchor : Q.none()).getOr([]); return dn(u.get(), t.name, o, n) }; return { onChange(n, t) { return t.name === 'url' ? (function (n) { if (u.get().length <= 0) { const t = n.url.meta.text !== undefined ? n.url.meta.text : n.url.value; return Q.some({ text: t }) } return Q.none() }(n())) : (e = ['anchor', 'link'], r = t.name, tn(e, r) > -1 ? o(n(), t) : (t.name === 'text' && u.set(n().text), Q.none())); let e, r } } }; var mn = function () { return (mn = Object.assign || function (n) { for (var t, e = 1, r = arguments.length; e < r; e++) for (const o in t = arguments[e])Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]); return n }).apply(this, arguments) }; var hn = function (n) { let e = Q.none(); let t = []; const r = function (n) { o() ? u(n) : t.push(n) }; var o = function () { return e.isSome() }; const i = function (n) { !(function (n, t) { for (let e = 0, r = n.length; e < r; e++)t(n[e], e, n) }(n, u)) }; var u = function (t) { e.each((n) => { setTimeout(() => { t(n) }, 0) }) }; return n((n) => { e = Q.some(n), i(t), t = [] }), { get: r, map(e) { return hn((t) => { r((n) => { t(e(n)) }) }) }, isReady: o } }; const pn = { nu: hn, pure(t) { return hn((n) => { n(t) }) } }; var vn = function (t) { const n = function (n) { let r; t((r = n, function () { for (var n = [], t = 0; t < arguments.length; t++)n[t] = arguments[t]; const e = this; setTimeout(() => { r.apply(e, n) }, 0) })) }; const e = function () { return pn.nu(n) }; return { map(r) { return vn((e) => { n((n) => { const t = r(n); e(t) }) }) }, bind(e) { return vn((t) => { n((n) => { e(n).get(t) }) }) }, anonBind(e) { return vn((t) => { n((n) => { e.get(t) }) }) }, toLazy: e, toCached() { let t = null; return vn((n) => { t === null && (t = e()), t.get(n) }) }, get: n } }; const yn = { nu: vn, pure(t) { return vn((n) => { n(t) }) } }; const kn = tinymce.util.Tools.resolve('tinymce.util.Delay'); const xn = function (n) { const t = n.href; return t.indexOf('@') > 0 && t.indexOf('//') === -1 && t.indexOf('mailto:') === -1 ? Q.some({ message: 'The URL you entered seems to be an email address. Do you want to add the required mailto: prefix?', preprocess(n) { return mn({}, n, { href: `mailto:${t}` }) } }) : Q.none() }; const bn = function (u, n, a) { return an([xn, (e = n, function (n) { const t = n.href; return !0 === e && !/^\w+:/i.test(t) || !1 === e && /^\s*www[\.|\d\.]/i.test(t) ? Q.some({ message: 'The URL you entered seems to be an external link. Do you want to add the required http:// prefix?', preprocess(n) { return mn({}, n, { href: `http://${t}` }) } }) : Q.none() })], (n) => n(a)).fold(() => yn.pure(a), (i) => yn.nu((t) => { let e, n, r, o; e = u, n = i.message, r = function (n) { console.log('state', n), t(n ? i.preprocess(a) : a) }, o = e.selection.getRng(), kn.setEditorTimeout(e, () => { e.windowManager.confirm(n, (n) => { e.selection.setRng(o), r(n) }) }) })); let e }; const On = function (n) { const t = n.dom.select('a:not([href])'); const e = un(t, (n) => { const t = n.name || n.id; return t ? [{ text: t, value: `#${t}` }] : [] }); return e.length > 0 ? Q.some([{ text: 'None', value: '' }].concat(e)) : Q.none() }; const wn = function (n) { if (x(n.settings)) { const t = k(n.settings); return fn.sanitize(t) } return Q.none() }; const _n = tinymce.util.Tools.resolve('tinymce.util.XHR'); const An = function (t) { const e = function (n) { return t.convertURL(n.value || n.url, 'href') }; const n = s(t.settings); return yn.nu((t) => { typeof n === 'string' ? _n.send({ url: n, success(n) { return t(function (n) { try { return Q.some(JSON.parse(n)) } catch (t) { return Q.none() } }(n)) }, error(n) { return t(Q.none()) } }) : typeof n === 'function' ? n((n) => t(Q.some(n))) : t(Q.from(n)) }).map((n) => n.bind(fn.sanitizeWith(e))) }; const Cn = function (n, t) { if (y(n.settings)) { const e = m(n.settings); const r = t.is('_blank'); return (!1 === O(n.settings) ? fn.sanitizeWith((n) => j(fn.getValue(n), r)) : fn.sanitize)(e) } return Q.none() }; const Tn = [{ text: 'Current window', value: '' }, { text: 'New window', value: '_blank' }]; const Nn = function (n) { if (g(n.settings)) { const t = d(n.settings); return fn.sanitize(t).orThunk(() => Q.some(Tn)) } return Q.none() }; const Sn = function (n, t, e) { const r = n.getAttrib(t, e); return r !== null && r.length > 0 ? Q.some(r) : Q.none() }; const Mn = function (g, m, h) { return An(g).map((n) => { let t; let e; let r; let o; let i; let u; let a; let c; let l; let f; let s; const d = (e = m, r = h, o = (t = g).selection, i = t.dom, u = K(o.getContent()) ? Q.some(I(o, r)) : Q.none(), a = r ? Q.some(i.getAttrib(r, 'href')) : Q.none(), c = p(e) ? Q.some(v(e)) : Q.none(), l = r ? Q.from(i.getAttrib(r, 'target')) : c, f = Sn(i, r, 'rel'), s = Sn(i, r, 'class'), { url: a, text: u, title: Sn(i, r, 'title'), target: l, rel: f, linkClass: s }); return { anchor: d, catalogs: { targets: Nn(g), rels: Cn(g, d.target), classes: wn(g), anchor: On(g), link: n }, optNode: Q.from(h), flags: { titleEnabled: b(m) } } }) }; const Dn = function (m) { let n, t, e; (t = (n = m).settings, e = q(n), Mn(n, t, e)).map((n) => { let u; let a; let c; let l; let t; let e; let r; let o; let i; let f; let s; let d; const g = (u = m, c = (a = n).anchor.text, l = h(m.settings), function (n) { const t = n.getData(); const e = { href: t.url.value, text: t.text ? t.text : c.getOr(undefined), target: t.target ? t.target : undefined, rel: t.rel ? t.rel : undefined, class: t.classz ? t.classz : undefined, title: t.title ? t.title : undefined }; const r = { href: t.url.value, attach: t.url.meta !== undefined && t.url.meta.attach ? t.url.meta.attach : function () {} }; const o = L(u, r); const i = U(u); if (!t.url.value) return i(), void n.close(); (c.is(t.text) || a.optNode.isNone() && !t.text) && delete e.text, bn(u, l, e).get((n) => { o(n) }), n.close() }); return e = g, o = (t = n).anchor.text.map(() => ({ name: 'text', type: 'input', label: 'Text to display' })).toArray(), i = t.flags.titleEnabled ? [{ name: 'title', type: 'input', label: 'Title' }] : [], f = { url: { value: (r = t).anchor.url.getOr(''), meta: { attach() {}, text: r.anchor.url.fold(() => '', () => r.anchor.text.getOr('')), original: { value: r.anchor.url.getOr('') } } }, text: r.anchor.text.getOr(''), title: r.anchor.title.getOr(''), anchor: r.anchor.url.getOr(''), link: r.anchor.url.getOr(''), rel: r.anchor.rel.getOr(''), target: r.anchor.target.getOr(''), classz: r.anchor.linkClass.getOr('') }, s = gn(f, t), d = t.catalogs, { title: 'Insert/Edit Link', size: 'normal', body: { type: 'panel', items: on([[{ name: 'url', type: 'urlinput', filetype: 'file', label: 'URL' }], o, i, (function (n) { for (var t = [], e = function (n) { t.push(n) }, r = 0; r < n.length; r++)n[r].each(e); return t }([d.anchor.map(fn.createUi('anchor', 'Anchors')), d.rels.map(fn.createUi('rel', 'Rel')), d.targets.map(fn.createUi('target', 'Open link in...')), d.link.map(fn.createUi('link', 'Link list')), d.classes.map(fn.createUi('classz', 'Class'))]))]) }, buttons: [{ type: 'cancel', name: 'cancel', text: 'Cancel' }, { type: 'submit', name: 'save', text: 'Save', primary: !0 }], initialData: f, onChange(t, n) { const e = n.name; s.onChange(t.getData, { name: e }).each((n) => { t.setData(n) }) }, onSubmit: e } }).get((n) => { m.windowManager.open(n) }) }; const zn = function (n, t) { return n.dom.getParent(t, 'a[href]') }; const En = function (n) { return zn(n, n.selection.getStart()) }; const Ln = function (n, t) { if (t) { const e = R(t); if (/^#/.test(e)) { const r = n.$(e); r.length && n.selection.scrollIntoView(r[0], !0) } else C(t.href) } }; const Un = function (n) { return function () { Dn(n) } }; const Pn = function (n) { return function () { Ln(n, En(n)) } }; const Rn = function (r) { r.on('click', (n) => { const t = zn(r, n.target); t && u.metaKeyPressed(n) && (n.preventDefault(), Ln(r, t)) }), r.on('keydown', (n) => { let t; const e = En(r); e && n.keyCode === 13 && !0 === (t = n).altKey && !1 === t.shiftKey && !1 === t.ctrlKey && !1 === t.metaKey && (n.preventDefault(), Ln(r, e)) }) }; const Kn = function (e) { return function (t) { const n = function (n) { return t.setActive(!e.readonly && !!q(e, n.element)) }; return e.on('nodechange', n), function () { return e.off('nodechange', n) } } }; const qn = function (e) { return function (t) { t.setDisabled(!P(e.dom.getParents(e.selection.getStart()))); const n = function (n) { return t.setDisabled(!P(n.parents)) }; return e.on('nodechange', n), function () { return e.off('nodechange', n) } } }; const In = function (n) { n.addCommand('mceLink', () => { w(n.settings) ? n.fire('contexttoolbar-show', { toolbarKey: 'link-form' }) : Un(n)() }) }; const jn = function (n) { n.addShortcut('Meta+K', '', () => { n.execCommand('mceLink') }) }; const Vn = function (n) { n.ui.registry.addToggleButton('link', { icon: 'link', tooltip: 'Insert/edit link', onAction: Un(n), onSetup: Kn(n) }), n.ui.registry.addButton('unlink', { icon: 'unlink', tooltip: 'Remove link', onAction: U(n), onSetup: qn(n) }) }; const Bn = function (n) { n.ui.registry.addMenuItem('openlink', { text: 'Open link', icon: 'new-tab', onAction: Pn(n), onSetup: qn(n) }), n.ui.registry.addMenuItem('link', { icon: 'link', text: 'Link...', shortcut: 'Meta+K', onAction: Un(n) }), n.ui.registry.addMenuItem('unlink', { icon: 'unlink', text: 'Remove link', onAction: U(n), onSetup: qn(n) }) }; const Fn = function (t) { t.ui.registry.addContextMenu('link', { update(n) { return P(t.dom.getParents(n, 'a')) ? 'link unlink openlink' : 'link' } }) }; const Wn = function (i) { i.ui.registry.addContextForm('link-form', { launch: { type: 'contextformtogglebutton', icon: 'link', onSetup: Kn(i) }, label: 'Link', predicate(n) { return !!q(i, n) && f(i.settings) }, initValue() { const n = q(i); return n ? R(n) : '' }, commands: [{ type: 'contextformtogglebutton', icon: 'link', tooltip: 'Link', primary: !0, onSetup(n) { const t = i.selection.getNode(); return n.setActive(!!q(i, t)), Kn(i)(n) }, onAction(n) { const t = q(i); const e = n.getValue(); if (t)i.dom.setAttrib(t, 'href', e), i.selection.collapse(!1), n.hide(); else { const r = { href: e, attach() {} }; const o = K(i.selection.getContent()) ? Q.some(I(i.selection, t)).filter((n) => n.length > 0) : Q.none(); L(i, r)({ href: e, text: o.getOr(e) }), n.hide() } } }, { type: 'contextformtogglebutton', icon: 'unlink', tooltip: 'Remove link', active: !1, onSetup() { return function () {} }, onAction(n) { U(i)(), n.hide() } }] }) }; i.add('link', (n) => { Vn(n), Bn(n), Fn(n), Wn(n), Rn(n), In(n), jn(n) }), function Hn() {}
}())

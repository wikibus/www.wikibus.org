!(function () {
  var r = function (t) { let n = t; const e = function () { return n }; return { get: e, set(t) { n = t }, clone() { return r(e()) } } }; const t = tinymce.util.Tools.resolve('tinymce.PluginManager'); const a = tinymce.util.Tools.resolve('tinymce.util.Tools'); function e(t, n) { return i(document.createElement('canvas'), t, n) } function o(t) { return t.getContext('2d') } function i(t, n, e) { return t.width = n, t.height = e, t } const l = { create: e, clone: function Xt(t) { let n; return o(n = e(t.width, t.height)).drawImage(t, 0, 0), n }, resize: i, get2dContext: o, get3dContext: function Yt(t) { let n = null; try { n = t.getContext('webgl') || t.getContext('experimental-webgl') } catch (e) {} return n || (n = null), n } }; const d = { getWidth: function Qt(t) { return t.naturalWidth || t.width }, getHeight: function Zt(t) { return t.naturalHeight || t.height } }; const h = window.Promise ? window.Promise : (function () { const t = function (t) { if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new'); if (typeof t !== 'function') throw new TypeError('not a function'); this._state = null, this._value = null, this._deferreds = [], f(t, r(o, this), r(u, this)) }; const n = t.immediateFn || typeof window.setImmediate === 'function' && window.setImmediate || function (t) { setTimeout(t, 1) }; function r(t, n) { return function () { t.apply(n, arguments) } } const e = Array.isArray || function (t) { return Object.prototype.toString.call(t) === '[object Array]' }; function i(r) { const o = this; this._state !== null ? n(() => { const t = o._state ? r.onFulfilled : r.onRejected; if (t !== null) { let n; try { n = t(o._value) } catch (e) { return void r.reject(e) }r.resolve(n) } else (o._state ? r.resolve : r.reject)(o._value) }) : this._deferreds.push(r) } function o(t) { try { if (t === this) throw new TypeError('A promise cannot be resolved with itself.'); if (t && (typeof t === 'object' || typeof t === 'function')) { const n = t.then; if (typeof n === 'function') return void f(r(n, t), r(o, this), r(u, this)) } this._state = !0, this._value = t, a.call(this) } catch (e) { u.call(this, e) } } function u(t) { this._state = !1, this._value = t, a.call(this) } function a() { for (let t = 0, n = this._deferreds.length; t < n; t++)i.call(this, this._deferreds[t]); this._deferreds = null } function c(t, n, e, r) { this.onFulfilled = typeof t === 'function' ? t : null, this.onRejected = typeof n === 'function' ? n : null, this.resolve = e, this.reject = r } function f(t, n, e) { let r = !1; try { t((t) => { r || (r = !0, n(t)) }, (t) => { r || (r = !0, e(t)) }) } catch (o) { if (r) return; r = !0, e(o) } } return t.prototype.catch = function (t) { return this.then(null, t) }, t.prototype.then = function (e, r) { const o = this; return new t((t, n) => { i.call(o, new c(e, r, t, n)) }) }, t.all = function () { const c = Array.prototype.slice.call(arguments.length === 1 && e(arguments[0]) ? arguments[0] : arguments); return new t((o, i) => { if (c.length === 0) return o([]); let u = c.length; function a(n, t) { try { if (t && (typeof t === 'object' || typeof t === 'function')) { const e = t.then; if (typeof e === 'function') return void e.call(t, (t) => { a(n, t) }, i) }c[n] = t, --u == 0 && o(c) } catch (r) { i(r) } } for (let t = 0; t < c.length; t++)a(t, c[t]) }) }, t.resolve = function (n) { return n && typeof n === 'object' && n.constructor === t ? n : new t((t) => { t(n) }) }, t.reject = function (e) { return new t((t, n) => { n(e) }) }, t.race = function (o) { return new t((t, n) => { for (let e = 0, r = o.length; e < r; e++)o[e].then(t, n) }) }, t }()); const g = function (t) { return function () { return t } }; function u(r) { for (var o = [], t = 1; t < arguments.length; t++)o[t - 1] = arguments[t]; return function () { for (var t = [], n = 0; n < arguments.length; n++)t[n] = arguments[n]; const e = o.concat(t); return r.apply(null, e) } } let n; let c; let f; let s; const m = g(!1); const p = g(!0); const v = m; const y = p; const b = function () { return w }; var w = (s = { fold(t, n) { return t() }, is: v, isSome: v, isNone: y, getOr: f = function (t) { return t }, getOrThunk: c = function (t) { return t() }, getOrDie(t) { throw new Error(t || 'error: getOrDie called on none.') }, getOrNull() { return null }, getOrUndefined() { return undefined }, or: f, orThunk: c, map: b, ap: b, each() {}, bind: b, flatten: b, exists: v, forall: y, filter: b, equals: n = function (t) { return t.isNone() }, equals_: n, toArray() { return [] }, toString: g('none()') }, Object.freeze && Object.freeze(s), s); var I = function (e) { const t = function () { return e }; const n = function () { return o }; const r = function (t) { return t(e) }; var o = { fold(t, n) { return n(e) }, is(t) { return e === t }, isSome: y, isNone: v, getOr: t, getOrThunk: t, getOrDie: t, getOrNull: t, getOrUndefined: t, or: n, orThunk: n, map(t) { return I(t(e)) }, ap(t) { return t.fold(b, (t) => I(t(e))) }, each(t) { t(e) }, bind: r, flatten: t, exists: r, forall: r, filter(t) { return t(e) ? o : w }, equals(t) { return t.is(e) }, equals_(t, n) { return t.fold(v, (t) => n(e, t)) }, toArray() { return [e] }, toString() { return `some(${e})` } }; return o }; const T = { some: I, none: b, from(t) { return t === null || t === undefined ? w : I(t) } }; const C = typeof window !== 'undefined' ? window : Function('return this;')(); const A = function (t, n) { return (function (t, n) { for (var e = n !== undefined && n !== null ? n : C, r = 0; r < t.length && e !== undefined && e !== null; ++r)e = e[t[r]]; return e }(t.split('.'), n)) }; const j = { getOrDie(t, n) { const e = A(t, n); if (e === undefined || e === null) throw `${t} not available on this browser`; return e } }; function x() { return new (j.getOrDie('FileReader'))() } const _ = { atob(t) { return j.getOrDie('atob')(t) }, requestAnimationFrame(t) { j.getOrDie('requestAnimationFrame')(t) } }; function U(a) { return new h((t, n) => { const e = URL.createObjectURL(a); const r = new Image(); const o = function () { r.removeEventListener('load', i), r.removeEventListener('error', u) }; function i() { o(), t(r) } function u() { o(), n(`Unable to load data of type ${a.type}: ${e}`) }r.addEventListener('load', i), r.addEventListener('error', u), r.src = e, r.complete && i() }) } function O(r) { return new h((t, e) => { const n = new XMLHttpRequest(); n.open('GET', r, !0), n.responseType = 'blob', n.onload = function () { this.status == 200 && t(this.response) }, n.onerror = function () { let t; const n = this; e(this.status === 0 ? ((t = new Error('No access to download image')).code = 18, t.name = 'SecurityError', t) : new Error(`Error ${n.status} downloading image`)) }, n.send() }) } function R(t) { const n = t.split(','); const e = /data:([^;]+)/.exec(n[0]); if (!e) return T.none(); for (var r, o = e[1], i = n[1], u = _.atob(i), a = u.length, c = Math.ceil(a / 1024), f = new Array(c), s = 0; s < c; ++s) { for (var l = 1024 * s, d = Math.min(l + 1024, a), h = new Array(d - l), g = l, m = 0; g < d; ++m, ++g)h[m] = u[g].charCodeAt(0); f[s] = (r = h, new (j.getOrDie('Uint8Array'))(r)) } return T.some(function p(t, n) { return new (j.getOrDie('Blob'))(t, n) }(f, { type: o })) } function B(e) { return new h((t, n) => { R(e).fold(() => { n(`uri is not base64: ${e}`) }, t) }) } function S(e) { return new h((t) => { const n = x(); n.onloadend = function () { t(n.result) }, n.readAsDataURL(e) }) } const D = { blobToImage: U, imageToBlob: function tn(t) { const n = t.src; return n.indexOf('data:') === 0 ? B(n) : O(n) }, blobToArrayBuffer: function nn(e) { return new h((t) => { const n = x(); n.onloadend = function () { t(n.result) }, n.readAsArrayBuffer(e) }) }, blobToDataUri: S, blobToBase64: function en(t) { return S(t).then((t) => t.split(',')[1]) }, dataUriToBlobSync: R, canvasToBlob: function rn(t, e, r) { return e = e || 'image/png', HTMLCanvasElement.prototype.toBlob ? new h((n) => { t.toBlob((t) => { n(t) }, e, r) }) : B(t.toDataURL(e, r)) }, canvasToDataURL: function on(t, n, e) { return n = n || 'image/png', t.then((t) => t.toDataURL(n, e)) }, blobToCanvas: function un(t) { return U(t).then((t) => { let n; return (function e(t) { URL.revokeObjectURL(t.src) }(t)), n = l.create(d.getWidth(t), d.getHeight(t)), l.get2dContext(n).drawImage(t, 0, 0), n }) }, uriToBlob: function an(t) { return t.indexOf('blob:') === 0 ? O(t) : t.indexOf('data:') === 0 ? B(t) : null } }; const E = function (t) { return D.blobToImage(t) }; const L = function (t) { return D.imageToBlob(t) }; function M(t, n, e) { const r = n.type; function o(n, e) { return t.then((t) => D.canvasToDataURL(t, n, e)) } return { getType: g(r), toBlob: function i() { return h.resolve(n) }, toDataURL: function u() { return e }, toBase64: function a() { return e.split(',')[1] }, toAdjustedBlob: function c(n, e) { return t.then((t) => D.canvasToBlob(t, n, e)) }, toAdjustedDataURL: o, toAdjustedBase64: function f(t, n) { return o(t, n).then((t) => t.split(',')[1]) }, toCanvas: function s() { return t.then(l.clone) } } } function P(n) { return D.blobToDataUri(n).then((t) => M(D.blobToCanvas(n), n, t)) } const k = { fromBlob: P, fromCanvas: function cn(n, t) { return D.canvasToBlob(n, t).then((t) => M(h.resolve(n), t, n.toDataURL())) }, fromImage: function fn(t) { return D.imageToBlob(t).then((t) => P(t)) }, fromBlobAndUrlSync(t, n) { return M(D.blobToCanvas(t), t, n) } }; function N(t, n, e) { return e < (t = parseFloat(t)) ? t = e : t < n && (t = n), t } const z = [0, 0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1, 0.11, 0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.2, 0.21, 0.22, 0.24, 0.25, 0.27, 0.28, 0.3, 0.32, 0.34, 0.36, 0.38, 0.4, 0.42, 0.44, 0.46, 0.48, 0.5, 0.53, 0.56, 0.59, 0.62, 0.65, 0.68, 0.71, 0.74, 0.77, 0.8, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98, 1, 1.06, 1.12, 1.18, 1.24, 1.3, 1.36, 1.42, 1.48, 1.54, 1.6, 1.66, 1.72, 1.78, 1.84, 1.9, 1.96, 2, 2.12, 2.25, 2.37, 2.5, 2.62, 2.75, 2.87, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.3, 4.7, 4.9, 5, 5.5, 6, 6.5, 6.8, 7, 7.3, 7.5, 7.8, 8, 8.4, 8.7, 9, 9.4, 9.6, 9.8, 10]; function H(t, n) { let e; let r; let o; let i; const u = []; const a = new Array(10); for (e = 0; e < 5; e++) { for (r = 0; r < 5; r++)u[r] = n[r + 5 * e]; for (r = 0; r < 5; r++) { for (o = i = 0; o < 5; o++)i += t[r + 5 * o] * u[o]; a[r + 5 * e] = i } } return a } function F(t, e) { return e = N(e, 0, 1), t.map((t, n) => n % 6 == 0 ? t = 1 - (1 - t) * e : t *= e, N(t, 0, 1)) } const q = { identity: function sn() { return [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1] }, adjust: F, multiply: H, adjustContrast: function ln(t, n) { let e; return n = N(n, -1, 1), H(t, [(e = (n *= 100) < 0 ? 127 + n / 100 * 127 : 127 * (e = (e = n % 1) == 0 ? z[n] : z[Math.floor(n)] * (1 - e) + z[Math.floor(n) + 1] * e) + 127) / 127, 0, 0, 0, 0.5 * (127 - e), 0, e / 127, 0, 0, 0.5 * (127 - e), 0, 0, e / 127, 0, 0.5 * (127 - e), 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]) }, adjustBrightness: function dn(t, n) { return H(t, [1, 0, 0, 0, n = N(255 * n, -255, 255), 0, 1, 0, 0, n, 0, 0, 1, 0, n, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]) }, adjustSaturation: function hn(t, n) { let e; return H(t, [0.3086 * (1 - (e = 1 + ((n = N(n, -1, 1)) > 0 ? 3 * n : n))) + e, 0.6094 * (1 - e), 0.082 * (1 - e), 0, 0, 0.3086 * (1 - e), 0.6094 * (1 - e) + e, 0.082 * (1 - e), 0, 0, 0.3086 * (1 - e), 0.6094 * (1 - e), 0.082 * (1 - e) + e, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]) }, adjustHue: function gn(t, n) { let e, r, o, i, u; return n = N(n, -180, 180) / 180 * Math.PI, H(t, [(o = 0.213) + 0.787 * (e = Math.cos(n)) + (r = Math.sin(n)) * -o, (i = 0.715) + e * -i + r * -i, (u = 0.072) + e * -u + 0.928 * r, 0, 0, o + e * -o + 0.143 * r, i + e * (1 - i) + 0.14 * r, u + e * -u + -0.283 * r, 0, 0, o + e * -o + -0.787 * r, i + e * -i + r * i, u + 0.928 * e + r * u, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]) }, adjustColors: function mn(t, n, e, r) { return H(t, [n = N(n, 0, 2), 0, 0, 0, 0, 0, e = N(e, 0, 2), 0, 0, 0, 0, 0, r = N(r, 0, 2), 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]) }, adjustSepia: function pn(t, n) { return H(t, F([0.393, 0.769, 0.189, 0, 0, 0.349, 0.686, 0.168, 0, 0, 0.272, 0.534, 0.131, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], n = N(n, 0, 1))) }, adjustGrayscale: function vn(t, n) { return H(t, F([0.33, 0.34, 0.33, 0, 0, 0.33, 0.34, 0.33, 0, 0, 0.33, 0.34, 0.33, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], n = N(n, 0, 1))) } }; function G(n, e) { return n.toCanvas().then((t) => (function i(t, n, e) { let r; const o = l.get2dContext(t); return r = (function U(t, n) { let e; let r; let o; let i; let u; const a = t.data; const c = n[0]; const f = n[1]; const s = n[2]; const l = n[3]; const d = n[4]; const h = n[5]; const g = n[6]; const m = n[7]; const p = n[8]; const v = n[9]; const y = n[10]; const b = n[11]; const w = n[12]; const I = n[13]; const T = n[14]; const C = n[15]; const A = n[16]; const j = n[17]; const x = n[18]; const _ = n[19]; for (u = 0; u < a.length; u += 4)e = a[u], r = a[u + 1], o = a[u + 2], i = a[u + 3], a[u] = e * c + r * f + o * s + i * l + d, a[u + 1] = e * h + r * g + o * m + i * p + v, a[u + 2] = e * y + r * b + o * w + i * I + T, a[u + 3] = e * C + r * A + o * j + i * x + _; return t }(o.getImageData(0, 0, t.width, t.height), e)), o.putImageData(r, 0, 0), k.fromCanvas(t, n) }(t, n.getType(), e))) } function W(n, e) { return n.toCanvas().then((t) => (function u(t, n, e) { let r; let o; const i = l.get2dContext(t); return r = i.getImageData(0, 0, t.width, t.height), o = i.getImageData(0, 0, t.width, t.height), o = (function I(t, n, e) { let r, o, i, u, a, c, f, s, l, d, h, g, m, p, v, y, b; function w(t, n, e) { return e < t ? t = e : t < n && (t = n), t } for (i = Math.round(Math.sqrt(e.length)), u = Math.floor(i / 2), r = t.data, o = n.data, y = t.width, b = t.height, c = 0; c < b; c++) for (a = 0; a < y; a++) { for (f = s = l = 0, h = 0; h < i; h++) for (d = 0; d < i; d++)g = w(a + d - u, 0, y - 1), m = w(c + h - u, 0, b - 1), p = 4 * (m * y + g), v = e[h * i + d], f += r[p] * v, s += r[p + 1] * v, l += r[p + 2] * v; o[p = 4 * (c * y + a)] = w(f, 0, 255), o[p + 1] = w(s, 0, 255), o[p + 2] = w(l, 0, 255) } return n }(r, o, e)), i.putImageData(o, 0, 0), k.fromCanvas(t, n) }(t, n.getType(), e))) } function $(c) { return function (n, e) { return n.toCanvas().then((t) => (function (t, n, e) { let r; let o; const i = l.get2dContext(t); const u = new Array(256); for (o = 0; o < u.length; o++)u[o] = c(o, e); return r = (function a(t, n) { let e; const r = t.data; for (e = 0; e < r.length; e += 4)r[e] = n[r[e]], r[e + 1] = n[r[e + 1]], r[e + 2] = n[r[e + 2]]; return t }(i.getImageData(0, 0, t.width, t.height), u)), i.putImageData(r, 0, 0), k.fromCanvas(t, n) }(t, n.getType(), e))) } } function V(e) { return function (t, n) { return G(t, e(q.identity(), n)) } } function J(n) { return function (t) { return W(t, n) } }(function yn(n) { return function (t) { return G(t, n) } })([-1, 0, 0, 0, 255, 0, -1, 0, 0, 255, 0, 0, -1, 0, 255, 0, 0, 0, 1, 0]), V(q.adjustBrightness), V(q.adjustHue), V(q.adjustSaturation), V(q.adjustContrast), V(q.adjustGrayscale), V(q.adjustSepia), J([0, -1, 0, -1, 5, -1, 0, -1, 0]), J([-2, -1, 0, -1, 1, 1, 0, 1, 2]), $((t, n) => 255 * Math.pow(t / 255, 1 - n)), $((t, n) => 255 * (1 - Math.exp(-t / 255 * n))); let K; const X = { scale: function bn(t, n, e) { const r = d.getWidth(t); const o = d.getHeight(t); let i = n / r; let u = e / o; let a = !1; (i < 0.5 || i > 2) && (i = i < 0.5 ? 0.5 : 2, a = !0), (u < 0.5 || u > 2) && (u = u < 0.5 ? 0.5 : 2, a = !0); const c = (function s(a, c, f) { return new h((t) => { const n = d.getWidth(a); const e = d.getHeight(a); const r = Math.floor(n * c); const o = Math.floor(e * f); const i = l.create(r, o); const u = l.get2dContext(i); u.drawImage(a, 0, 0, n, e, 0, 0, r, o), t(i) }) }(t, i, u)); return a ? c.then((t) => bn(t, n, e)) : c } }; const Y = { rotate: function wn(n, e) { return n.toCanvas().then((t) => (function a(t, n, e) { const r = l.create(t.width, t.height); const o = l.get2dContext(r); let i = 0; let u = 0; return (e = e < 0 ? 360 + e : e) != 90 && e != 270 || l.resize(r, r.height, r.width), e != 90 && e != 180 || (i = r.width), e != 270 && e != 180 || (u = r.height), o.translate(i, u), o.rotate(e * Math.PI / 180), o.drawImage(t, 0, 0), k.fromCanvas(r, n) }(t, n.getType(), e))) }, flip: function In(n, e) { return n.toCanvas().then((t) => (function i(t, n, e) { const r = l.create(t.width, t.height); const o = l.get2dContext(r); return e == 'v' ? (o.scale(1, -1), o.drawImage(t, 0, -r.height)) : (o.scale(-1, 1), o.drawImage(t, -r.width, 0)), k.fromCanvas(r, n) }(t, n.getType(), e))) }, crop: function Tn(n, e, r, o, i) { return n.toCanvas().then((t) => (function a(t, n, e, r, o, i) { const u = l.create(o, i); return l.get2dContext(u).drawImage(t, -e, -r), k.fromCanvas(u, n) }(t, n.getType(), e, r, o, i))) }, resize: function Cn(n, e, r) { return n.toCanvas().then((t) => X.scale(t, e, r).then((t) => k.fromCanvas(t, n.getType()))) } }; const Q = ((function () { function t(t) { this.littleEndian = !1, this._dv = new DataView(t) }t.prototype.readByteAt = function (t) { return this._dv.getUint8(t) }, t.prototype.read = function (t, n) { if (t + n > this.length()) return null; for (var e = this.littleEndian ? 0 : -8 * (n - 1), r = 0, o = 0; r < n; r++)o |= this.readByteAt(t + r) << Math.abs(e + 8 * r); return o }, t.prototype.BYTE = function (t) { return this.read(t, 1) }, t.prototype.SHORT = function (t) { return this.read(t, 2) }, t.prototype.LONG = function (t) { return this.read(t, 4) }, t.prototype.SLONG = function (t) { const n = this.read(t, 4); return n > 2147483647 ? n - 4294967296 : n }, t.prototype.CHAR = function (t) { return String.fromCharCode(this.read(t, 1)) }, t.prototype.STRING = function (t, n) { return this.asArray('CHAR', t, n).join('') }, t.prototype.SEGMENT = function (t, n) { const e = this._dv.buffer; switch (arguments.length) { case 2:return e.slice(t, t + n); case 1:return e.slice(t); default:return e } }, t.prototype.asArray = function (t, n, e) { for (var r = [], o = 0; o < e; o++)r[o] = this[t](n + o); return r }, t.prototype.length = function () { return this._dv ? this._dv.byteLength : 0 } }()), function (t, n) { return Y.rotate(t, n) }); const Z = function (t, n) { return Y.flip(t, n) }; const tt = Q; const nt = function (t) { return k.fromBlob(t) }; const et = function () { return j.getOrDie('URL') }; const rt = function (t) { return et().createObjectURL(t) }; const ot = function (t) { et().revokeObjectURL(t) }; const it = tinymce.util.Tools.resolve('tinymce.util.Delay'); const ut = tinymce.util.Tools.resolve('tinymce.util.Promise'); const at = tinymce.util.Tools.resolve('tinymce.util.URI'); const ct = { getImageSize: function An(t) { let n, e; function r(t) { return /^[0-9\.]+px$/.test(t) } return n = t.style.width, e = t.style.height, n || e ? r(n) && r(e) ? { w: parseInt(n, 10), h: parseInt(e, 10) } : null : (n = t.width, e = t.height, n && e ? { w: parseInt(n, 10), h: parseInt(e, 10) } : null) }, setImageSize: function jn(t, n) { let e, r; n && (e = t.style.width, r = t.style.height, (e || r) && (t.style.width = `${n.w}px`, t.style.height = `${n.h}px`, t.removeAttribute('data-mce-style')), e = t.width, r = t.height, (e || r) && (t.setAttribute('width', n.w), t.setAttribute('height', n.h))) }, getNaturalImageSize: function xn(t) { return { w: t.naturalWidth, h: t.naturalHeight } } }; const ft = (K = 'function', function (t) { return (function (t) { if (t === null) return 'null'; const n = typeof t; return n === 'object' && Array.prototype.isPrototypeOf(t) ? 'array' : n === 'object' && String.prototype.isPrototypeOf(t) ? 'string' : n }(t)) === K }); const st = function (t, n) { for (let e = 0, r = t.length; e < r; e++) { const o = t[e]; if (n(o, e, t)) return T.some(o) } return T.none() }; Array.prototype.slice; ft(Array.from) && Array.from; const lt = function (t) { return t !== null && t !== undefined }; const dt = function (t, n) { let e; return e = n.reduce((t, n) => lt(t) ? t[n] : undefined, t), lt(e) ? e : null }; const ht = function (n) { return new ut((e) => { const t = x(); t.onload = function (t) { const n = t.target; e(n.result) }, t.readAsText(n) }) }; const gt = function (r, o, i) { return new ut((t) => { let e; (e = (function n() { return new (j.getOrDie('XMLHttpRequest'))() }())).onreadystatechange = function () { e.readyState === 4 && t({ status: e.status, blob: this.response }) }, e.open('GET', r, !0), e.withCredentials = i, a.each(o, (t, n) => { e.setRequestHeader(n, t) }), e.responseType = 'blob', e.send() }) }; const mt = function (t) { let n; try { n = JSON.parse(t) } catch (e) {} return n }; const pt = [{ code: 404, message: 'Could not find Image Proxy' }, { code: 403, message: 'Rejected request' }, { code: 0, message: 'Incorrect Image Proxy URL' }]; const vt = [{ type: 'key_missing', message: 'The request did not include an api key.' }, { type: 'key_not_found', message: 'The provided api key could not be found.' }, { type: 'domain_not_trusted', message: 'The api key is not valid for the request origins.' }]; const yt = function (n) { return `ImageProxy HTTP error: ${st(pt, (t) => n === t.code).fold(g('Unknown ImageProxy error'), (t) => t.message)}` }; const bt = function (t) { const n = yt(t); return ut.reject(n) }; const wt = function (n) { return st(vt, (t) => t.type === n).fold(g('Unknown service error'), (t) => t.message) }; const It = function (t, n) { return ht(n).then((t) => { let n; let e; const r = (n = mt(t), `ImageProxy Service error: ${(e = dt(n, ['error', 'type'])) ? wt(e) : 'Invalid JSON in service error message'}`); return ut.reject(r) }) }; const Tt = function (t, n) { return (e = t) === 400 || e === 403 || e === 500 ? It(0, n) : bt(t); let e }; const Ct = bt; const At = function (t, n) { let e; let r; let o; const i = { 'Content-Type': 'application/json;charset=UTF-8', 'tiny-api-key': n }; return gt((e = t, r = n, o = e.indexOf('?') === -1 ? '?' : '&', /[?&]apiKey=/.test(e) || !r ? e : `${e + o}apiKey=${encodeURIComponent(r)}`), i, !1).then((t) => t.status < 200 || t.status >= 300 ? Tt(t.status, t.blob) : ut.resolve(t.blob)) }; const jt = function (t, n, e) { return n ? At(t, n) : (function r(t, n) { return gt(t, {}, n).then((t) => t.status < 200 || t.status >= 300 ? Ct(t.status) : ut.resolve(t.blob)) }(t, e)) }; let xt = 0; const _t = function (t) { return t.selection.getNode() }; const Ut = function (t, n) { const e = n.src; return e.indexOf('data:') === 0 || e.indexOf('blob:') === 0 || new at(e).host === t.documentBaseURI.host }; const Ot = function (t, n) { return a.inArray(t.getParam('imagetools_cors_hosts', [], 'string[]'), new at(n.src).host) !== -1 }; const Rt = function (t, n) { let e; let r; let o; let i; let u = n.src; return Ot(t, n) ? jt(n.src, null, (r = t, o = n, a.inArray(r.getParam('imagetools_credentials_hosts', [], 'string[]'), new at(o.src).host) !== -1)) : Ut(t, n) ? L(n) : (u = t.getParam('imagetools_proxy'), u += `${u.indexOf('?') === -1 ? '?' : '&'}url=${encodeURIComponent(n.src)}`, e = (i = t).getParam('api_key', i.getParam('imagetools_api_key', '', 'string'), 'string'), jt(u, e, !1)) }; const Bt = function (t) { let n; return (n = t.editorUpload.blobCache.getByUri(_t(t).src)) ? ut.resolve(n.blob()) : Rt(t, _t(t)) }; const St = function (t) { clearTimeout(t.get()) }; const Dt = function (c, f, s, l, d) { return f.toBlob().then((t) => { let n, e, r, o, i, u, a; return r = c.editorUpload.blobCache, n = (i = _t(c)).src, c.getParam('images_reuse_filename', !1, 'boolean') && (e = (o = r.getByUri(n)) ? (n = o.uri(), o.name()) : (u = c, (a = n.match(/\/([^\/\?]+)?\.(?:jpeg|jpg|png|gif)(?:\?|$)/i)) ? u.dom.encode(a[1]) : null)), o = r.create({ id: `imagetools${xt++}`, blob: t, base64: f.toBase64(), uri: n, name: e }), r.add(o), c.undoManager.transact(() => { c.$(i).on('load', function r() { let t, n, e; c.$(i).off('load', r), c.nodeChanged(), s ? c.editorUpload.uploadImagesAuto() : (St(l), t = c, n = l, e = it.setEditorTimeout(t, () => { t.editorUpload.uploadImagesAuto() }, t.getParam('images_upload_timeout', 3e4, 'number')), n.set(e)) }), d && c.$(i).attr({ width: d.w, height: d.h }), c.$(i).attr({ src: o.blobUri() }).removeAttr('data-mce-src') }), o }) }; const Et = function (e, n, t, r) { return function () { return e._scanForImages().then(u(Bt, e)).then(nt).then(t).then((t) => Dt(e, t, !1, n, r), (t) => { let n; n = t, e.notificationManager.open({ text: n, type: 'error' }) }) } }; const Lt = function (e, r, o) { return function () { const t = ct.getImageSize(_t(e)); const n = t ? { w: t.h, h: t.w } : null; return Et(e, r, (t) => tt(t, o), n)() } }; const Mt = function (t, n, e) { return function () { return Et(t, n, (t) => Z(t, e))() } }; const Pt = function (t, n) { return t.dom.is(n, 'img:not([data-mce-object],[data-mce-placeholder])') && (Ut(t, n) || Ot(t, n) || t.settings.imagetools_proxy) }; const kt = St; const Nt = Bt; const zt = _t; const Ht = function (n, e, r, o, i) { return new ut((t) => { E(i).then((t) => { const n = ct.getNaturalImageSize(t); return o.w === n.w && o.h === n.h || ct.getImageSize(r) && ct.setImageSize(r, n), ot(t.src), i }).then(nt).then((t) => Dt(n, t, !0, e), () => {}) }) }; const Ft = g('save-state'); const qt = g('disable'); const Gt = g('enable'); const Wt = function (i, u) { return function () { const r = zt(i); const o = ct.getNaturalImageSize(r); const t = zt(i); Pt(i, t) && Nt(i).then((t) => { let n; const e = { blob: n = t, url: rt(n) }; i.windowManager.open({ title: 'Edit Image', size: 'large', body: { type: 'panel', items: [{ type: 'imagetools', name: 'imagetools', label: 'Edit Image', currentState: e }] }, buttons: [{ type: 'cancel', name: 'cancel', text: 'Cancel' }, { type: 'submit', name: 'save', text: 'Save', primary: !0, disabled: !0 }], onSubmit(t) { const n = t.getData().imagetools.blob; Ht(i, u, r, o, n), t.close() }, onCancel() {}, onAction(t, n) { switch (n.name) { case Ft():n.value ? t.enable('save') : t.disable('save'); break; case qt():t.block('Updating image'), t.disable('save'), t.disable('cancel'); break; case Gt():t.unblock(), t.enable('cancel') } } }) }) } }; const $t = function (e, t) { a.each({ mceImageRotateLeft: Lt(e, t, -90), mceImageRotateRight: Lt(e, t, 90), mceImageFlipVertical: Mt(e, t, 'v'), mceImageFlipHorizontal: Mt(e, t, 'h'), mceEditImage: Wt(e, t) }, (t, n) => { e.addCommand(n, t) }) }; const Vt = function (e, r, o) { e.on('NodeChange', (t) => { const n = o.get(); n && n.src !== t.element.src && (kt(r), e.editorUpload.uploadImagesAuto(), o.set(null)), Pt(e, t.element) && o.set(t.element) }) }; const Jt = function (r) { const n = function (t) { return function () { return r.execCommand(t) } }; r.ui.registry.addButton('rotateleft', { tooltip: 'Rotate counterclockwise', icon: 'rotate-left', onAction: n('mceImageRotateLeft') }), r.ui.registry.addButton('rotateright', { tooltip: 'Rotate clockwise', icon: 'rotate-right', onAction: n('mceImageRotateRight') }), r.ui.registry.addButton('flipv', { tooltip: 'Flip vertically', icon: 'flip-vertically', onAction: n('mceImageFlipVertical') }), r.ui.registry.addButton('fliph', { tooltip: 'Flip horizontally', icon: 'flip-horizontally', onAction: n('mceImageFlipHorizontal') }), r.ui.registry.addButton('editimage', { tooltip: 'Edit image', icon: 'edit-image', onAction: n('mceEditImage'), onSetup(e) { const t = function () { const t = zt(r); const n = !Pt(r, t); e.setDisabled(n) }; return r.on('NodeChange', t), function () { r.off('NodeChange', t) } } }), r.ui.registry.addButton('imageoptions', { tooltip: 'Image options', icon: 'image-options', onAction: n('mceImage') }), r.ui.registry.addContextMenu('imagetools', { update(t) { return Pt(r, t) ? [{ text: 'Edit image', icon: 'edit-image', onAction: n('mceEditImage') }] : [] } }) }; const Kt = function (t) { let n; t.ui.registry.addContextToolbar('imagetools', { items: (n = t, n.getParam('imagetools_toolbar', 'rotateleft rotateright flipv fliph crop editimage imageoptions')), predicate: u(Pt, t), position: 'node', scope: 'node' }) }; t.add('imagetools', (t) => { const n = r(0); const e = r(null); $t(t, n), Jt(t), Kt(t), Vt(t, n, e) }), function _n() {}
}())

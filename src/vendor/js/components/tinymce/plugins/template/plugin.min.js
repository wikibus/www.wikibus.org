!(function () {
  let e; let t; let n; let r; let a; const o = tinymce.util.Tools.resolve('tinymce.PluginManager'); const u = function (e) { return function () { return e } }; const i = u(!1); const c = u(!0); const f = tinymce.util.Tools.resolve('tinymce.util.Tools'); const p = tinymce.util.Tools.resolve('tinymce.util.XHR'); const l = function (e) { return e.getParam('template_cdate_classes', 'cdate') }; const s = function (e) { return e.getParam('template_mdate_classes', 'mdate') }; const m = function (e) { return e.getParam('template_selected_content_classes', 'selcontent') }; const d = function (e) { return e.getParam('template_preview_replace_values') }; const g = function (e) { return e.getParam('template_replace_values') }; const y = function (e) { return e.templates }; const v = function (e) { return e.getParam('template_cdate_format', e.translate('%Y-%m-%d')) }; const h = function (e) { return e.getParam('template_mdate_format', e.translate('%Y-%m-%d')) }; const b = function (e, t) { if ((e = `${e}`).length < t) for (let n = 0; n < t - e.length; n++)e = `0${e}`; return e }; const T = function (e, t, n) { const r = 'Sun Mon Tue Wed Thu Fri Sat Sun'.split(' '); const a = 'Sunday Monday Tuesday Wednesday Thursday Friday Saturday Sunday'.split(' '); const o = 'Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec'.split(' '); const u = 'January February March April May June July August September October November December'.split(' '); return n = n || new Date(), t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = t.replace('%D', '%m/%d/%Y')).replace('%r', '%I:%M:%S %p')).replace('%Y', `${n.getFullYear()}`)).replace('%y', `${n.getYear()}`)).replace('%m', b(n.getMonth() + 1, 2))).replace('%d', b(n.getDate(), 2))).replace('%H', `${b(n.getHours(), 2)}`)).replace('%M', `${b(n.getMinutes(), 2)}`)).replace('%S', `${b(n.getSeconds(), 2)}`)).replace('%I', `${(n.getHours() + 11) % 12 + 1}`)).replace('%p', n.getHours() < 12 ? 'AM' : 'PM')).replace('%B', `${e.translate(u[n.getMonth()])}`)).replace('%b', `${e.translate(o[n.getMonth()])}`)).replace('%A', `${e.translate(a[n.getDay()])}`)).replace('%a', `${e.translate(r[n.getDay()])}`)).replace('%%', '%') }; const M = function (n, e) { return f.each(e, (e, t) => { typeof e === 'function' && (e = e(t)), n = n.replace(new RegExp(`\\{\\$${t}\\}`, 'g'), e) }), n }; const _ = function (e, t) { const r = e.dom; const a = g(e); f.each(r.select('*', t), (n) => { f.each(a, (e, t) => { r.hasClass(n, t) && typeof a[t] === 'function' && a[t](n) }) }) }; const x = function (e, t) { return new RegExp(`\\b${t}\\b`, 'g').test(e.className) }; const O = function (t, n) { return function () { const e = y(t); typeof e !== 'function' ? typeof e === 'string' ? p.send({ url: e, success(e) { n(JSON.parse(e)) } }) : n(e) : e(n) } }; const S = M; const P = _; const A = function (t, e, n) { let r; let a; const o = t.dom; const u = t.selection.getContent(); n = M(n, g(t)), r = o.create('div', null, n), (a = o.select('.mceTmpl', r)) && a.length > 0 && (r = o.create('div', null)).appendChild(a[0].cloneNode(!0)), f.each(o.select('*', r), (e) => { x(e, l(t).replace(/\s+/g, '|')) && (e.innerHTML = T(t, v(t))), x(e, s(t).replace(/\s+/g, '|')) && (e.innerHTML = T(t, h(t))), x(e, m(t).replace(/\s+/g, '|')) && (e.innerHTML = u) }), _(t, r), t.execCommand('mceInsertContent', !1, r.innerHTML), t.addVisual() }; const w = function (e) { e.addCommand('mceInsertTemplate', (function t(r) { for (var a = [], e = 1; e < arguments.length; e++)a[e - 1] = arguments[e]; return function () { for (var e = [], t = 0; t < arguments.length; t++)e[t] = arguments[t]; const n = a.concat(e); return r.apply(null, n) } }(A, e))) }; const D = function (r) { r.on('PreProcess', (e) => { const t = r.dom; const n = h(r); f.each(t.select('div', e.node), (e) => { t.hasClass(e, 'mceTmpl') && (f.each(t.select('*', e), (e) => { t.hasClass(e, r.getParam('template_mdate_classes', 'mdate').replace(/\s+/g, '|')) && (e.innerHTML = T(r, n)) }), P(r, e)) }) }) }; const C = i; const N = c; const H = function () { return k }; var k = (r = { fold(e, t) { return e() }, is: C, isSome: C, isNone: N, getOr: n = function (e) { return e }, getOrThunk: t = function (e) { return e() }, getOrDie(e) { throw new Error(e || 'error: getOrDie called on none.') }, getOrNull() { return null }, getOrUndefined() { return undefined }, or: n, orThunk: t, map: H, ap: H, each() {}, bind: H, flatten: H, exists: C, forall: N, filter: H, equals: e = function (e) { return e.isNone() }, equals_: e, toArray() { return [] }, toString: u('none()') }, Object.freeze && Object.freeze(r), r); var I = function (n) { const e = function () { return n }; const t = function () { return a }; const r = function (e) { return e(n) }; var a = { fold(e, t) { return t(n) }, is(e) { return n === e }, isSome: N, isNone: C, getOr: e, getOrThunk: e, getOrDie: e, getOrNull: e, getOrUndefined: e, or: t, orThunk: t, map(e) { return I(e(n)) }, ap(e) { return e.fold(H, (e) => I(e(n))) }, each(e) { e(n) }, bind: r, flatten: e, exists: r, forall: r, filter(e) { return e(n) ? a : k }, equals(e) { return e.is(n) }, equals_(e, t) { return e.fold(C, (e) => t(n, e)) }, toArray() { return [n] }, toString() { return `some(${n})` } }; return a }; const J = { some: I, none: H, from(e) { return e === null || e === undefined ? k : I(e) } }; const L = (a = 'function', function (e) { return (function (e) { if (e === null) return 'null'; const t = typeof e; return t === 'object' && Array.prototype.isPrototypeOf(e) ? 'array' : t === 'object' && String.prototype.isPrototypeOf(e) ? 'string' : t }(e)) === a }); const Y = (Array.prototype.slice, L(Array.from) && Array.from, tinymce.util.Tools.resolve('tinymce.util.Promise')); const F = function (t, e) { if (e.indexOf('<html>') === -1) { let n = ''; f.each(t.contentCSS, (e) => { n += `<link type="text/css" rel="stylesheet" href="${t.documentBaseURI.toAbsolute(e)}">` }); let r = t.settings.body_class || ''; r.indexOf('=') !== -1 && (r = (r = t.getParam('body_class', '', 'hash'))[t.id] || ''), e = `<!DOCTYPE html><html><head>${n}</head><body class="${r}">${e}</body></html>` } return S(e, d(t)) }; const j = function (c, t) { const e = function (e) { return (function (e, t) { for (var n = e.length, r = new Array(n), a = 0; a < n; a++) { const o = e[a]; r[a] = t(o, a, e) } return r }(e, (e) => ({ text: e.text, value: e.text }))) }; const l = function (e, t) { return (function (e, t) { for (let n = 0, r = e.length; n < r; n++) { const a = e[n]; if (t(a, n, e)) return J.some(a) } return J.none() }(e, (e) => e.text === t)) }; const s = function (e) { return new Y((t, n) => { e.value.url ? p.send({ url: e.value.url, success(e) { t(e) }, error(e) { n(e) } }) : t(e.value.content) }) }; (function () { if (t && t.length !== 0) return J.from(f.map(t, (e, t) => ({ selected: t === 0, text: e.title, value: { url: e.url, content: e.content, description: e.description } }))); const e = c.translate('No templates defined.'); return c.notificationManager.open({ text: e, type: 'info' }), J.none() })().each((a) => { const o = e(a); const u = function (e, t) { return { title: 'Insert Template', size: 'large', body: { type: 'panel', items: e }, initialData: t, buttons: [{ type: 'cancel', name: 'cancel', text: 'Cancel' }, { type: 'submit', name: 'save', text: 'Save', primary: !0 }], onSubmit: (n = a, function (t) { const e = t.getData(); l(n, e.template).each((e) => { s(e).then((e) => { A(c, !1, e), t.close() }) }) }), onChange: (r = a, function (n, e) { if (e.name === 'template') { const t = n.getData().template; l(r, t).each((e) => { n.block('Loading...'), s(e).then((e) => { const t = F(c, e); n.setData({ preview: t }), n.unblock() }) }) } }) }; let r, n }; const i = c.windowManager.open(u([], { template: '', preview: '' })); i.block('Loading...'), s(a[0]).then((e) => { const t = F(c, e); const n = [{ type: 'selectbox', name: 'template', label: 'Templates', items: o }, { label: 'Preview', type: 'iframe', name: 'preview', flex: !0, sandboxed: !1 }]; const r = { template: a[0].text, preview: t }; i.unblock(), i.redial(u(n, r)), i.focus('template') }) }) }; const q = function (t) { return function (e) { j(t, e) } }; const E = function (e) { e.ui.registry.addButton('template', { icon: 'template', tooltip: 'Insert template', onAction: O(e.settings, q(e)) }), e.ui.registry.addMenuItem('template', { icon: 'template', text: 'Insert template...', onAction: O(e.settings, q(e)) }) }; o.add('template', (e) => { E(e), w(e), D(e) }), function R() {}
}())
